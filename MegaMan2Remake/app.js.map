{"version":3,"file":"app.js","mappings":"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","sources":["webpack://phaser-3-vsc-typescript-nodejs/./src/ts/main.ts","webpack://phaser-3-vsc-typescript-nodejs/./src/ts/states/boot.ts","webpack://phaser-3-vsc-typescript-nodejs/./src/ts/konstants.ts","webpack://phaser-3-vsc-typescript-nodejs/./src/ts/saveGame.ts","webpack://phaser-3-vsc-typescript-nodejs/./src/ts/weapon/weapon.ts","webpack://phaser-3-vsc-typescript-nodejs/./src/ts/debug.ts","webpack://phaser-3-vsc-typescript-nodejs/./src/ts/gameData.ts","webpack://phaser-3-vsc-typescript-nodejs/./src/ts/managers/levelManager.ts","webpack://phaser-3-vsc-typescript-nodejs/./src/ts/states/title.ts","webpack://phaser-3-vsc-typescript-nodejs/./src/ts/states/stageSelect.ts","webpack://phaser-3-vsc-typescript-nodejs/./src/ts/util/v2.ts","webpack://phaser-3-vsc-typescript-nodejs/./src/ts/catmull/catmull.ts","webpack://phaser-3-vsc-typescript-nodejs/./src/ts/states/game.ts","webpack://phaser-3-vsc-typescript-nodejs/./src/ts/world.ts","webpack://phaser-3-vsc-typescript-nodejs/./src/ts/managers/entityManager.ts","webpack://phaser-3-vsc-typescript-nodejs/./src/ts/player.ts","webpack://phaser-3-vsc-typescript-nodejs/./src/ts/entity.ts","webpack://phaser-3-vsc-typescript-nodejs/./src/ts/sat2d/sat2d.ts","webpack://phaser-3-vsc-typescript-nodejs/./src/ts/sat2d/rayIntersection.ts","webpack://phaser-3-vsc-typescript-nodejs/./src/ts/sat2d/ray.ts","webpack://phaser-3-vsc-typescript-nodejs/./src/ts/sat2d/vector2.ts","webpack://phaser-3-vsc-typescript-nodejs/./src/ts/sat2d/rayCollision.ts","webpack://phaser-3-vsc-typescript-nodejs/./src/ts/sat2d/shape.ts","webpack://phaser-3-vsc-typescript-nodejs/./src/ts/sat2d/shapeCollision.ts","webpack://phaser-3-vsc-typescript-nodejs/./src/ts/helper.ts","webpack://phaser-3-vsc-typescript-nodejs/./src/ts/ui/meter.ts","webpack://phaser-3-vsc-typescript-nodejs/./src/ts/playerInput.ts","webpack://phaser-3-vsc-typescript-nodejs/./src/ts/input.ts","webpack://phaser-3-vsc-typescript-nodejs/./src/ts/playerGraphics.ts","webpack://phaser-3-vsc-typescript-nodejs/./src/ts/graphics.ts","webpack://phaser-3-vsc-typescript-nodejs/./src/ts/enemies/blader.ts","webpack://phaser-3-vsc-typescript-nodejs/./src/ts/enemies/enemy.ts","webpack://phaser-3-vsc-typescript-nodejs/./src/ts/frozen.ts","webpack://phaser-3-vsc-typescript-nodejs/./src/ts/fsm/stateMachine.ts","webpack://phaser-3-vsc-typescript-nodejs/./src/ts/util/mathutil.ts","webpack://phaser-3-vsc-typescript-nodejs/./src/ts/enemies/met.ts","webpack://phaser-3-vsc-typescript-nodejs/./src/ts/enemies/beak.ts","webpack://phaser-3-vsc-typescript-nodejs/./src/ts/enemies/sniperJoe.ts","webpack://phaser-3-vsc-typescript-nodejs/./src/ts/enemies/bombomb.ts","webpack://phaser-3-vsc-typescript-nodejs/./src/ts/enemies/bombomb_shrapnel.ts","webpack://phaser-3-vsc-typescript-nodejs/./src/ts/enemies/spine.ts","webpack://phaser-3-vsc-typescript-nodejs/./src/ts/enemies/octopusBattery.ts","webpack://phaser-3-vsc-typescript-nodejs/./src/ts/enemies/killerBullet.ts","webpack://phaser-3-vsc-typescript-nodejs/./src/ts/enemies/explosion.ts","webpack://phaser-3-vsc-typescript-nodejs/./src/ts/enemies/screw_bomber.ts","webpack://phaser-3-vsc-typescript-nodejs/./src/ts/enemies/super_cutter.ts","webpack://phaser-3-vsc-typescript-nodejs/./src/ts/enemies/watcher.ts","webpack://phaser-3-vsc-typescript-nodejs/./src/ts/enemies/peng.ts","webpack://phaser-3-vsc-typescript-nodejs/./src/ts/enemies/big_eye.ts","webpack://phaser-3-vsc-typescript-nodejs/./src/ts/bullets/bullet.ts","webpack://phaser-3-vsc-typescript-nodejs/./src/ts/enemies/flea.ts","webpack://phaser-3-vsc-typescript-nodejs/./src/ts/enemies/flying_shell.ts","webpack://phaser-3-vsc-typescript-nodejs/./src/ts/spike.ts","webpack://phaser-3-vsc-typescript-nodejs/./src/ts/enemies/bosses/cut_man.ts","webpack://phaser-3-vsc-typescript-nodejs/./src/ts/enemies/bosses/boss.ts","webpack://phaser-3-vsc-typescript-nodejs/./src/ts/bullets/cutManBullet.ts","webpack://phaser-3-vsc-typescript-nodejs/./src/ts/bullets/boomerangBulletMovement.ts","webpack://phaser-3-vsc-typescript-nodejs/./src/ts/enemies/bosses/guts_man.ts","webpack://phaser-3-vsc-typescript-nodejs/./src/ts/enemies/bosses/ice_man.ts","webpack://phaser-3-vsc-typescript-nodejs/./src/ts/powerups/powerup.ts","webpack://phaser-3-vsc-typescript-nodejs/./src/ts/platforms/vanishingBlock.ts","webpack://phaser-3-vsc-typescript-nodejs/./src/ts/bullets/pick.ts","webpack://phaser-3-vsc-typescript-nodejs/./src/ts/bullets/pickBulletMovement.ts","webpack://phaser-3-vsc-typescript-nodejs/./src/ts/bullets/throwableObject.ts","webpack://phaser-3-vsc-typescript-nodejs/./src/ts/platforms/drop_lift.ts","webpack://phaser-3-vsc-typescript-nodejs/./src/ts/enemies/picket_man.ts","webpack://phaser-3-vsc-typescript-nodejs/./src/ts/enemies/crazy_razy.ts","webpack://phaser-3-vsc-typescript-nodejs/./src/ts/enemies/crazy_razy_fly.ts","webpack://phaser-3-vsc-typescript-nodejs/./src/ts/enemies/foot_holder.ts","webpack://phaser-3-vsc-typescript-nodejs/./src/ts/managers/collisionManager.ts","webpack://phaser-3-vsc-typescript-nodejs/./src/ts/sat2d/polygon.ts","webpack://phaser-3-vsc-typescript-nodejs/./src/ts/managers/dropManager.ts","webpack://phaser-3-vsc-typescript-nodejs/./src/ts/managers/inventoryManager.ts","webpack://phaser-3-vsc-typescript-nodejs/./src/ts/weapon/bombManWeapon.ts","webpack://phaser-3-vsc-typescript-nodejs/./src/ts/weapon/elecManWeapon.ts","webpack://phaser-3-vsc-typescript-nodejs/./src/ts/weapon/gutsManWeapon.ts","webpack://phaser-3-vsc-typescript-nodejs/./src/ts/weapon/iceManWeapon.ts","webpack://phaser-3-vsc-typescript-nodejs/./src/ts/weapon/cutManWeapon.ts","webpack://phaser-3-vsc-typescript-nodejs/./src/ts/bullets/splineBulletMovement.ts","webpack://phaser-3-vsc-typescript-nodejs/./src/ts/weapon/fireManWeapon.ts","webpack://phaser-3-vsc-typescript-nodejs/./src/ts/weapon/lemonWeapon.ts","webpack://phaser-3-vsc-typescript-nodejs/./src/ts/managers/vanishingBlockManager.ts","webpack://phaser-3-vsc-typescript-nodejs/./src/ts/managers/debugDrawManager.ts","webpack://phaser-3-vsc-typescript-nodejs/./src/ts/camera.ts","webpack://phaser-3-vsc-typescript-nodejs/./src/ts/spawner.ts","webpack://phaser-3-vsc-typescript-nodejs/webpack/bootstrap","webpack://phaser-3-vsc-typescript-nodejs/webpack/before-startup","webpack://phaser-3-vsc-typescript-nodejs/webpack/startup","webpack://phaser-3-vsc-typescript-nodejs/webpack/after-startup"],"sourcesContent":["/**\r\n * 2017-08-29\r\n * -First.\r\n * -Player,States,Input,PlayerInputGraphics,PlayerGraphics\r\n * -Player moving, jumping etc\r\n * -Pretty much copied whatever is relevant from beatemup.\r\n * \r\n * 2017-08-30\r\n * -Made a tiled map. A screen is 16 tiles wide and 15 tiles high (16 x 15).\r\n * \r\n * 2017-08-31\r\n * -Did a lot.\r\n * \r\n * 2017-09-01\r\n * -The tile sprites are 16 by 16. A screen consists of 16 tiles horizontally and 15 tiles vertically. This means\r\n *      the screen is 256 x 240. The screen is small.\r\n * -CSS controls the size of the canvas through max-width and max-height properties. The game is still 256 x 240 but\r\n *      the screen scale is set to SHOW_ALL to expand the overall size yet keep the same \"aspect ratio\" or some shit.\r\n * -Animations are annoying as fuck to get right.\r\n * \r\n * 2017-09-03\r\n * -Using a Phaser.Rectangle for hitbox. Phaser.Sprite is too heavy.\r\n * \r\n * 2017-09-04\r\n * -Rooms!\r\n * \r\n * 2017-09-05\r\n * -Player now goes into fall anim when falling.\r\n * -Resized jump sprite.\r\n * -Tested vertical levels 480 px or more. Up and down.\r\n * -Added mega man blinking animation during idle.\r\n * -Timer to allow player to jump when walking off the ground.\r\n * -Added correct mega-man jumping logic.\r\n * -Player must be close to ladder to get on.\r\n * -Added met and met bullet.\r\n * -(my)world now creates entityManager and collisionManager - access managers from (my)world\r\n * -enemies/Tiled redesigned to use enemy spawners - enemies spawn from spawners instead of just being created outright\r\n *      the nature of mega man dictates this is needed because of the way enemies respawn when culled by the camera\r\n *      basically, you can infinitely respawn enemies if you move the camera off their spawn point and then move it back\r\n *      we need to keep track of the camera and enemy spawners to determine when to spawn enemies and when not to.\r\n * \r\n * 2017-09-05\r\n * -I am moving my todo's and done's to Trello. I've had it for a long time and keep forgetting to use it!\r\n * -Fixed determining if spawner is within camera view - all spawners are 32x32 large.\r\n * -Now able to set initial camera position.\r\n * -Refactored how entities are created - entities created only by EntityManager, send signals to let world know to create\r\n *      entities. Entity now takes world instead of EntityManager and CollisionManager, since world has both.\r\n * \r\n * 2017-09-06\r\n * -Added sliding.\r\n * \r\n * 2017-09-07\r\n * -Added spike entity.\r\n * \r\n * 2017-09-08\r\n * -Mega Man death effect.\r\n * \r\n * TODO: Fix: GutsMan doors graphics do not animate\r\n * TODO: Fix: When defeating GutsMan the game doesnt go to stage select ('freeze')\r\n * TODO: Fix: FireMan stage doesnt start\r\n * TODO: Fix: ElecMan stage doesnt start\r\n * TODO: Make debug keys global; can be used in any screen/state (like reset to stage select)\r\n * TODO: Is there a key to reset the save state for defeated bosses?\r\n * TODO: Show hotkey legend in HTML.\r\n */\r\nimport { Boot } from './states/boot'\r\nimport { Title } from './states/title'\r\nimport { StageSelect } from './states/stageSelect'\r\nimport { Game } from './states/game'\r\n\r\nexport var fixedTime = (1 / 60);\r\nexport var fixedTimeMS = (1 / 60) * 1000;\r\n\r\nexport enum GameStates {\r\n    Boot = 'boot',\r\n    Title = 'title',\r\n    StageSelect = 'stageSelect',\r\n    Game = 'game',\r\n}\r\n\r\nclass Main extends Phaser.Game {\r\n\r\n    constructor(config: Phaser.IGameConfig) {\r\n        super(config);\r\n        // console.log('fuck');\r\n        this.state.add(GameStates.Boot, Boot);\r\n        this.state.add(GameStates.Title, Title);\r\n        this.state.add(GameStates.StageSelect, StageSelect);\r\n        this.state.add(GameStates.Game, Game);\r\n        this.state.start(GameStates.Boot);\r\n    }\r\n}\r\n\r\nwindow.onload = () => {\r\n    let config: Phaser.IGameConfig = {\r\n        width: 256,\r\n        height: 240,\r\n        renderer: Phaser.AUTO,\r\n        parent: 'content',\r\n        antialias: false,\r\n        transparent: false,\r\n    };\r\n\r\n    let m: Main = new Main(config);\r\n}","import { Konstants, EntityType, AudioName, SpriteSheets } from '../konstants'\r\nimport { GameStates } from '../main'\r\nimport { SaveGame } from '../saveGame'\r\nimport { Debug } from '../debug'\r\nimport { GameData } from '../gameData'\r\nimport { World } from '../world'\r\nimport { LevelManager, LevelId } from '../managers/levelManager'\r\n\r\nexport class Boot extends Phaser.State {\r\n\r\n    public init(): void {\r\n        console.log(\"Boot::init()\");\r\n    }\r\n\r\n    public preload(): void {\r\n        console.log(\"Boot::preload()\");\r\n\r\n        //******************************\r\n        // STAGE SELECT & TITLE\r\n        //******************************\r\n        // title_screen\r\n        this.load.json('title_screen', 'assets/data/title_screen.json');\r\n\r\n        // cut_man\r\n        this.load.atlasJSONHash(SpriteSheets.stage_select_and_title,\r\n            'assets/stage_select_and_title_screen/stage_select_and_title.png',\r\n            'assets/stage_select_and_title_screen/stage_select_and_title.json');\r\n\r\n        // player\r\n        this.load.atlasJSONHash(Konstants.mega_man, 'assets/mega_man.png', 'assets/mega_man.json');\r\n\r\n        // lemon\r\n        this.load.image(Konstants.lemon, 'assets/lemon.png');\r\n\r\n        // standard bullet\r\n        this.load.image(EntityType.bullet, 'assets/enemies/bullet/bullet.png');\r\n\r\n        // rolling_cutter\r\n        this.load.image(Konstants.rolling_cutter, 'assets/rolling_cutter.png');\r\n\r\n        // blader\r\n        this.load.atlasJSONHash(EntityType.blader, 'assets/enemies/blader.png', 'assets/enemies/blader.json');\r\n\r\n        // met\r\n        this.load.atlasJSONHash(EntityType.met, 'assets/enemies/met.png', 'assets/enemies/met.json');\r\n\r\n        // beak\r\n        this.load.atlasJSONHash(EntityType.beak, 'assets/enemies/beak.png', 'assets/enemies/beak.json');\r\n\r\n        // beak\r\n        this.load.atlasJSONHash(Konstants.sniper_joe, 'assets/enemies/sniper_joe.png', 'assets/enemies/sniper_joe.json');\r\n\r\n        // bombomb\r\n        this.load.atlasJSONHash(EntityType.bombomb, 'assets/enemies/bombomb.png', 'assets/enemies/bombomb.json');\r\n\r\n        // spine\r\n        this.load.atlasJSONHash(EntityType.spine, 'assets/enemies/spine.png', 'assets/enemies/spine.json');\r\n\r\n        // octopus_battery\r\n        this.load.atlasJSONHash(EntityType.octopus_battery, 'assets/enemies/octopus_battery.png', 'assets/enemies/octopus_battery.json');\r\n\r\n        // killer_bullet\r\n        this.load.atlasJSONHash(EntityType.killer_bullet, 'assets/enemies/killer_bullet.png', 'assets/enemies/killer_bullet.json');\r\n\r\n        // explosion (from killer_bullet)\r\n        this.load.atlasJSONHash(EntityType.explosion_from_killer_bullet, 'assets/enemies/explosion.png', 'assets/enemies/explosion.json');\r\n\r\n        // big_eye\r\n        this.load.atlasJSONHash(EntityType.big_eye, 'assets/enemies/big_eye.png', 'assets/enemies/big_eye.json');\r\n\r\n        // peng\r\n        this.load.atlasJSONHash(EntityType.peng, 'assets/enemies/peng.png', 'assets/enemies/peng.json');\r\n\r\n        // screw_bomber\r\n        this.load.atlasJSONHash(EntityType.screw_bomber, 'assets/enemies/screw_bomber.png', 'assets/enemies/screw_bomber.json');\r\n\r\n        // super_cutter\r\n        this.load.atlasJSONHash(EntityType.super_cutter, 'assets/enemies/super_cutter.png', 'assets/enemies/super_cutter.json');\r\n\r\n        // flea\r\n        this.load.atlasJSONHash(EntityType.flea, 'assets/enemies/flea.png', 'assets/enemies/flea.json');\r\n\r\n        // flying_shell\r\n        this.load.atlasJSONHash(EntityType.flying_shell, 'assets/enemies/flying_shell.png', 'assets/enemies/flying_shell.json');\r\n\r\n        // watcher\r\n        this.load.atlasJSONHash(EntityType.watcher, 'assets/enemies/watcher.png', 'assets/enemies/watcher.json');\r\n\r\n        // laser_beam\r\n        this.load.atlasJSONHash(EntityType.laser_beam, 'assets/enemies/laser_beam.png', 'assets/enemies/laser_beam.json');\r\n\r\n        // picket_man\r\n        this.load.atlasJSONHash(EntityType.picket_man, 'assets/enemies/picket_man.png', 'assets/enemies/picket_man.json');\r\n\r\n        // picket_man_weapon\r\n        this.load.atlasJSONHash(EntityType.picket_man_weapon, 'assets/enemies/picket_man.png', 'assets/enemies/picket_man.json');\r\n\r\n        // spike\r\n        this.load.image(Konstants.spike, 'assets/objects/spike/spike.png');\r\n\r\n        // drop_lift\r\n        this.load.atlasJSONHash(EntityType.drop_lift, 'assets/enemies/drop_lift.png', 'assets/enemies/drop_lift.json');\r\n\r\n        // vanishing_block\r\n        this.load.atlasJSONHash(Konstants.vanishing_block, 'assets/enemies/vanishing_block.png', 'assets/enemies/vanishing_block.json');\r\n\r\n        // explosion\r\n        this.load.atlasJSONHash(Konstants.explosion, 'assets/objects/explosion.png', 'assets/objects/explosion.json');\r\n\r\n        // healthbar\r\n        this.load.atlasJSONHash(Konstants.meter, 'assets/objects/healthbar.png', 'assets/objects/healthbar.json');\r\n\r\n        // items\r\n        this.load.atlasJSONHash(Konstants.items, 'assets/items/items.png', 'assets/items/items.json');\r\n\r\n        // crazy_razy\r\n        this.load.atlasJSONHash(EntityType.crazy_razy, 'assets/enemies/crazy_razy.png', 'assets/enemies/crazy_razy.json');\r\n\r\n        // foot_holder\r\n        this.load.atlasJSONHash(EntityType.foot_holder, 'assets/enemies/foot_holder.png', 'assets/enemies/foot_holder.json');\r\n\r\n        this.load.tilemap('test_level', 'assets/levels/test_level.json', null, Phaser.Tilemap.TILED_JSON);\r\n        this.load.tilemap('cut_man', 'assets/levels/cut_man.json', null, Phaser.Tilemap.TILED_JSON);\r\n        this.load.tilemap('guts_man', 'assets/levels/guts_man.json', null, Phaser.Tilemap.TILED_JSON);\r\n        this.load.tilemap('ice_man', 'assets/levels/ice_man.json', null, Phaser.Tilemap.TILED_JSON);\r\n        this.load.tilemap('bomb_man', 'assets/levels/bomb_man.json', null, Phaser.Tilemap.TILED_JSON);\r\n        this.load.tilemap('fire_man', 'assets/levels/fire_man.json', null, Phaser.Tilemap.TILED_JSON);\r\n        this.load.tilemap('elec_man', 'assets/levels/elec_man.json', null, Phaser.Tilemap.TILED_JSON);\r\n        this.load.image('cut_man_tiles', 'assets/tiles/mm1cuttiles.gif');\r\n        this.load.image('guts_man_tiles', 'assets/tiles/mm1gutstiles.png');\r\n        this.load.image('ice_man_tiles', 'assets/tiles/mm1icetiles.png');\r\n        this.load.image('bomb_man_tiles', 'assets/tiles/mm1bombtiles.png');\r\n        this.load.image('fire_man_tiles', 'assets/tiles/mm1firetiles.png');\r\n        this.load.image('elec_man_tiles', 'assets/tiles/mm1electiles.png');\r\n        this.load.image('all_tiles', 'assets/tiles/all_tiles.png');\r\n\r\n        //******************************\r\n        // BOSS\r\n        //******************************\r\n        this.load.atlasJSONHash(EntityType.cut_man, 'assets/enemies/bosses/cut_man.png', 'assets/enemies/bosses/cut_man.json');\r\n        this.load.atlasJSONHash(EntityType.guts_man, 'assets/enemies/bosses/guts_man.png', 'assets/enemies/bosses/guts_man.json');\r\n        this.load.atlasJSONHash(EntityType.ice_man, 'assets/enemies/bosses/ice_man.png', 'assets/enemies/bosses/ice_man.json');\r\n        this.load.atlasJSONHash(EntityType.bomb_man, 'assets/enemies/bosses/bomb_man.png', 'assets/enemies/bosses/bomb_man.json');\r\n        this.load.atlasJSONHash(EntityType.fire_man, 'assets/enemies/bosses/fire_man.png', 'assets/enemies/bosses/fire_man.json');\r\n        this.load.atlasJSONHash(EntityType.elec_man, 'assets/enemies/bosses/elec_man.png', 'assets/enemies/bosses/elec_man.json');\r\n\r\n        //******************************\r\n        // AUDIO\r\n        //******************************\r\n        this.load.audio(AudioName.game_start, 'assets/audio/' + AudioName.game_start + '.wav', true);\r\n        this.load.audio(AudioName.pause_menu, 'assets/audio/' + AudioName.pause_menu + '.wav', true);\r\n        this.load.audio(AudioName.menu_select, 'assets/audio/' + AudioName.menu_select + '.wav', true);\r\n        this.load.audio(AudioName.megaman_warp, 'assets/audio/' + AudioName.megaman_warp + '.wav', true);\r\n        this.load.audio(AudioName.mega_buster, 'assets/audio/' + AudioName.mega_buster + '.wav', true);\r\n        this.load.audio(AudioName.megaman_land, 'assets/audio/' + AudioName.megaman_land + '.wav', true);\r\n        this.load.audio(AudioName.megaman_damage, 'assets/audio/' + AudioName.megaman_damage + '.wav', true);\r\n        this.load.audio(AudioName.megaman_defeat, 'assets/audio/' + AudioName.megaman_defeat + '.wav', true);\r\n        this.load.audio(AudioName.enemy_damage, 'assets/audio/' + AudioName.enemy_damage + '.wav', true);\r\n        this.load.audio(AudioName.enemy_shoot, 'assets/audio/' + AudioName.enemy_shoot + '.wav', true);\r\n        this.load.audio(AudioName.dink, 'assets/audio/' + AudioName.dink + '.wav', true);\r\n        this.load.audio(AudioName.big_eye, 'assets/audio/' + AudioName.big_eye + '.wav', true);\r\n        this.load.audio(AudioName.explosion, 'assets/audio/' + AudioName.explosion + '.wav', true);\r\n        this.load.audio(AudioName.super_arm, 'assets/audio/' + AudioName.super_arm + '.wav', true);\r\n        this.load.audio(AudioName.guts_quake, 'assets/audio/' + AudioName.guts_quake + '.wav', true);\r\n        this.load.audio(AudioName.thunder_beam, 'assets/audio/' + AudioName.thunder_beam + '.wav', true);\r\n        this.load.audio(AudioName.beam, 'assets/audio/' + AudioName.beam + '.wav', true);\r\n        this.load.audio(AudioName.rolling_cutter, 'assets/audio/' + AudioName.rolling_cutter + '.wav', true);\r\n        this.load.audio(AudioName.cut_man_snip, 'assets/audio/' + AudioName.cut_man_snip + '.wav', true);\r\n        this.load.audio(AudioName.ice_slasher, 'assets/audio/' + AudioName.ice_slasher + '.wav', true);\r\n        this.load.audio(AudioName.water_splash, 'assets/audio/' + AudioName.water_splash + '.wav', true);\r\n        this.load.audio(AudioName.fire_storm_1, 'assets/audio/' + AudioName.fire_storm_1 + '.wav', true);\r\n        this.load.audio(AudioName.fire_storm_2, 'assets/audio/' + AudioName.fire_storm_2 + '.wav', true);\r\n        this.load.audio(AudioName.energy_fill, 'assets/audio/' + AudioName.energy_fill + '.wav', true);\r\n        this.load.audio(AudioName.one_up, 'assets/audio/' + AudioName.one_up + '.wav', true);\r\n        this.load.audio(AudioName.bonus_ball, 'assets/audio/' + AudioName.bonus_ball + '.wav', true);\r\n        this.load.audio(AudioName.point_tally, 'assets/audio/' + AudioName.point_tally + '.wav', true);\r\n        this.load.audio(AudioName.vanishing_blocks, 'assets/audio/' + AudioName.vanishing_blocks + '.wav', true);\r\n        this.load.audio(AudioName.conveyor_lift, 'assets/audio/' + AudioName.conveyor_lift + '.wav', true);\r\n        this.load.audio(AudioName.boss_gate, 'assets/audio/' + AudioName.boss_gate + '.wav', true);\r\n        this.load.audio(AudioName.wily_ship, 'assets/audio/' + AudioName.wily_ship + '.wav', true);\r\n        this.load.audio(AudioName.rushing_water, 'assets/audio/' + AudioName.rushing_water + '.wav', true);\r\n        this.load.audio(AudioName.err, 'assets/audio/' + AudioName.err + '.wav', true);\r\n        this.load.audio(AudioName.pipipi, 'assets/audio/' + AudioName.pipipi + '.wav', true);\r\n        this.load.audio(AudioName.music_game_over, 'assets/audio/' + AudioName.music_game_over + '.ogg', true);\r\n        this.load.audio(AudioName.music_stage_clear, 'assets/audio/' + AudioName.music_stage_clear + '.ogg', true);\r\n        this.load.audio(AudioName.music_boss, 'assets/audio/' + AudioName.music_boss + '.ogg', true);\r\n        this.load.audio(AudioName.music_cut_man_stage, 'assets/audio/' + AudioName.music_cut_man_stage + '.ogg', true);\r\n        this.load.audio(AudioName.music_guts_man_stage, 'assets/audio/' + AudioName.music_guts_man_stage + '.ogg', true);\r\n        this.load.audio(AudioName.music_ice_man_stage, 'assets/audio/' + AudioName.music_ice_man_stage + '.ogg', true);\r\n        this.load.audio(AudioName.music_bomb_man_stage, 'assets/audio/' + AudioName.music_bomb_man_stage + '.ogg', true);\r\n        this.load.audio(AudioName.music_fire_man_stage, 'assets/audio/' + AudioName.music_fire_man_stage + '.ogg', true);\r\n        this.load.audio(AudioName.music_elec_man_stage, 'assets/audio/' + AudioName.music_elec_man_stage + '.ogg', true);\r\n        // this.load.audio(AudioName.music_dr_wily_1_stage, 'assets/audio/' + AudioName.music_dr_wily_1_stage + '.ogg', true);\r\n        // this.load.audio(AudioName.music_dr_wily_2_stage, 'assets/audio/' + AudioName.music_dr_wily_2_stage + '.ogg', true);\r\n        // this.load.audio(AudioName.music_dr_wily_3_stage, 'assets/audio/' + AudioName.music_dr_wily_1_stage + '.ogg', true);\r\n        // this.load.audio(AudioName.music_dr_wily_4_stage, 'assets/audio/' + AudioName.music_dr_wily_2_stage + '.ogg', true);\r\n        this.load.audio(AudioName.music_stage_select, 'assets/audio/' + AudioName.music_stage_select + '.ogg', true);\r\n        this.load.audio(AudioName.music_boss_loop, 'assets/audio/' + AudioName.music_boss_loop + '.ogg', true);\r\n        this.load.audio(AudioName.music_stage_chosen, 'assets/audio/' + AudioName.music_stage_chosen + '.ogg', true);\r\n\r\n        //******************************\r\n        // STAGE SELECT\r\n        //******************************\r\n        this.load.json('stage_select', 'assets/data/stage_select.json');\r\n\r\n        //******************************\r\n        // MENU\r\n        //******************************\r\n        this.load.atlasJSONHash('grayscale_menu', 'assets/menu/grayscale_menu.png', 'assets/menu/grayscale_menu.json');\r\n\r\n        //******************************\r\n        // FONT\r\n        //******************************\r\n        this.game.load.bitmapFont('myfont', 'assets/font/font.png', 'assets/font/font.fnt');\r\n\r\n        //******************************\r\n        // LOAD GAME DATA\r\n        //******************************\r\n        GameData.loadData(this);\r\n\r\n        //******************************\r\n        // LOAD SAVE GAME DATA\r\n        //******************************\r\n        SaveGame.loadAllData();\r\n\r\n        //******************************\r\n        // LOAD DEBUG DATA\r\n        //******************************\r\n        Debug.loadData(this);\r\n    }\r\n\r\n    public create(): void {\r\n        console.log(\"Boot::create()\");\r\n\r\n        this.game.renderer.renderSession.roundPixels = true;\r\n        Phaser.Canvas.setImageRenderingCrisp(this.game.canvas);\r\n        this.game.scale.minWidth = 256;\r\n        this.game.scale.minHeight = 240;\r\n        this.game.scale.maxWidth = 768;\r\n        this.game.scale.maxHeight = 720;\r\n        this.game.stage.backgroundColor = 0;\r\n        this.game.forceSingleUpdate = true;\r\n        this.game.sound.volume = 0.05;\r\n        this.game.scale.pageAlignHorizontally = true;\r\n        this.game.scale.pageAlignVertically = true;\r\n        this.game.scale.scaleMode = Phaser.ScaleManager.SHOW_ALL; // keep current resolution but 'blow-up' the canvas size evenly\r\n        this.game.scale.refresh();\r\n        this.game.stage.smoothed = false;\r\n        this.game.renderer.autoResize = true;\r\n\r\n        Debug.createData(this.game);\r\n        GameData.createData(this.game);\r\n        // Starts the game at this level. Only happens once at start-up. Remove for release.\r\n        LevelManager.CURR_LEVEL = <LevelId>Debug.StartingLevel;\r\n\r\n        if (Debug.StartLevelImmediatelly) {\r\n            this.state.start(GameStates.Game);\r\n        }\r\n        else {\r\n            this.state.start(GameStates.Title);\r\n        }\r\n    }\r\n}","export declare class Global {\r\n    public static SoundEffectsVolume: number;\r\n    public static MusicVolume: number;\r\n}\r\n\r\nexport enum Konstants {\r\n    mega_man = 'mega_man',\r\n    met = 'met',\r\n    spine = 'spine',\r\n    beak = 'beak',\r\n    sniper_joe = 'sniper_joe',\r\n    spike = 'spike',\r\n    octopus_battery = 'octopus_battery',\r\n    vanishing_block = 'vanishing_block',\r\n    moving_platform = 'moving_platform',\r\n    meter = 'healthbar',\r\n\r\n    bullet = 'bullet',\r\n    met_bullet = 'met_bullet',\r\n    sniper_joe_bullet = 'sniper_joe_bullet',\r\n    beak_bullet = 'beak_bullet',\r\n\r\n    idle = 'idle',\r\n    active = 'active',\r\n    blink = 'blink',\r\n    run = 'run',\r\n    jump = 'jump',\r\n    run_shoot = 'run_shoot',\r\n    idle_shoot = 'idle_shoot',\r\n    jump_shoot = 'jump_shoot',\r\n    climb_ladder_shoot = 'climb_ladder_shoot',\r\n    climb_ladder_idle = 'climb_ladder_idle',\r\n    climb_ladder = 'climb_ladder',\r\n    climb_ladder_start = 'climb_ladder_start',\r\n    climb_ladder_end = 'climb_ladder_end',\r\n    hurt = 'hurt',\r\n    slide = 'slide',\r\n    spawn_effect = 'spawn_effect',\r\n    warp_in_effect = 'warp_in_effect',\r\n\r\n    lemon = 'lemon',\r\n    rolling_cutter = 'rolling_cutter', // cut man weapon/bullet\r\n    explosion = 'explosion',\r\n    items = 'items',\r\n}\r\n\r\nexport enum SpriteSheets {\r\n    stage_select_and_title = 'stage_select_and_title',\r\n    items = 'items',\r\n}\r\n\r\nexport enum AudioName {\r\n    game_start = '01 - GameStart',\r\n    pause_menu = '02 - PauseMenu',\r\n    menu_select = '03 - MenuSelect',\r\n    megaman_warp = '04 - MegamanWarp',\r\n    mega_buster = '05 - MegaBuster',\r\n    megaman_land = '06 - MegamanLand',\r\n    megaman_damage = '07 - MegamanDamage',\r\n    megaman_defeat = '08 - MegamanDefeat',\r\n    enemy_damage = '09 - EnemyDamage',\r\n    enemy_shoot = '10 - EnemyShoot',\r\n    dink = '11 - Dink',\r\n    big_eye = '12 - BigEye',\r\n    explosion = '13 - Explosion',\r\n    super_arm = '14 - SuperArm',\r\n    guts_quake = '15 - GutsQuake',\r\n    thunder_beam = '16 - ThunderBeam',\r\n    beam = '17 - Beam',\r\n    rolling_cutter = '18 - RollingCutter',\r\n    cut_man_snip = '19 - CutManSnip',\r\n    ice_slasher = '20 - IceSlasher',\r\n    water_splash = '21 - WaterSplash',\r\n    fire_storm_1 = '22 - FireStorm1',\r\n    fire_storm_2 = '23 - FireStorm2',\r\n    energy_fill = '24 - EnergyFill',\r\n    one_up = '25 - 1up',\r\n    bonus_ball = '26 - BonusBall',\r\n    point_tally = '27 - PointTally',\r\n    vanishing_blocks = '28 - VanishingBlocks',\r\n    conveyor_lift = '29 - ConveyorLift',\r\n    boss_gate = '30 - BossGate',\r\n    wily_ship = '31 - WilyShip',\r\n    rushing_water = '32 - RushingWater',\r\n    err = '33 - Err',\r\n    pipipi = '34 - PiPiPi',\r\n    music_game_over = 'music_game_over',\r\n    music_stage_clear = 'music_stage_clear',\r\n    music_boss = 'music_boss',\r\n    music_cut_man_stage = 'music_cut_man_stage',\r\n    music_guts_man_stage = 'music_guts_man_stage',\r\n    music_ice_man_stage = 'music_ice_man_stage',\r\n    music_bomb_man_stage = 'music_bomb_man_stage',\r\n    music_fire_man_stage = 'music_fire_man_stage',\r\n    music_elec_man_stage = 'music_elec_man_stage',\r\n    music_dr_wily_1_stage = 'music_dr_wily_1_stage',\r\n    music_dr_wily_2_stage = 'music_dr_wily_2_stage',\r\n    music_dr_wily_3_stage = 'music_dr_wily_3_stage',\r\n    music_dr_wily_4_stage = 'music_dr_wily_4_stage',\r\n    music_stage_select = 'music_stage_select',\r\n    music_boss_loop = 'music_boss_loop',\r\n    music_stage_chosen = 'music_stage_chosen',\r\n}\r\n\r\nexport enum TagType {\r\n    player = 'player',\r\n    enemy = 'enemy',\r\n    bullet = 'bullet',\r\n    power_up = 'power_up',\r\n    platform = 'platforms',\r\n}\r\n\r\nexport enum EntityType {\r\n    player = 'player',\r\n    bullet_lemon = 'bullet_lemon',\r\n    bullet_cut_man = 'bullet_cut_man',\r\n    bullet_guts_man = 'bullet_guts_man',\r\n    bullet = 'bullet',\r\n    met_bullet = 'met_bullet',\r\n    sniper_joe_bullet = 'sniper_joe_bullet',\r\n    beak_bullet = 'beak_bullet',\r\n    screw_bomber_bullet = 'screw_bomber_bullet',\r\n    foot_holder_bullet='foot_holder_bullet',\r\n    laser_beam = 'laser_beam',\r\n    throwable_object = 'throwable_object',\r\n    ice_man_bullet='ice_man_bullet',\r\n    blader = 'blader',\r\n    met = 'met',\r\n    beak = 'beak',\r\n    spine = 'spine',\r\n    octopus_battery = 'octopus_battery',\r\n    sniper_joe = 'sniper_joe',\r\n    bombomb = 'bombomb',\r\n    bombomb_shrapnel = 'bombomb_shrapnel',\r\n    killer_bullet = 'killer_bullet',\r\n    explosion_from_killer_bullet = 'explosion_from_killer_bullet',\r\n    peng = 'peng',\r\n    screw_bomber = 'screw_bomber',\r\n    super_cutter = 'super_cutter',\r\n    big_eye = 'big_eye',\r\n    flea = 'flea',\r\n    flying_shell = 'flying_shell',\r\n    watcher = 'watcher',\r\n    picket_man = 'picket_man',\r\n    picket_man_weapon = 'picket_man_weapon',\r\n    dust = 'dust',\r\n    spike = 'spike',\r\n    drop_lift = 'drop_lift',\r\n    crazy_razy = 'crazy_razy',\r\n    crazy_razy_fly = 'crazy_razy_fly',\r\n    foot_holder = 'foot_holder',\r\n    energy_pellet_small = 'energy_pellet_small',\r\n    energy_pellet_large = 'energy_pellet_large',\r\n    weapon_energy_small = 'weapon_energy_small',\r\n    weapon_energy_large = 'weapon_energy_large',\r\n    robot_crystal = 'robot_crystal',\r\n    energy_tank = 'energy_tank',\r\n    one_up = 'one_up',\r\n    vanishing_block = 'vanishing_block',\r\n    moving_platform = 'moving_platform',\r\n    cut_man = 'cut_man',\r\n    guts_man = 'guts_man',\r\n    ice_man = 'ice_man',\r\n    bomb_man = 'bomb_man',\r\n    fire_man = 'fire_man',\r\n    elec_man = 'elec_man',\r\n    cut_man_boss_item = 'cut_man_boss_item',\r\n    guts_man_boss_item = 'guts_man_boss_item',\r\n    ice_man_boss_item = 'ice_man_boss_item',\r\n    bomb_man_boss_item = 'bomb_man_boss_item',\r\n    fire_man_boss_item = 'fire_man_boss_item',\r\n    elec_man_boss_item = 'elec_man_boss_item',\r\n}\r\n\r\nexport enum DropType {\r\n    none = '',\r\n    energy_pellet_small = 'energy_pellet_small',\r\n    energy_pellet_large = 'energy_pellet_large',\r\n    weapon_energy_small = 'weapon_energy_small',\r\n    weapon_energy_large = 'weapon_energy_large',\r\n    robot_crystal = 'robot_crystal',\r\n    energy_tank = 'energy_tank',\r\n    one_up = 'one_up',\r\n}\r\n\r\nexport enum PowerUpType {\r\n    energy_pellet_small = 'energy_pellet_small',\r\n    energy_pellet_large = 'energy_pellet_large',\r\n    weapon_energy_small = 'weapon_energy_small',\r\n    weapon_energy_large = 'weapon_energy_large',\r\n    robot_crystal = 'robot_crystal',\r\n    energy_tank = 'energy_tank',\r\n    one_up = 'one_up',\r\n}\r\n\r\nexport interface OctopusBatteryProperties {\r\n    speed: number;\r\n    horizontal: boolean;\r\n    vertical: boolean;\r\n}\r\n\r\nexport interface WallContact {\r\n    left: boolean;\r\n    right: boolean;\r\n    up: boolean;\r\n    down: boolean;\r\n}","import { Weapon, WeaponType } from './weapon/weapon'\r\nimport { LevelId } from './managers/levelManager'\r\n\r\nexport class SaveGame {\r\n    public static HasDefeatedCutMan: boolean = false;\r\n    public static HasDefeatedGutsMan: boolean = false;\r\n    public static HasDefeatedIceMan: boolean = false;\r\n    public static HasDefeatedBombMan: boolean = false;\r\n    public static HasDefeatedFireMan: boolean = false;\r\n    public static HasDefeatedElecMan: boolean = false;\r\n    public static HasCutManWeapon: boolean = false;\r\n    public static CutManWeaponEnergy: number = 0;\r\n    public static HasGutsManWeapon: boolean = false;\r\n    public static GutsManWeaponEnergy: number = 0;\r\n    public static HasIceManWeapon: boolean = false;\r\n    public static IceManWeaponEnergy: number = 0;\r\n    public static HasBombManWeapon: boolean = false;\r\n    public static BombManWeaponEnergy: number = 0;\r\n    public static HasFireManWeapon: boolean = false;\r\n    public static FireManWeaponEnergy: number = 0;\r\n    public static HasElecManWeapon: boolean = false;\r\n    public static ElecManWeaponEnergy: number = 0;\r\n\r\n    public static saveAllData(weaponList: Array<Weapon>): void {\r\n        console.log('Saving all data...');\r\n\r\n        this.saveDefeatedLevels();\r\n        this.saveInventoryData(weaponList);\r\n        this.logData();\r\n    }\r\n\r\n    public static saveDefeatedLevels(): void {\r\n        window.localStorage.setItem('cut_man', SaveGame.HasDefeatedCutMan == true ? '1' : '0');\r\n        window.localStorage.setItem('guts_man', SaveGame.HasDefeatedGutsMan == true ? '1' : '0');\r\n        window.localStorage.setItem('ice_man', SaveGame.HasDefeatedIceMan == true ? '1' : '0');\r\n        window.localStorage.setItem('bomb_man', SaveGame.HasDefeatedBombMan == true ? '1' : '0');\r\n        window.localStorage.setItem('fire_man', SaveGame.HasDefeatedFireMan == true ? '1' : '0');\r\n        window.localStorage.setItem('elec_man', SaveGame.HasDefeatedElecMan == true ? '1' : '0');\r\n    }\r\n\r\n    public static saveInventoryData(weaponList: Array<Weapon>): void {\r\n        console.log('Saving inventory data...');\r\n\r\n        weaponList.forEach(weapon => {\r\n            window.localStorage.setItem(weapon.type, weapon.currEnergy.toString());\r\n        });\r\n    }\r\n\r\n    public static loadAllData(): void {\r\n        console.log('Loading all data...');\r\n\r\n        SaveGame.loadDefeatedLeveData();\r\n        SaveGame.loadInventoryData();\r\n        SaveGame.logData();\r\n    }\r\n\r\n    public static loadDefeatedLeveData(): void {\r\n        console.log('Loading defeated level data...');\r\n\r\n        SaveGame.HasDefeatedCutMan = window.localStorage.getItem('cut_man') == '1' ? true : false;\r\n        SaveGame.HasDefeatedGutsMan = window.localStorage.getItem('guts_man') == '1' ? true : false;\r\n        SaveGame.HasDefeatedIceMan = window.localStorage.getItem('ice_man') == '1' ? true : false;\r\n        SaveGame.HasDefeatedBombMan = window.localStorage.getItem('bomb_man') == '1' ? true : false;\r\n        SaveGame.HasDefeatedFireMan = window.localStorage.getItem('fire_man') == '1' ? true : false;\r\n        SaveGame.HasDefeatedElecMan = window.localStorage.getItem('elec_man') == '1' ? true : false;\r\n    }\r\n\r\n    public static loadInventoryData(): void {\r\n        console.log('Loading inventory data...');\r\n\r\n        SaveGame.HasCutManWeapon = SaveGame.HasDefeatedCutMan ? true : false\r\n        SaveGame.CutManWeaponEnergy = SaveGame.HasCutManWeapon ? parseInt(window.localStorage.getItem(WeaponType.CutMan)) : 0;\r\n\r\n        SaveGame.HasGutsManWeapon = SaveGame.HasDefeatedGutsMan ? true : false\r\n        SaveGame.GutsManWeaponEnergy = SaveGame.HasGutsManWeapon ? parseInt(window.localStorage.getItem(WeaponType.GutsMan)) : 0;\r\n\r\n        SaveGame.HasIceManWeapon = SaveGame.HasDefeatedIceMan ? true : false\r\n        SaveGame.IceManWeaponEnergy = SaveGame.HasIceManWeapon ? parseInt(window.localStorage.getItem(WeaponType.IceMan)) : 0;\r\n\r\n        SaveGame.HasBombManWeapon = SaveGame.HasDefeatedBombMan ? true : false\r\n        SaveGame.BombManWeaponEnergy = SaveGame.HasBombManWeapon ? parseInt(window.localStorage.getItem(WeaponType.BombMan)) : 0;\r\n\r\n        SaveGame.HasFireManWeapon = SaveGame.HasDefeatedFireMan ? true : false\r\n        SaveGame.FireManWeaponEnergy = SaveGame.HasFireManWeapon ? parseInt(window.localStorage.getItem(WeaponType.FireMan)) : 0;\r\n\r\n        SaveGame.HasElecManWeapon = SaveGame.HasDefeatedElecMan ? true : false\r\n        SaveGame.ElecManWeaponEnergy = SaveGame.HasElecManWeapon ? parseInt(window.localStorage.getItem(WeaponType.ElecMan)) : 0;\r\n    }\r\n\r\n    public static resetSaveData(): void {\r\n        window.localStorage.clear();\r\n    }\r\n\r\n    public static logData(): void {\r\n        console.log(\"\\nHas Defeated:\")\r\n        console.log('cut_man: ' + SaveGame.HasDefeatedCutMan);\r\n        console.log('guts_man: ' + SaveGame.HasDefeatedGutsMan);\r\n        console.log('ice_man: ' + SaveGame.HasDefeatedIceMan);\r\n        console.log('bomb_man: ' + SaveGame.HasDefeatedBombMan);\r\n        console.log('fire_man: ' + SaveGame.HasDefeatedFireMan);\r\n        console.log('elec_man: ' + SaveGame.HasDefeatedElecMan);\r\n\r\n        console.log(\"\\nHas Weapon:\");\r\n        console.log('HasCutManWeapon: ' + SaveGame.HasCutManWeapon);\r\n        console.log('HasGutsManWeapon: ' + SaveGame.HasGutsManWeapon);\r\n        console.log('HasIceManWeapon: ' + SaveGame.HasIceManWeapon);\r\n        console.log('HasBombManWeapon: ' + SaveGame.HasBombManWeapon);\r\n        console.log('HasFireManWeapon: ' + SaveGame.HasFireManWeapon);\r\n        console.log('HasElecManWeapon: ' + SaveGame.HasElecManWeapon);\r\n\r\n        console.log(\"\\nWeapon Energy:\");\r\n        console.log('CutManWeaponEnergy: ' + SaveGame.CutManWeaponEnergy);\r\n        console.log('GutsManWeaponEnergy: ' + SaveGame.GutsManWeaponEnergy);\r\n        console.log('IceManWeaponEnergy: ' + SaveGame.IceManWeaponEnergy);\r\n        console.log('BombManWeaponEnergy: ' + SaveGame.BombManWeaponEnergy);\r\n        console.log('FireManWeaponEnergy: ' + SaveGame.FireManWeaponEnergy);\r\n        console.log('ElecManWeaponEnergy: ' + SaveGame.ElecManWeaponEnergy);\r\n    }\r\n\r\n    public static clearLocalStorage(): void {\r\n        console.log(\"Clearing local storage.\")\r\n        localStorage.clear();\r\n    }\r\n}","import { Meter } from '../ui/meter'\r\n\r\nexport enum WeaponType {\r\n    BombMan = 'BombMan',\r\n    ElecMan = 'ElecMan',\r\n    GutsMan = 'GutsMan',\r\n    IceMan = 'IceMan',\r\n    CutMan = 'CutMan',\r\n    FireMan = 'FireMan',\r\n    MegaBuster = 'MegaBuster',\r\n}\r\n\r\nexport interface Weapon {\r\n    type: WeaponType;\r\n    currEnergy: number;\r\n    totalEnergy: number;\r\n    energyMeter: Meter;\r\n    doAction(x: number, y: number): boolean;\r\n    restoreEnergy(amount: number): void;\r\n    setEnergy(amount: number): void;\r\n}","export class Debug {\r\n    public static DebugCache: any;\r\n    public static AllowDrawHitboxes: boolean;\r\n    public static SpikesVisible: boolean;\r\n    public static BackgroundVisible: boolean;\r\n    public static ForegroundVisible: boolean;\r\n    public static AllowDrawOutlines: boolean;\r\n    public static AllowDrawGrid: boolean;\r\n    public static StartLevelImmediatelly: boolean;\r\n    public static StartingLevel: string;\r\n    public static EnableMusic: boolean;\r\n    public static IsPlayerInvincible: boolean;\r\n    public static ShowDebugTestLevelInStageSelect: boolean;\r\n\r\n    public static loadData(state: Phaser.State): void {\r\n        state.load.json('debug', 'assets/data/debug.json');\r\n    }\r\n\r\n    public static createData(game: Phaser.Game): void {\r\n        Debug.DebugCache = game.cache.getJSON('debug');\r\n        Debug.AllowDrawHitboxes = Debug.DebugCache.debug.world.allow_draw_hitboxes;\r\n        Debug.AllowDrawOutlines = Debug.DebugCache.debug.world.allow_draw_outlines;\r\n        Debug.AllowDrawGrid = Debug.DebugCache.debug.world.allow_draw_grid;\r\n        Debug.SpikesVisible = Debug.DebugCache.debug.world.spikesVisible;\r\n        Debug.BackgroundVisible = Debug.DebugCache.debug.world.backgroundVisible;\r\n        Debug.ForegroundVisible = Debug.DebugCache.debug.world.foregroundVisible;\r\n        Debug.StartLevelImmediatelly = Debug.DebugCache.debug.world.startLevelImmediately;\r\n        Debug.StartingLevel = Debug.DebugCache.debug.world.startingLevel;\r\n        Debug.EnableMusic = Debug.DebugCache.debug.world.enableMusic;\r\n        Debug.IsPlayerInvincible = Debug.DebugCache.debug.world.isPlayerInvincible;\r\n        Debug.ShowDebugTestLevelInStageSelect = Debug.DebugCache.debug.world.show_debug_test_level_in_stage_select;\r\n        Debug.logData();\r\n    }\r\n\r\n    private static logData(): void {\r\n        console.log('Debug.DebugCache: ' + Debug.DebugCache);\r\n        console.log('Debug.AllowDrawHitboxes: ' + Debug.AllowDrawHitboxes);\r\n        console.log('Debug.AllowDrawOutlines: ' + Debug.AllowDrawOutlines);\r\n        console.log('Debug.SpikesVisible: ' + Debug.SpikesVisible);\r\n        console.log('Debug.BackgroundVisible: ' + Debug.BackgroundVisible);\r\n        console.log('Debug.ForegroundVisible: ' + Debug.ForegroundVisible);\r\n        console.log('Debug.StartLevelImmediatelly: ' + Debug.StartLevelImmediatelly);\r\n        console.log('Debug.StartingLevel: ' + Debug.StartingLevel);\r\n        console.log('Debug.EnableMusic: ' + Debug.EnableMusic);\r\n        console.log('Debug.IsPlayerInvincible: ' + Debug.IsPlayerInvincible);\r\n        console.log('Debug.ShowDebugTestLevelInStageSelect: ' + Debug.ShowDebugTestLevelInStageSelect);\r\n    }\r\n}","export interface BossData {\r\n    name: string;\r\n    spawnPosition: Phaser.Point;\r\n    bossItemSpawnPosition: Phaser.Point;\r\n    doorTile:number;\r\n    spikeTile:number;\r\n}\r\n\r\nexport class GameData {\r\n    public static BossesCache: any;\r\n    public static BossDatas: Array<BossData> = new Array<BossData>();\r\n\r\n    public static loadData(state: Phaser.State): void {\r\n        state.load.json('bosses', 'assets/data/bosses.json');\r\n    }\r\n\r\n    public static createData(game: Phaser.Game): void {\r\n        this.fetchBossesData(game);\r\n\r\n        GameData.logData();\r\n    }\r\n\r\n    private static fetchBossesData(game: Phaser.Game): void {\r\n        GameData.BossesCache = game.cache.getJSON('bosses');\r\n\r\n        this.BossDatas.push({\r\n            name: GameData.BossesCache.test_level.name,\r\n            spawnPosition: new Phaser.Point(GameData.BossesCache.test_level.spawn_pos[0], GameData.BossesCache.test_level.spawn_pos[1]),\r\n            bossItemSpawnPosition: new Phaser.Point(GameData.BossesCache.test_level.boss_item_spawn_pos[0], GameData.BossesCache.test_level.boss_item_spawn_pos[1]),\r\n            doorTile:GameData.BossesCache.test_level.door_tile,\r\n            spikeTile:GameData.BossesCache.test_level.spike_tile,\r\n        });\r\n\r\n        this.BossDatas.push({\r\n            name: GameData.BossesCache.cut_man.name,\r\n            spawnPosition: new Phaser.Point(GameData.BossesCache.cut_man.spawn_pos[0], GameData.BossesCache.cut_man.spawn_pos[1]),\r\n            bossItemSpawnPosition: new Phaser.Point(GameData.BossesCache.cut_man.boss_item_spawn_pos[0], GameData.BossesCache.cut_man.boss_item_spawn_pos[1]),\r\n            doorTile:GameData.BossesCache.cut_man.door_tile,\r\n            spikeTile:GameData.BossesCache.cut_man.spike_tile,\r\n        });\r\n\r\n        this.BossDatas.push({\r\n            name: GameData.BossesCache.guts_man.name,\r\n            spawnPosition: new Phaser.Point(GameData.BossesCache.guts_man.spawn_pos[0], GameData.BossesCache.guts_man.spawn_pos[1]),\r\n            bossItemSpawnPosition: new Phaser.Point(GameData.BossesCache.guts_man.boss_item_spawn_pos[0], GameData.BossesCache.guts_man.boss_item_spawn_pos[1]),\r\n            doorTile:GameData.BossesCache.guts_man.door_tile,\r\n            spikeTile:GameData.BossesCache.guts_man.spike_tile,\r\n        });\r\n\r\n        this.BossDatas.push({\r\n            name: GameData.BossesCache.ice_man.name,\r\n            spawnPosition: new Phaser.Point(GameData.BossesCache.ice_man.spawn_pos[0], GameData.BossesCache.ice_man.spawn_pos[1]),\r\n            bossItemSpawnPosition: new Phaser.Point(GameData.BossesCache.ice_man.boss_item_spawn_pos[0], GameData.BossesCache.ice_man.boss_item_spawn_pos[1]),\r\n            doorTile:GameData.BossesCache.ice_man.door_tile,\r\n            spikeTile:GameData.BossesCache.ice_man.spike_tile,\r\n        });\r\n\r\n        this.BossDatas.push({\r\n            name: GameData.BossesCache.bomb_man.name,\r\n            spawnPosition: new Phaser.Point(GameData.BossesCache.bomb_man.spawn_pos[0], GameData.BossesCache.bomb_man.spawn_pos[1]),\r\n            bossItemSpawnPosition: new Phaser.Point(GameData.BossesCache.bomb_man.boss_item_spawn_pos[0], GameData.BossesCache.bomb_man.boss_item_spawn_pos[1]),\r\n            doorTile:GameData.BossesCache.bomb_man.door_tile,\r\n            spikeTile:GameData.BossesCache.bomb_man.spike_tile,\r\n        });\r\n\r\n        this.BossDatas.push({\r\n            name: GameData.BossesCache.fire_man.name,\r\n            spawnPosition: new Phaser.Point(GameData.BossesCache.fire_man.spawn_pos[0], GameData.BossesCache.fire_man.spawn_pos[1]),\r\n            bossItemSpawnPosition: new Phaser.Point(GameData.BossesCache.fire_man.boss_item_spawn_pos[0], GameData.BossesCache.fire_man.boss_item_spawn_pos[1]),\r\n            doorTile:GameData.BossesCache.fire_man.door_tile,\r\n            spikeTile:GameData.BossesCache.fire_man.spike_tile,\r\n        });\r\n\r\n        this.BossDatas.push({\r\n            name: GameData.BossesCache.elec_man.name,\r\n            spawnPosition: new Phaser.Point(GameData.BossesCache.elec_man.spawn_pos[0], GameData.BossesCache.elec_man.spawn_pos[1]),\r\n            bossItemSpawnPosition: new Phaser.Point(GameData.BossesCache.elec_man.boss_item_spawn_pos[0], GameData.BossesCache.elec_man.boss_item_spawn_pos[1]),\r\n            doorTile:GameData.BossesCache.elec_man.door_tile,\r\n            spikeTile:GameData.BossesCache.elec_man.spike_tile,\r\n        });\r\n    }\r\n\r\n    private static logData(): void {\r\n\r\n    }\r\n}","import { World } from '../world'\r\nimport { Debug } from '../debug'\r\nimport { AudioName } from '../konstants'\r\n\r\nenum BossMusicMarker {\r\n    intro = 'intro',\r\n    loop = 'loop',\r\n}\r\n\r\nexport enum LevelId {\r\n    TEST_LEVEL = 'test_level',\r\n    CUT_MAN = 'cut_man',\r\n    GUTS_MAN = 'guts_man',\r\n    ICE_MAN = 'ice_man',\r\n    BOMB_MAN = 'bomb_man',\r\n    FIRE_MAN = 'fire_man',\r\n    ELEC_MAN = 'elec_man',\r\n    DR_WILY_1 = 'dr_wily_1',\r\n    DR_WILY_2 = 'dr_wily_2',\r\n    DR_WILY_3 = 'dr_wily_3',\r\n    DR_WILY_4 = 'dr_wily_4',\r\n}\r\n\r\nexport interface LevelInfo {\r\n    index: number;\r\n    id: LevelId;\r\n    map: Phaser.Tilemap;\r\n    tiledImageName: string; // The name of the tilesheet in Tiled.\r\n    tilesetImageKey: string; // The key given to the tilesheet (png/gif) during Boot load.\r\n    stageMusic: string;\r\n    bossMusic: string;\r\n}\r\n\r\nexport class LevelManager {\r\n    public static CURR_LEVEL: LevelId = LevelId.TEST_LEVEL; // this will be set by the StageSelect state\r\n    private game: Phaser.Game;\r\n    private maps: Array<Phaser.Tilemap> = new Array<Phaser.Tilemap>();\r\n    private levelInfos: Array<LevelInfo> = new Array<LevelInfo>();\r\n    private stageMusic: Phaser.Sound;\r\n    private bossMusic: Phaser.Sound;\r\n    public map: Phaser.Tilemap;\r\n    public background: Phaser.TilemapLayer;\r\n    public foreground: Phaser.TilemapLayer;\r\n    public spikes: Phaser.TilemapLayer;\r\n\r\n    constructor(private world: World) {\r\n        this.game = world.game;\r\n\r\n        this.bossMusic = this.game.sound.add(AudioName.music_boss);\r\n        this.bossMusic.addMarker(BossMusicMarker.intro, 0, 3.25);\r\n        this.bossMusic.addMarker(BossMusicMarker.loop, 3.25, 9.7 - 3.25);\r\n    }\r\n\r\n    public createLevels(): void {\r\n        let levelInfo: LevelInfo = {\r\n            index: 0,\r\n            id: LevelId.TEST_LEVEL,\r\n            map: this.game.add.tilemap('test_level'),\r\n            tiledImageName: 'cut_man_tiles',\r\n            tilesetImageKey: 'cut_man_tiles',\r\n            stageMusic: AudioName.music_cut_man_stage,\r\n            bossMusic: AudioName.music_boss_loop,\r\n        };\r\n        this.levelInfos.push(levelInfo);\r\n\r\n        levelInfo = {\r\n            index: 1,\r\n            id: LevelId.CUT_MAN,\r\n            map: this.game.add.tilemap('cut_man'),\r\n            tiledImageName: 'cut_man_tiles',\r\n            tilesetImageKey: 'cut_man_tiles',\r\n            stageMusic: AudioName.music_cut_man_stage,\r\n            bossMusic: AudioName.music_boss_loop,\r\n        };\r\n        this.levelInfos.push(levelInfo);\r\n\r\n        levelInfo = {\r\n            index: 2,\r\n            id: LevelId.GUTS_MAN,\r\n            map: this.game.add.tilemap('guts_man'),\r\n            tiledImageName: 'guts_man_tiles',\r\n            tilesetImageKey: 'guts_man_tiles',\r\n            stageMusic: AudioName.music_guts_man_stage,\r\n            bossMusic: AudioName.music_boss_loop,\r\n        };\r\n        this.levelInfos.push(levelInfo);\r\n\r\n        levelInfo = {\r\n            index: 3,\r\n            id: LevelId.ICE_MAN,\r\n            map: this.game.add.tilemap('ice_man'),\r\n            tiledImageName: 'ice_man_tiles',\r\n            tilesetImageKey: 'ice_man_tiles',\r\n            stageMusic: AudioName.music_ice_man_stage,\r\n            bossMusic: AudioName.music_boss_loop,\r\n        };\r\n        this.levelInfos.push(levelInfo);\r\n\r\n        levelInfo = {\r\n            index: 4,\r\n            id: LevelId.BOMB_MAN,\r\n            map: this.game.add.tilemap('bomb_man'),\r\n            tiledImageName: 'bomb_man_tiles',\r\n            tilesetImageKey: 'bomb_man_tiles',\r\n            stageMusic: AudioName.music_bomb_man_stage,\r\n            bossMusic: AudioName.music_boss_loop,\r\n        };\r\n        this.levelInfos.push(levelInfo);\r\n\r\n        levelInfo = {\r\n            index: 5,\r\n            id: LevelId.FIRE_MAN,\r\n            map: this.game.add.tilemap('fire_man'),\r\n            tiledImageName: 'fire_man_tiles',\r\n            tilesetImageKey: 'fire_man_tiles',\r\n            stageMusic: AudioName.music_fire_man_stage,\r\n            bossMusic: AudioName.music_boss_loop,\r\n        };\r\n        this.levelInfos.push(levelInfo);\r\n\r\n        levelInfo = {\r\n            index: 6,\r\n            id: LevelId.ELEC_MAN,\r\n            map: this.game.add.tilemap('elec_man'),\r\n            tiledImageName: 'elec_man_tiles',\r\n            tilesetImageKey: 'elec_man_tiles',\r\n            stageMusic: AudioName.music_elec_man_stage,\r\n            bossMusic: AudioName.music_boss_loop,\r\n        };\r\n        this.levelInfos.push(levelInfo);\r\n    }\r\n\r\n    public makeLevel(): void {\r\n        this.levelInfos.filter((value: LevelInfo) => {\r\n            if (value.id == LevelManager.CURR_LEVEL) {\r\n                this.map = value.map; // set the current map\r\n                this.map.addTilesetImage(value.tiledImageName, value.tilesetImageKey); // ex. 'tiles' , 'cut_man_tiles'\r\n                this.background = this.map.createLayer('background');\r\n                this.spikes = this.map.createLayer('spikes');\r\n                this.foreground = this.map.createLayer('foreground');\r\n            }\r\n        });\r\n    }\r\n\r\n    public playStageMusic(): void {\r\n        if (!Debug.EnableMusic) {\r\n            return;\r\n        }\r\n\r\n        console.log('Play stage music.');\r\n\r\n        this.levelInfos.filter((value: LevelInfo) => {\r\n            if (value.id == LevelManager.CURR_LEVEL) {\r\n                console.log('value.id: ' + value.id)\r\n                console.log('value.stageMusic: ' + value.stageMusic)\r\n                this.stageMusic = this.game.sound.add(value.stageMusic);\r\n                this.stageMusic.loop = true;\r\n                this.stageMusic.play();\r\n            }\r\n        });\r\n    }\r\n\r\n    public stopStageMusic(): void {\r\n        if (this.stageMusic != null || this.stageMusic != undefined) {\r\n            console.log('Stop stage music.');\r\n            this.stageMusic.stop();\r\n        }\r\n    }\r\n\r\n    public playBossIntroMusic(): void {\r\n        if (!Debug.EnableMusic) {\r\n            return;\r\n        }\r\n        console.log(\"Play boss intro music.\")\r\n\r\n        this.bossMusic.play(BossMusicMarker.intro);\r\n    }\r\n\r\n    public playBossLoopMusic(): void {\r\n        if (!Debug.EnableMusic) {\r\n            return;\r\n        }\r\n        this.bossMusic.play(BossMusicMarker.loop).loop = true;\r\n    }\r\n\r\n    public stopBossMusic(): void {\r\n        if (!Debug.EnableMusic) {\r\n            return;\r\n        }\r\n        console.log(\"Stop boss intro music.\")\r\n\r\n        if (this.bossMusic != null || this.bossMusic != undefined) {\r\n            this.bossMusic.stop();\r\n        }\r\n    }\r\n\r\n    public destroy(): void {\r\n        if (this.stageMusic != null || this.stageMusic != undefined) {\r\n            this.stageMusic.destroy();\r\n        }\r\n    }\r\n}","\r\nimport { SpriteSheets } from '../konstants'\r\nimport { GameStates } from '../main'\r\n\r\nexport class Title extends Phaser.State {\r\n\r\n    private titleScreenCache: any;\r\n    private title: Phaser.Sprite;\r\n    private tm_text: Phaser.BitmapText;\r\n    private press_start_text: Phaser.BitmapText;\r\n    private eula1_text: Phaser.BitmapText;\r\n    private eula2_text: Phaser.BitmapText;\r\n    private eula3_text: Phaser.BitmapText;\r\n\r\n    public preload(): void {\r\n        console.log(\"Title::preload()\");\r\n    }\r\n\r\n    public create(): void {\r\n        console.log(\"Title::create()\");\r\n\r\n        this.titleScreenCache = this.game.cache.getJSON('title_screen');\r\n        console.log(this.titleScreenCache)\r\n\r\n        this.title = this.game.add.sprite(\r\n            this.titleScreenCache.title_screen.title.position[0],\r\n            this.titleScreenCache.title_screen.title.position[1],\r\n            SpriteSheets.stage_select_and_title, 'mega_man_title');\r\n        this.title.anchor.setTo(0.5, 0.5);\r\n\r\n        // tm_text\r\n        this.tm_text = this.game.add.bitmapText(\r\n            this.titleScreenCache.title_screen.tm.position[0],\r\n            this.titleScreenCache.title_screen.tm.position[1],\r\n            'myfont', 'tm', 8);\r\n        this.tm_text.anchor.setTo(0.5, 0.5);\r\n        this.tm_text.smoothed = false;\r\n\r\n        // title\r\n        this.press_start_text = this.game.add.bitmapText(\r\n            this.titleScreenCache.title_screen.press_start.position[0],\r\n            this.titleScreenCache.title_screen.press_start.position[1],\r\n            'myfont', 'PRESS START', 8);\r\n        this.press_start_text.anchor.setTo(0.5, 0.5);\r\n        this.press_start_text.smoothed = false;\r\n\r\n        // eula1\r\n        this.eula1_text = this.game.add.bitmapText(\r\n            this.titleScreenCache.title_screen.eula1.position[0],\r\n            this.titleScreenCache.title_screen.eula1.position[1],\r\n            'myfont', 'TM AND 1987 CAPCOM U.S.A., INC.', 8);\r\n        this.eula1_text.smoothed = false;\r\n        this.eula1_text.align = 'center';\r\n\r\n        // eula2\r\n        this.eula2_text = this.game.add.bitmapText(\r\n            this.titleScreenCache.title_screen.eula2.position[0],\r\n            this.titleScreenCache.title_screen.eula2.position[1],\r\n            'myfont', '\\t\\t\\t\\t\\t\\t\\t\\t\\tLICENSED BY', 8);\r\n        this.eula2_text.smoothed = false;\r\n        this.eula2_text.align = 'center';\r\n\r\n        // eula3\r\n        this.eula3_text = this.game.add.bitmapText(\r\n            this.titleScreenCache.title_screen.eula3.position[0],\r\n            this.titleScreenCache.title_screen.eula3.position[1],\r\n            'myfont', '\\t\\t\\tNINTENDO OF AMERICA INC.', 8);\r\n        this.eula3_text.smoothed = false;\r\n        this.eula3_text.align = 'center';\r\n\r\n        this.game.input.keyboard.addKey(Phaser.Keyboard.ENTER).onDown.add(() => {\r\n            let timer = this.game.time.create(true);\r\n            let count = 0;\r\n            let visible = true;\r\n            timer.repeat(150, 17, () => {\r\n                count++;\r\n                visible = !visible;\r\n                this.press_start_text.visible = visible;\r\n\r\n                if (count == 17) {\r\n                    this.state.start(GameStates.StageSelect);\r\n                }\r\n            }, this);\r\n            timer.start(0);\r\n        }, this);\r\n    }\r\n}","import { EntityType, SpriteSheets, AudioName } from '../konstants'\r\nimport { GameStates } from '../main'\r\nimport { Helper } from '../helper'\r\nimport { v2 } from '../util/v2'\r\nimport { Catmull } from '../catmull/catmull'\r\nimport { SaveGame } from '../saveGame'\r\nimport { World } from '../world'\r\nimport { LevelManager, LevelId } from '../managers/levelManager'\r\nimport { Debug } from '../debug'\r\n\r\nenum StageID {\r\n    Cut_Man = 0,\r\n    Guts_Man = 1,\r\n    Ice_Man = 2,\r\n    Bomb_Man = 3,\r\n    Fire_Man = 4,\r\n    Elec_Man = 5,\r\n    Dr_Wily = 6,\r\n}\r\n\r\ninterface IStageButton {\r\n    stageId: StageID;\r\n    stageName: string;\r\n    portrait: Phaser.Sprite;\r\n    portraitFrame: Phaser.Sprite;\r\n    stageText: Phaser.BitmapText;\r\n    isSelected: boolean;\r\n}\r\n\r\nexport class StageSelect extends Phaser.State {\r\n\r\n    private static hasRunOnce: boolean = false;\r\n    private static leftKey: Phaser.Key;\r\n    private static rightKey: Phaser.Key;\r\n    private static dKey: Phaser.Key;\r\n    private static eKey: Phaser.Key;\r\n    private currIdx: number = 0;\r\n    private currStageBtn: IStageButton = null;\r\n    private stageBtns: Array<IStageButton> = new Array<IStageButton>();\r\n    private isReady: boolean = false;\r\n    private isGameStarting: boolean = false;\r\n    private darkBackground: Phaser.Graphics;\r\n    private whiteBackground: Phaser.Graphics;\r\n    private catmull: Catmull = null;\r\n    private points: Array<v2> = new Array<v2>();\r\n    private stageSelectJson: any;\r\n    private selectStageText: Phaser.BitmapText;\r\n    private pressStartText: Phaser.BitmapText;\r\n    private stageText: Phaser.BitmapText;\r\n    private clearPointsText: Phaser.BitmapText;\r\n    private pointsText: Phaser.BitmapText;\r\n    private boss: Phaser.Sprite;\r\n\r\n    public preload(): void {\r\n        console.log(\"StageSelect::preload()\");\r\n    }\r\n\r\n    public create(): void {\r\n        console.log(\"StageSelect::create()\");\r\n\r\n        if (!StageSelect.hasRunOnce) {\r\n            this.createDefaults();\r\n        }\r\n\r\n        this.currIdx = 0;\r\n        this.resetCamera();\r\n        this.createInput();\r\n        this.createStageButtons();\r\n        this.createDarkBackground();\r\n        this.createWhiteBackground();\r\n        this.createText();\r\n        this.playStageSelectMusic();\r\n        this.catmull = new Catmull(this.points);\r\n        this.game.stage.backgroundColor = 0x0070EC;\r\n        this.isReady = true;\r\n    }\r\n\r\n    private createText(): void {\r\n        this.selectStageText = this.game.add.bitmapText(106, 96, 'myfont', 'SELECT \\nSTAGE', 8);\r\n        this.selectStageText.smoothed = false;\r\n\r\n        this.pressStartText = this.game.add.bitmapText(106, 120, 'myfont', 'PRESS \\nSTART', 8);\r\n        this.pressStartText.smoothed = false;\r\n\r\n        this.stageText = this.game.add.bitmapText(134, 96, 'myfont', 'CUTMAN', 8);\r\n        this.stageText.smoothed = false;\r\n        this.stageText.visible = false;\r\n\r\n        this.clearPointsText = this.game.add.bitmapText(134, 110, 'myfont', 'CLEAR POINTS', 8);\r\n        this.clearPointsText.smoothed = false;\r\n        this.clearPointsText.visible = false;\r\n\r\n        this.pointsText = this.game.add.bitmapText(134, 124, 'myfont', '80000', 8);\r\n        this.pointsText.smoothed = false;\r\n        this.pointsText.visible = false;\r\n    }\r\n\r\n    private playStageSelectMusic(): void {\r\n        if (!Debug.EnableMusic) {\r\n            return;\r\n        }\r\n        this.game.sound.play(AudioName.music_stage_select);\r\n    }\r\n\r\n\r\n    private createDefaults(): void {\r\n        this.stageSelectJson = this.game.cache.getJSON('stage_select');\r\n    }\r\n\r\n    private resetCamera(): void {\r\n        this.game.camera.bounds.x = 0;\r\n        this.game.camera.bounds.y = 0;\r\n        this.game.camera.bounds.width = 256;\r\n        this.game.camera.bounds.height = 240;\r\n        this.game.camera.setPosition(0, 0);\r\n    }\r\n\r\n    private createInput(): void {\r\n        StageSelect.leftKey = this.game.input.keyboard.addKey(Phaser.Keyboard.LEFT);\r\n        StageSelect.rightKey = this.game.input.keyboard.addKey(Phaser.Keyboard.RIGHT);\r\n        StageSelect.dKey = this.game.input.keyboard.addKey(Phaser.Keyboard.D);\r\n        StageSelect.eKey = this.game.input.keyboard.addKey(Phaser.Keyboard.E);\r\n\r\n        StageSelect.leftKey.onDown.add(() => {\r\n            if (this.isGameStarting) return;\r\n            if (!this.isReady) return;\r\n            let prevIdx: number = this.currIdx;\r\n            this.currIdx--;\r\n            if (this.currIdx < 0) {\r\n                this.currIdx = this.stageBtns.length - 1;\r\n            }\r\n            this.hoverThisStage(prevIdx, this.currIdx);\r\n        }, this);\r\n\r\n        StageSelect.rightKey.onDown.add(() => {\r\n            if (this.isGameStarting) return;\r\n            if (!this.isReady) return;\r\n            let prevIdx: number = this.currIdx;\r\n            this.currIdx++;\r\n            if (this.currIdx >= this.stageBtns.length) {\r\n                this.currIdx = 0;\r\n            }\r\n            this.hoverThisStage(prevIdx, this.currIdx);\r\n        }, this);\r\n\r\n        StageSelect.dKey.onDown.add(() => {\r\n            if (this.isGameStarting) return;\r\n            if (!this.isReady) return;\r\n            this.selectThisStage();\r\n        }, this);\r\n\r\n        StageSelect.eKey.onDown.add(() => {\r\n            if (this.isGameStarting) return;\r\n            if (!this.isReady) return;\r\n            this.selectThisStage();\r\n        }, this);\r\n    }\r\n\r\n    private createStageButtons(): void {\r\n        let stage_select: any = this.stageSelectJson.stage_select;\r\n        let props: Array<string> = Object.getOwnPropertyNames(stage_select);\r\n\r\n        props.map((key: string) => {\r\n            let bossName: string = key;\r\n            let stageID: number = stage_select[key].stageID;\r\n            let selected: boolean = stage_select[key].selected;\r\n            let stage_sprite: string = stage_select[key].stage_sprite;\r\n            let stage_sprite_completed: string = stage_select[key].stage_sprite_completed;\r\n            let stage_name: string = stage_select[key].stage_name;\r\n            let portraitX: number = stage_select[key].portrait_position[0];\r\n            let portraitY: number = stage_select[key].portrait_position[1];\r\n            let portraitFrameX: number = stage_select[key].portrait_frame_position[0];\r\n            let portraitFrameY: number = stage_select[key].portrait_frame_position[1];\r\n            let scaleX: number = stage_select[key].scaleX;\r\n            let portraitName: string = '';\r\n\r\n            if (stageID == -1) {\r\n                if (!Debug.ShowDebugTestLevelInStageSelect) {\r\n                    return;\r\n                }\r\n            }\r\n            else if (stageID == 0) {\r\n                portraitName = SaveGame.HasDefeatedCutMan == true ? stage_sprite_completed : stage_sprite;\r\n            }\r\n            else if (stageID == 1) {\r\n                portraitName = SaveGame.HasDefeatedGutsMan == true ? stage_sprite_completed : stage_sprite;\r\n            }\r\n            else if (stageID == 2) {\r\n                portraitName = SaveGame.HasDefeatedIceMan == true ? stage_sprite_completed : stage_sprite;\r\n            }\r\n            else if (stageID == 3) {\r\n                portraitName = SaveGame.HasDefeatedBombMan == true ? stage_sprite_completed : stage_sprite;\r\n            }\r\n            else if (stageID == 4) {\r\n                portraitName = SaveGame.HasDefeatedFireMan == true ? stage_sprite_completed : stage_sprite;\r\n            }\r\n            else if (stageID == 5) {\r\n                portraitName = SaveGame.HasDefeatedElecMan == true ? stage_sprite_completed : stage_sprite;\r\n            }\r\n\r\n            this.stageBtns.push(this.createStageButton(stageID, stage_name, portraitName, portraitX, portraitY, portraitFrameX, portraitFrameY, selected));\r\n        });\r\n\r\n        this.stageBtns.forEach(element => {\r\n            if (element.isSelected) {\r\n                element.portraitFrame.play('blink');\r\n                element.isSelected = true;\r\n            }\r\n        });\r\n    }\r\n\r\n    private createDarkBackground(): void {\r\n        this.darkBackground = this.game.add.graphics(0, 80);\r\n        this.darkBackground.beginFill(0x183c5c, 1);\r\n        this.darkBackground.drawRect(0, 0, 256, 65);\r\n        this.darkBackground.endFill();\r\n        this.darkBackground.alpha = 0;\r\n    }\r\n\r\n    private createWhiteBackground(): void {\r\n        this.whiteBackground = this.game.add.graphics(0, 0);\r\n        this.whiteBackground.beginFill(0xffffff, 1);\r\n        this.whiteBackground.drawRect(0, 0, 256, 240);\r\n        this.whiteBackground.endFill();\r\n        this.whiteBackground.alpha = 0;\r\n    }\r\n\r\n    private hoverThisStage(prevIdx: number, currIdx: number): void {\r\n        this.stageBtns[prevIdx].isSelected = false;\r\n        this.stageBtns[prevIdx].portraitFrame.animations.stop('blink', true);\r\n        this.stageBtns[currIdx].isSelected = true;\r\n        this.stageBtns[currIdx].portraitFrame.play('blink').setFrame(1, true);\r\n        this.game.sound.play(AudioName.menu_select);\r\n    }\r\n\r\n    private selectThisStage(): void {\r\n        this.isGameStarting = true;\r\n        this.updateCurrentStage();\r\n        this.hideStageSelect();\r\n        this.showStageChosenDarkBackground();\r\n        this.flashScreen();\r\n        this.playStartGameAudio();\r\n\r\n        if (LevelManager.CURR_LEVEL == LevelId.TEST_LEVEL) {\r\n            this.showAndAnimateStageText();\r\n            return;\r\n        }\r\n\r\n        this.createBoss();\r\n        this.playBossJump();\r\n    }\r\n\r\n    // TODO: Fix layer. These numbers do not exist yet.\r\n    private updateCurrentStage(): void {\r\n        switch (this.stageBtns[this.currIdx].stageId) {\r\n            // case -1:\r\n            //     LevelManager.CURR_LEVEL = LevelId.TEST_LEVEL;\r\n            //     break;\r\n\r\n            case 0:\r\n                LevelManager.CURR_LEVEL = LevelId.CUT_MAN;\r\n                break;\r\n\r\n            case 1:\r\n                LevelManager.CURR_LEVEL = LevelId.GUTS_MAN;\r\n                break;\r\n\r\n            case 2:\r\n                LevelManager.CURR_LEVEL = LevelId.ICE_MAN;\r\n                break;\r\n\r\n            case 3:\r\n                LevelManager.CURR_LEVEL = LevelId.BOMB_MAN;\r\n                break;\r\n\r\n            case 4:\r\n                LevelManager.CURR_LEVEL = LevelId.FIRE_MAN;\r\n                break;\r\n\r\n            case 5:\r\n                LevelManager.CURR_LEVEL = LevelId.ELEC_MAN;\r\n                break;\r\n\r\n            case 6:\r\n                LevelManager.CURR_LEVEL = LevelId.DR_WILY_1;\r\n                break;\r\n\r\n            // case 7:\r\n            //     LevelManager.CURR_LEVEL = LevelId.DR_WILY_2;\r\n            //     break;\r\n\r\n            // case 8:\r\n            //     LevelManager.CURR_LEVEL = LevelId.DR_WILY_3;\r\n            //     break;\r\n\r\n            // case 9:\r\n            //     LevelManager.CURR_LEVEL = LevelId.DR_WILY_4;\r\n            //     break;\r\n\r\n            default:\r\n                break;\r\n        }\r\n\r\n        console.log(\"Stage selected: \" + LevelManager.CURR_LEVEL);\r\n    }\r\n\r\n    private playStartGameAudio(): void {\r\n        this.game.sound.stopAll();\r\n        this.game.sound.play(AudioName.game_start);\r\n\r\n        if (!Debug.EnableMusic) {\r\n            return;\r\n        }\r\n\r\n        this.game.sound.play(AudioName.music_stage_chosen);\r\n    }\r\n\r\n    private createBoss(): void {\r\n        let boss_animation: any = this.stageSelectJson.boss_animation;\r\n        let props: Array<string> = Object.getOwnPropertyNames(boss_animation);\r\n        let sprite_sheet: number;\r\n        let positionX: number;\r\n        let positionY: number;\r\n        let scaleX: number;\r\n        let initial_frame: string;\r\n        let jump: Array<string> = new Array<string>();\r\n        let taunt: Array<string> = new Array<string>();\r\n        let tauntFrameSpeed: number;\r\n        let path: Array<Phaser.Point>;\r\n\r\n        props.map((key: string) => {\r\n            if (boss_animation[key].stageID != this.stageBtns[this.currIdx].stageId) {\r\n                return;\r\n            }\r\n\r\n            sprite_sheet = boss_animation[key].sprite_sheet;\r\n            positionX = boss_animation[key].position[0];\r\n            positionY = boss_animation[key].position[1];\r\n            scaleX = boss_animation[key].scaleX;\r\n            initial_frame = boss_animation[key].initial_frame;\r\n            jump = boss_animation[key].jump;\r\n            taunt = boss_animation[key].taunt;\r\n            tauntFrameSpeed = boss_animation[key].tauntFrameSpeed;\r\n            path = new Array<Phaser.Point>();\r\n\r\n            for (let i = 0; i < boss_animation[key].path.length; i++) {\r\n                path.push(new Phaser.Point(\r\n                    boss_animation[key].path[i][0],\r\n                    boss_animation[key].path[i][1]\r\n                ));\r\n            }\r\n        });\r\n\r\n        this.boss = this.game.add.sprite(positionX, positionY, sprite_sheet, initial_frame);\r\n        this.game.add.existing(this.boss);\r\n        this.boss.anchor.setTo(0.5);\r\n        this.boss.scale.x = scaleX;\r\n        this.boss.animations.add('jump', jump, 7);\r\n        this.boss.animations.add('taunt', taunt, tauntFrameSpeed);\r\n\r\n        path.forEach(element => {\r\n            this.points.push(new v2(element.x, element.y));\r\n        });\r\n    }\r\n\r\n    private playBossJump(): void {\r\n        this.boss.play('jump');\r\n\r\n        let marker: number = 0;\r\n        let animateBoss: Phaser.Timer = this.game.time.create(true);\r\n        animateBoss.loop(1 / 60, () => {\r\n            marker += 2.2 * (1 / 60);\r\n            if (marker > this.points.length - 1) {\r\n                this.boss.scale.x = -1;\r\n                animateBoss.stop();\r\n                this.playBossTaunt();\r\n                return;\r\n            }\r\n            let pos: v2 = this.catmull.getSplinePoint(marker, true);\r\n            this.boss.x = pos.x;\r\n            this.boss.y = pos.y;\r\n        }, this);\r\n        animateBoss.start();\r\n    }\r\n\r\n    private playBossTaunt(): void {\r\n        this.boss.animations.play('taunt');\r\n        let bossTauntTimer: Phaser.Timer = this.game.time.create(true);\r\n        bossTauntTimer.loop(1 / 60, () => {\r\n            if (this.boss.animations.currentAnim.isFinished) {\r\n                bossTauntTimer.stop();\r\n                this.showAndAnimateStageText();\r\n            }\r\n        }, this);\r\n        bossTauntTimer.start();\r\n    }\r\n\r\n    private showAndAnimateStageText(): void {\r\n        this.stageText.text = \"\";\r\n        this.stageText.visible = true;\r\n        let stageTextTimer: Phaser.Timer = this.game.time.create(true);\r\n        let index: number = 0;\r\n        let length: number = this.stageBtns[this.currIdx].stageName.length;\r\n        stageTextTimer.loop(100, () => {\r\n            if (index == length) {\r\n                stageTextTimer.stop();\r\n                this.showAndAnimateClearPointsText();\r\n                return;\r\n            }\r\n\r\n            this.stageText.text += this.stageBtns[this.currIdx].stageName[index];\r\n            index++;\r\n        }, this);\r\n        stageTextTimer.start(0);\r\n    }\r\n\r\n    private showAndAnimateClearPointsText(): void {\r\n        this.clearPointsText.text = \"\";\r\n        this.clearPointsText.visible = true;\r\n        let cpTextTimer: Phaser.Timer = this.game.time.create(true);\r\n        let index: number = 0;\r\n        let length: number = 12;\r\n        let cp: string = \"CLEAR POINTS\";\r\n        cpTextTimer.loop(100, () => {\r\n            if (index == length) {\r\n                cpTextTimer.stop();\r\n                this.showAndAnimatePointsText();\r\n                return;\r\n            }\r\n\r\n            this.clearPointsText.text += cp[index];\r\n            index++;\r\n        }, this);\r\n        cpTextTimer.start(0);\r\n    }\r\n\r\n    private showAndAnimatePointsText(): void {\r\n        this.pointsText.text = \"\";\r\n        this.pointsText.visible = true;\r\n        let pointsTextTimer: Phaser.Timer = this.game.time.create(true);\r\n        let index: number = 0;\r\n        let length: number = 5;\r\n        let cp: string = \"80000\";\r\n        pointsTextTimer.loop(200, () => {\r\n            if (index == length) {\r\n                pointsTextTimer.stop();\r\n                this.game.time.events.add(1200, () => {\r\n                    this.startGame();\r\n                });\r\n                return;\r\n            }\r\n            this.pointsText.text += cp[index].toString();\r\n            index++;\r\n        }, this);\r\n        pointsTextTimer.start(0);\r\n    }\r\n\r\n    private startGame(): void {\r\n        StageSelect.hasRunOnce = true;\r\n        this.whiteBackground.alpha = 0;\r\n        this.darkBackground.alpha = 0;\r\n        this.game.input.keyboard.removeKey(Phaser.Keyboard.LEFT);\r\n        this.game.input.keyboard.removeKey(Phaser.Keyboard.RIGHT);\r\n        this.game.input.keyboard.removeKey(Phaser.Keyboard.D);\r\n        this.game.input.keyboard.removeKey(Phaser.Keyboard.ENTER);\r\n        if (this.boss != null || this.boss != undefined) {\r\n            this.boss.visible = false;\r\n        }\r\n        this.isReady = false;\r\n        this.isGameStarting = false;\r\n\r\n        for (let i = this.catmull.points.length - 1; i >= 0; i--) {\r\n            this.catmull.points.splice(i, 1);\r\n        }\r\n\r\n        for (let i = this.stageBtns.length - 1; i >= 0; i--) {\r\n            this.stageBtns.splice(i, 1);\r\n        }\r\n\r\n        this.whiteBackground.destroy();\r\n        this.darkBackground.destroy();\r\n        this.stageText.visible = false;\r\n        this.clearPointsText.visible = false;\r\n        this.game.state.start(GameStates.Game);\r\n    }\r\n\r\n    private createStageButton(stageId: StageID, stageName: string, portraitName: string, portraitX: number, portraitY: number,\r\n        portraitFrameX: number, portraitFrameY: number, selected: boolean): IStageButton {\r\n        let stageButton: IStageButton = {\r\n            stageId: stageId,\r\n            stageName: stageName,\r\n            portrait: this.game.add.sprite(portraitX, portraitY, SpriteSheets.stage_select_and_title, portraitName),\r\n            portraitFrame: this.game.add.sprite(portraitFrameX, portraitFrameY, SpriteSheets.stage_select_and_title, 'cursor_normal'),\r\n            stageText: this.game.add.bitmapText(portraitX, portraitFrameY, \"myfont\", \"\", 8),\r\n            isSelected: selected,\r\n        };\r\n\r\n        stageButton.portraitFrame.animations.add('blink', ['cursor_normal', 'cursor_blink'], 5, true);\r\n        stageButton.stageText.text = stageButton.stageName;\r\n        stageButton.stageText.anchor.setTo(0.5, 0.5);\r\n        stageButton.stageText.x += 17;\r\n        stageButton.stageText.y += 55;\r\n        return stageButton;\r\n    }\r\n\r\n    private hideStageSelect(): void {\r\n        this.stageBtns.forEach(stage => {\r\n            stage.isSelected = false;\r\n            stage.portrait.visible = false;\r\n            stage.portraitFrame.animations.stop();\r\n            stage.portraitFrame.visible = false;\r\n            stage.stageText.visible = false;\r\n        });\r\n\r\n        this.selectStageText.visible = false;\r\n        this.pressStartText.visible = false;\r\n    }\r\n\r\n    private showStageChosenDarkBackground(): void {\r\n        this.darkBackground.alpha = 1;\r\n    }\r\n\r\n    private flashScreen(): void {\r\n        let flashCount: number = 0;\r\n        let isWhiteBackgroundShowing: boolean = true;\r\n        this.whiteBackground.alpha = 1;\r\n        let flashTimer: Phaser.Timer = this.game.time.create(true);\r\n        flashTimer.loop(120, () => {\r\n            if (flashCount == 10) {\r\n                flashTimer.stop();\r\n            }\r\n            flashCount++;\r\n            this.whiteBackground.alpha = isWhiteBackgroundShowing ? 0 : 1;\r\n            isWhiteBackgroundShowing = !isWhiteBackgroundShowing;\r\n        }, this);\r\n        flashTimer.start();\r\n    }\r\n}","/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author philogb / http://blog.thejit.org/\r\n * @author egraether / http://egraether.com/\r\n * @author zz85 / http://www.lab4games.net/zz85/blog\r\n */\r\nexport class v2 {\r\n    x: number;\r\n    y: number;\r\n    \r\n    constructor(x: number = 0, y: number = 0) {\r\n        this.x = x;\r\n        this.y = y;\r\n    }\r\n\r\n    clone() {\r\n        return new v2(this.x, this.y);\r\n    }\r\n\r\n    add(v: v2) {\r\n        this.x += v.x;\r\n        this.y += v.y;\r\n        return this;\r\n    }\r\n    sub(v: v2) {\r\n        this.x -= v.x;\r\n        this.y -= v.y;\r\n        return this;\r\n    }\r\n\r\n    multiplyScalar(s: number) {\r\n        this.x *= s;\r\n        this.y *= s;\r\n        return this;\r\n    }\r\n\r\n    divideScalar(s: number) {\r\n        this.x /= s;\r\n        this.y /= s;\r\n        return this;\r\n    }\r\n\r\n    dot(v: v2) {\r\n        return this.x * v.x + this.y * v.y;\r\n    }\r\n\r\n    lengthSq() {\r\n        return this.x * this.x + this.y * this.y;\r\n    }\r\n\r\n    length() {\r\n        return Math.sqrt(this.lengthSq());\r\n    }\r\n\r\n    normalize() {\r\n        this.x /= this.length();\r\n        this.y /= this.length();\r\n        return this;\r\n    }\r\n\r\n    perp() {\r\n        var temp = this.x;\r\n        this.x = -this.y;\r\n        this.y = temp;\r\n        return this;\r\n    }\r\n\r\n    static add(a: v2, b: v2) {\r\n        return new v2(a.x + b.x, a.y + b.y)\r\n    }\r\n\r\n    static sub(a: v2, b: v2) {\r\n        return new v2(a.x - b.x, a.y - b.y)\r\n    }\r\n\r\n    static multiplyScalar(a: v2, s: number) {\r\n        return new v2(a.x * s, a.y * s)\r\n    }\r\n\r\n    static divideScalar(a: v2, s: number) {\r\n        return new v2(a.x / s, a.y / s)\r\n    }\r\n\r\n    static dot(a: v2, b: v2) {\r\n        return a.x * b.x + a.y * b.y;\r\n    }\r\n\r\n    static staticLengthSq(a: v2) {\r\n        return a.x * a.x + a.y * a.y;\r\n    }\r\n\r\n    static staticLength(a: v2) {\r\n        return v2.staticLengthSq(a);\r\n    }\r\n\r\n    static normalize(v: v2) {\r\n        return new v2(v.x / v.length(), v.y / v.length());\r\n    }\r\n\r\n    static perp(v: v2) {\r\n        return new v2(-v.y, v.x);\r\n    }\r\n\r\n    static crossVV(a: v2, b: v2): number {\r\n        return a.x * b.y - a.y * b.x;\r\n    }\r\n\r\n    static crossVS(v: v2, s: number): v2 {\r\n        return new v2(s * v.y, -s * v.x);\r\n    }\r\n\r\n    static crossSV(s: number, v: v2): v2 {\r\n        return new v2(-s * v.y, s * v.x);\r\n    }\r\n\r\n}","import { v2 } from '../util/v2'\r\n\r\nexport class Catmull {\r\n\r\n    constructor(public points: Array<v2>) { }\r\n\r\n    /**\r\n     * doYoutube()\r\n     * This generates the path.\r\n     * For this to be looped you must modify the for loop in doYouTube(). It must not have - 3. It has to\r\n     * go through all the points.\r\n     * @param t \r\n     * @param looped \r\n     */\r\n    public getSplinePoint(t: number, looped: boolean = false): v2 {\r\n        let p1: number = 0;\r\n        let p2: number = 0;\r\n        let p3: number = 0;\r\n        let p0: number = 0;\r\n\r\n        if (!looped) {\r\n            p1 = Math.floor(t) + 1;\r\n            p2 = p1 + 1;\r\n            p3 = p1 + 2;\r\n            p0 = p1 - 1;\r\n        }\r\n        else {\r\n            p1 = Math.floor(t);\r\n            p2 = (p1 + 1) % this.points.length;\r\n            p3 = (p1 + 2) % this.points.length;\r\n            p0 = p1 >= 1 ? p1 - 1 : this.points.length - 1;\r\n        }\r\n\r\n        // HACK: Since we are looping through all points now we must make sure that p3 is not greater than the total points\r\n        //          or we get an error. Alternatively, if you do not use looping you can add this.points.length - 3 to the for loop.\r\n        //          for(let i = 0; i < this.points.length - 3; i += 0.05)\r\n        //          This is only if you will never use looping, EVER.\r\n        if (p3 > this.points.length - 1) {\r\n            return new v2();\r\n        }\r\n\r\n        t = t - Math.floor(t);\r\n\r\n        let tt: number = t * t;\r\n        let ttt: number = tt * t;\r\n\r\n        let q1 = -ttt + 2 * tt - t;\r\n        let q2 = 3 * ttt - 5 * tt + 2;\r\n        let q3 = -3 * ttt + 4 * tt + t;\r\n        let q4 = ttt - tt;\r\n\r\n        let tx: number = 0.5 * (this.points[p0].x * q1 + this.points[p1].x * q2 + this.points[p2].x * q3 + this.points[p3].x * q4);\r\n        let ty: number = 0.5 * (this.points[p0].y * q1 + this.points[p1].y * q2 + this.points[p2].y * q3 + this.points[p3].y * q4);\r\n\r\n        return new v2(tx, ty);\r\n    }\r\n\r\n    /**\r\n    * doYoutube();\r\n    * This generates the tangent. Use this to rotate characters in the direction of spline. I think this is the tangent\r\n    * or normal...\r\n    * @param t \r\n    * @param looped \r\n    */\r\n    public getSplineGradient(t: number, looped: boolean = false): v2 {\r\n        let p1: number = 0;\r\n        let p2: number = 0;\r\n        let p3: number = 0;\r\n        let p0: number = 0;\r\n\r\n        if (!looped) {\r\n            p1 = Math.floor(t) + 1;\r\n            p2 = p1 + 1;\r\n            p3 = p1 + 2;\r\n            p0 = p1 - 1;\r\n        }\r\n        else {\r\n            p1 = Math.floor(t);\r\n            p2 = (p1 + 1) % this.points.length;\r\n            p3 = (p1 + 2) % this.points.length;\r\n            p0 = p1 >= 1 ? p1 - 1 : this.points.length - 1;\r\n        }\r\n\r\n        // HACK: Since we are looping through all points now we must make sure that p3 is not greater than the total points\r\n        //          or we get an error. Alternatively, if you do not use looping you can add this.points.length - 3 to the for loop.\r\n        //          for(let i = 0; i < this.points.length - 3; i += 0.05)\r\n        //          This is only if you will never use looping, EVER.\r\n        if (p3 > this.points.length - 1) {\r\n            return new v2();\r\n        }\r\n\r\n        t = t - Math.floor(t);\r\n\r\n        let tt: number = t * t;\r\n        let ttt: number = tt * t;\r\n\r\n        let q1 = -3 * tt + 4 * t - 1;\r\n        let q2 = 9 * tt - 10 * t;\r\n        let q3 = -9 * tt + 8 * t + 1;\r\n        let q4 = 3 * tt - 2 * t;\r\n\r\n        let tx: number = 0.5 * (this.points[p0].x * q1 + this.points[p1].x * q2 + this.points[p2].x * q3 + this.points[p3].x * q4);\r\n        let ty: number = 0.5 * (this.points[p0].y * q1 + this.points[p1].y * q2 + this.points[p2].y * q3 + this.points[p3].y * q4);\r\n\r\n        return new v2(tx, ty);\r\n    }\r\n}","import { GameStates } from '../main'\r\nimport { World } from '../world'\r\nimport { SaveGame } from '../saveGame'\r\n\r\nexport class Game extends Phaser.State {\r\n\r\n    public static dKey: Phaser.Key;\r\n    public static qKey: Phaser.Key;\r\n    private myWorld: World;\r\n\r\n    public preload(): void {\r\n        console.log(\"Game::preload()\");\r\n    }\r\n\r\n    public create(): void {\r\n        console.log(\"Game::create()\");\r\n\r\n        this.game.stage.backgroundColor = 0;\r\n        this.createStepping(false);\r\n        this.myWorld = new World(this.game);\r\n        this.game.physics.startSystem(Phaser.Physics.ARCADE);\r\n\r\n        this.myWorld.game.input.keyboard.addKey(Phaser.Keyboard.D).onDown.add(() => {\r\n            if (this.myWorld.canGoBackToStageSelect) {\r\n                this.myWorld.levelManager.stopBossMusic();\r\n                this.myWorld.levelManager.stopStageMusic();\r\n                this.myWorld.levelManager.destroy();\r\n                this.game.state.start(GameStates.StageSelect);\r\n            }\r\n        }, this);\r\n\r\n        this.myWorld.game.input.keyboard.addKey(Phaser.Keyboard.Q).onDown.add(() => {\r\n            this.myWorld.levelManager.stopBossMusic();\r\n            this.myWorld.levelManager.stopStageMusic();\r\n            this.myWorld.levelManager.destroy();\r\n            this.game.state.start(GameStates.StageSelect);\r\n        }, this);\r\n\r\n        this.myWorld.game.input.keyboard.addKey(Phaser.Keyboard.U).onDown.add(() => {\r\n            this.myWorld.debugDrawManager.toggleGridDrawing();\r\n        }, this);\r\n\r\n        this.myWorld.game.input.keyboard.addKey(Phaser.Keyboard.I).onDown.add(() => {\r\n            this.myWorld.toggleTiles();\r\n        }, this);\r\n\r\n        this.myWorld.game.input.keyboard.addKey(Phaser.Keyboard.O).onDown.add(() => {\r\n            this.myWorld.debugDrawManager.toggleHitboxDrawing();\r\n        }, this);\r\n\r\n        this.myWorld.game.input.keyboard.addKey(Phaser.Keyboard.P).onDown.add(() => {\r\n            this.myWorld.debugDrawManager.toggleOutlineDrawing();\r\n        }, this);\r\n\r\n        this.myWorld.game.input.keyboard.addKey(Phaser.Keyboard.M).onDown.add(() => {\r\n            SaveGame.clearLocalStorage();\r\n        }, this);\r\n    }\r\n\r\n    public update(): void {\r\n        this.myWorld.update();\r\n        this.showDebug();\r\n    }\r\n\r\n    private createStepping(pauseOnStart: boolean = false): void {\r\n        // let toggleBtn = document.getElementById('toggle');\r\n        // let stepBtn = document.getElementById('step');\r\n\r\n        // toggleBtn.onclick = () => {\r\n        //     if (!this.game.stepping) {\r\n        //         this.game.sound.pauseAll();\r\n        //         this.game.enableStep();\r\n        //     }\r\n        //     else {\r\n        //         this.game.sound.resumeAll();\r\n        //         this.game.disableStep();\r\n        //     }\r\n        // }\r\n\r\n        // stepBtn.onclick = () => {\r\n        //     this.game.step();\r\n        // }\r\n\r\n        // if (pauseOnStart) {\r\n        //     this.game.enableStep();\r\n        // }\r\n    }\r\n\r\n    private showDebug(): void {\r\n        // this.game.debug.inputInfo(10, 10);\r\n        // this.game.debug.body(this.player);\r\n        // this.game.debug.bodyInfo(this.player, 10, 10);\r\n        // this.game.debug.spriteInfo(this.player, 10, 10);\r\n        // this.game.debug.spriteBounds(this.player); // mega man sprite bounds\r\n        // this.game.debug.spriteBounds(this.player.hitbox); // mega man hitbox\r\n    }\r\n}","import { EntityManager } from './managers/entityManager'\r\nimport { CollisionManager } from './managers/collisionManager'\r\nimport { LevelManager, LevelId } from './managers/levelManager'\r\nimport { DropManager } from './managers/dropManager'\r\nimport { InventoryManager } from './managers/inventoryManager'\r\nimport { VanishingBlockManager, VanishingBlockTrigger } from './managers/vanishingBlockManager'\r\nimport { DebugDrawManager } from './managers/debugDrawManager'\r\nimport { Entity } from './entity'\r\nimport { Konstants, TagType, AudioName, EntityType } from './konstants'\r\nimport { Camera, GoingTo } from './camera'\r\nimport { Spawner, RespawnLocation } from './spawner'\r\nimport { Player } from './player'\r\nimport { PlayerInput } from './playerInput'\r\nimport { PlayerGraphics } from './playerGraphics'\r\nimport { Spike } from './spike'\r\nimport { VanishingBlock } from './platforms/vanishingBlock'\r\nimport { State } from './fsm/state'\r\nimport { StateMachine } from './fsm/stateMachine'\r\nimport { MathUtil, KeyedCollection } from './util/mathutil'\r\nimport { Input } from './input'\r\nimport { Meter } from './ui/meter'\r\nimport { CutMan, CutManAnimations } from './enemies/bosses/cut_man'\r\nimport { GutsMan, GutsManAnimations } from './enemies/bosses/guts_man'\r\nimport { IceMan, IceManAnimations } from './enemies/bosses/ice_man'\r\nimport { BombMan, BombManAnimations } from './enemies/bosses/bomb_man'\r\nimport { FireMan, FireManAnimations } from './enemies/bosses/fire_man'\r\nimport { ElecMan, ElecManAnimations } from './enemies/bosses/elec_man'\r\nimport { SaveGame } from './saveGame'\r\nimport { Debug } from './debug'\r\nimport { GameData, BossData } from './gameData'\r\nimport { Boss } from './enemies/bosses/boss'\r\nimport { SAT2D } from './sat2d/sat2d'\r\nimport { Ray, RayType } from './sat2d/ray'\r\nimport { RayIntersection } from './sat2d/rayIntersection'\r\nimport { Polygon } from './sat2d/polygon'\r\nimport { ShapeCollision } from './sat2d/shapeCollision'\r\nimport { Vector2 } from './sat2d/vector2'\r\nimport { WeaponType } from './weapon/weapon'\r\nimport { PowerUp } from './powerups/powerUp'\r\nimport { DropLift } from './platforms/drop_lift'\r\nimport { FootHolder } from './enemies/foot_holder'\r\n\r\ninterface LevelCheckPoint {\r\n    levelNum: number;\r\n    checkpointsRoomIndex: Array<number>;    // The room indices that act as a checkpoint.\r\n    spawnPos: Array<Phaser.Point>; // The spawn positions for each checkpoint. Saved as tile indices (multiply by 16 to get world coordinates).\r\n    active: Array<boolean>;         // If the checkpoint index has been 'touched'.\r\n}\r\n\r\nenum WorldState {\r\n    spawning = 'spawning',\r\n    running = 'running',\r\n    giving_energy = 'giving_energy',\r\n    waiting_for_reset = 'waiting_for_reset',\r\n    game_over = 'game_over',\r\n    waiting = 'waiting',\r\n}\r\n\r\n/**\r\n * Walls are made up of surfaces. Some collision detection is better suited for rectangle overlap tests.\r\n */\r\nexport interface Wall {\r\n    top: Surface;\r\n    left: Surface;\r\n    right: Surface;\r\n    bottom: Surface;\r\n    rect: Phaser.Rectangle;\r\n}\r\n\r\n/**\r\n * A surface is part of a wall. Raycasts (player) is great for physics movement collision detection.\r\n */\r\nexport interface Surface {\r\n    p1: Phaser.Point;\r\n    p2: Phaser.Point;\r\n    dir: Phaser.Point;\r\n    collidable: boolean;\r\n    isMovingPlatform: boolean;\r\n    targetSpeed: Phaser.Point;\r\n}\r\n\r\nexport interface Door {\r\n    isOpen: boolean;\r\n    hitbox: Phaser.Rectangle;\r\n    surfaces: Array<Surface>;\r\n    tileCoordinates: Array<Phaser.Point>;\r\n    doorDirection: string;\r\n    secondDoorIntoBossRoom: boolean; // This door will be animated (closed) when mega-man enters boss room after cut-scene.\r\n    firstDoorIntoBossRoom: boolean;\r\n}\r\n\r\n/**\r\n * Surface collisions are not checked when on ladders so dont put doors on ladders.\r\n */\r\nexport class World {\r\n\r\n    public game: Phaser.Game;\r\n    public entityManager: EntityManager;\r\n    public collisionManager: CollisionManager;\r\n    public levelManager: LevelManager;\r\n    public dropManager: DropManager;\r\n    public inventoryManager: InventoryManager;\r\n    public vanishingBlockManager: VanishingBlockManager;\r\n    public debugDrawManager: DebugDrawManager;\r\n    public walls: Array<Wall> = new Array<Wall>();\r\n    public surfaces: Array<Surface> = new Array<Surface>();\r\n    public ladders: Array<Phaser.Rectangle> = new Array<Phaser.Rectangle>();\r\n    public deathZones: Array<Phaser.Rectangle> = new Array<Phaser.Rectangle>();\r\n    public doors: Array<Door> = new Array<Door>();\r\n    public vanishingBlockTriggers: Array<VanishingBlockTrigger> = new Array<VanishingBlockTrigger>();\r\n    public crazyRazyTriggers: Array<Phaser.Rectangle> = new Array<Phaser.Rectangle>();\r\n    public camera: Camera;\r\n    public spawners: Array<Spawner> = new Array<Spawner>();\r\n    public isPaused: boolean = false;\r\n    public isStandardPaused: boolean = false;\r\n    public pausedWarpSpeed: number = 200;\r\n    public fsm: StateMachine;\r\n    public initialSpawn: boolean = true; // True, if the game has just started.\r\n    public sKey: Phaser.Key;\r\n    public eKey: Phaser.Key;\r\n    public upKey: Phaser.Key;\r\n    public downKey: Phaser.Key;\r\n    private currBoss: Boss = null;\r\n    private shakeScreenTimer: Phaser.Timer;\r\n    private graphicsDebug: Phaser.Graphics;\r\n    private dustPool: Phaser.Group;\r\n    private hurtDustPool: Phaser.Group;\r\n    private megaManDeathEffectPool: Phaser.Group;\r\n    private explosionEffectPool: Phaser.Group;\r\n    private levelCheckpoints: Array<LevelCheckPoint> = new Array<LevelCheckPoint>();\r\n    private checkPointRoomIndex: number = 0;    // The room index set in Tiled.\r\n    private checkpointArrayIndex: number = 0;   // The index of the checkpoint in the LevelCheckPoint array.\r\n    public startingSpawnPos: Phaser.Point = new Phaser.Point();\r\n    playerStartX: number = 0;\r\n    playerStartY: number = 0;\r\n    playerEndX: number = 0;\r\n    playerEndY: number = 0;\r\n    startLerp: boolean = false;\r\n    lerpElapsedTime: number = 0;\r\n    lerpEndTime: number = 1500;\r\n    doorTimer: Phaser.Timer;\r\n    public levelCompleted: boolean = false;\r\n    public canGoBackToStageSelect: boolean = false;\r\n\r\n    //************************************\r\n    // DEBUG\r\n    //************************************\r\n    private showBackgroundTiles: boolean;\r\n    private showForegroundTiles: boolean;\r\n    private showSpikeTiles: boolean;\r\n    public showDebug: boolean;\r\n\r\n    constructor(game: Phaser.Game) {\r\n        this.game = game;\r\n        this.entityManager = new EntityManager(this.game, this);\r\n        this.collisionManager = new CollisionManager(this.game, this);\r\n        this.collisionManager.createEntityFromSpawner.add(this.createEntityFromSpawner, this);\r\n        this.levelManager = new LevelManager(this);\r\n        this.levelManager.createLevels();\r\n        this.levelManager.makeLevel();\r\n        this.dropManager = new DropManager(this.game, this);\r\n        this.inventoryManager = new InventoryManager(this);\r\n        this.inventoryManager.initialize();\r\n        this.vanishingBlockManager = new VanishingBlockManager(this);\r\n        this.debugDrawManager = new DebugDrawManager(this);\r\n\r\n        this.graphicsDebug = this.game.add.graphics();\r\n        this.game.add.existing(this.graphicsDebug);\r\n\r\n        this.createSpikes();\r\n\r\n        this.showSpikeTiles = Debug.SpikesVisible;\r\n        this.showBackgroundTiles = Debug.BackgroundVisible;\r\n        this.showForegroundTiles = Debug.ForegroundVisible;\r\n        this.showDebug = Debug.AllowDrawOutlines;\r\n\r\n        this.levelManager.spikes.visible = this.showSpikeTiles;\r\n        this.levelManager.background.visible = this.showBackgroundTiles;\r\n        this.levelManager.foreground.visible = this.showForegroundTiles;\r\n\r\n        let objects: any = this.levelManager.map.objects;\r\n        this.parsePlayerStartingPos(objects);\r\n        this.parseCheckpoints(objects);\r\n        this.parseItems(objects);\r\n        this.parseVanishingBlocks(objects);\r\n        this.parseDropLifts(objects);\r\n        this.parseFootHolders(objects);\r\n        this.parseDeathZones(objects);\r\n        this.parseDoors(objects);\r\n        this.parseWalls(objects);\r\n        this.parseLadders(objects);\r\n        this.parseEnemies(objects);\r\n        this.parseCrazyRazyTriggers(objects);\r\n\r\n        this.surfaces.forEach((surface) => {\r\n            this.entityManager.addSurface(surface);\r\n        });\r\n\r\n        this.ladders.forEach((ladder) => {\r\n            this.entityManager.addLadder(ladder);\r\n        });\r\n\r\n        this.createPlayer();\r\n        this.createCamera(objects);\r\n        // this.checkCheckpoint();\r\n        this.createDustPool();\r\n        this.createHurtDustPool();\r\n        this.createMegaManDeathEffectPool();\r\n        this.createExplosionPool();\r\n        this.debugTestSetInitialMegaManPosition(objects); // must execute after camera and getting initial player pos\r\n        this.createFiniteStateMachine();\r\n\r\n        this.dropManager.initialize();\r\n        this.sKey = this.game.input.keyboard.addKey(Phaser.Keyboard.S);\r\n        this.eKey = this.game.input.keyboard.addKey(Phaser.Keyboard.E);\r\n        this.upKey = this.game.input.keyboard.addKey(Phaser.Keyboard.UP);\r\n        this.downKey = this.game.input.keyboard.addKey(Phaser.Keyboard.DOWN);\r\n    }\r\n\r\n    /**\r\n     * DEBUG\r\n     * \r\n     * This will be used to set Mega Man's starting position based on Tiled player position.\r\n     * This is primarily used for debugging and testing levels.\r\n     */\r\n    private debugTestSetInitialMegaManPosition(objects: any): void {\r\n        for (let i = 0; i < objects.camera_bounds.length; i++) {\r\n            let topLeft: Phaser.Point = new Phaser.Point(objects.camera_bounds[i].x, objects.camera_bounds[i].y);\r\n            let camera_bounds: Phaser.Rectangle = new Phaser.Rectangle(topLeft.x, topLeft.y, objects.camera_bounds[i].width, objects.camera_bounds[i].height);\r\n            let playerPos: Phaser.Rectangle = new Phaser.Rectangle(this.startingSpawnPos.x, this.startingSpawnPos.y, 16, 16);\r\n\r\n            if (playerPos.intersects(camera_bounds, 0)) {\r\n                this.camera.setCurrentRoom(objects.camera_bounds[i].properties.index);\r\n                break;\r\n            }\r\n        }\r\n\r\n        this.checkCheckpoint();\r\n    }\r\n\r\n    private createSpikes(): void {\r\n        let spikeIndex: number = GameData.BossDatas.filter((value: BossData) => {\r\n            return ((<LevelId>value.name) == LevelManager.CURR_LEVEL);\r\n        })[0].spikeTile;\r\n\r\n        for (let i = 0; i < this.levelManager.spikes.layer.data.length; i++) {\r\n            for (let j = 0; j < this.levelManager.spikes.layer.data[i].length; j++) {\r\n                if (this.levelManager.spikes.layer.data[i][j].index == spikeIndex) {\r\n                    let entity: Entity = this.entityManager.createEntity(EntityType.spike, this.levelManager.spikes.layer.data[i][j].worldX + 8, this.levelManager.spikes.layer.data[i][j].worldY + 16);\r\n                    this.game.add.existing(entity);\r\n                    this.entityManager.addEntity(entity);\r\n                    // entity.visible = false;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    private parsePlayerStartingPos(objects: any): void {\r\n        // Get and set the player's starting spawn position.\r\n        for (let i = 0; i < objects.player.length; i++) {\r\n            if (objects.player[i].name == 'player') {\r\n                this.startingSpawnPos.x = objects.player[i].x;\r\n                this.startingSpawnPos.y = objects.player[i].y;\r\n            }\r\n        }\r\n    }\r\n\r\n    private parseCheckpoints(objects: any): void {\r\n        let index: Array<number> = new Array<number>();\r\n        let checkPointsRoomIndex: Array<number> = new Array<number>();\r\n        let spawnPos: Array<Phaser.Point> = new Array<Phaser.Point>();\r\n        let active: Array<boolean> = new Array<boolean>();\r\n\r\n        for (let i = 0; i < objects.checkpoints.length; i++) {\r\n            // console.log('objects.checkpoints[i].properties.index: ' + objects.checkpoints[i].properties.index)\r\n            // console.log('objects.checkpoints[i].properties.roomIndex: ' + objects.checkpoints[i].properties.roomIndex)\r\n\r\n            index.push(objects.checkpoints[i].properties.index);\r\n            checkPointsRoomIndex.push(objects.checkpoints[i].properties.roomIndex);\r\n            spawnPos.push(new Phaser.Point(objects.checkpoints[i].x / 16, objects.checkpoints[i].y / 16));\r\n            active.push(false);\r\n        }\r\n\r\n        this.levelCheckpoints.push({\r\n            levelNum: 1,\r\n            checkpointsRoomIndex: checkPointsRoomIndex,\r\n            spawnPos: spawnPos,\r\n            active: active\r\n        });\r\n    }\r\n\r\n    private parseItems(objects: any): void {\r\n        for (let i = 0; i < objects.items.length; i++) {\r\n            let x: number = objects.items[i].x;\r\n            let y: number = objects.items[i].y;\r\n            let entity: PowerUp = this.entityManager.createPowerUp(objects.items[i].type, x, y, true);\r\n            this.game.add.existing(entity);\r\n            this.entityManager.addEntity(entity);\r\n        }\r\n    }\r\n\r\n    private parseVanishingBlocks(objects: any): void {\r\n        if (objects.vanishing_blocks_trigger == undefined) {\r\n            console.warn('vanishing_blocks_trigger does not exist. Intended? - Some level don\\'t need this.')\r\n            return;\r\n        }\r\n\r\n        for (let i = 0; i < objects.vanishing_blocks_trigger.length; i++) {\r\n            let x: number = objects.vanishing_blocks_trigger[i].x;\r\n            let y: number = objects.vanishing_blocks_trigger[i].y;\r\n            let width: number = objects.vanishing_blocks_trigger[i].width;\r\n            let height: number = objects.vanishing_blocks_trigger[i].height;\r\n            this.vanishingBlockTriggers.push(\r\n                {\r\n                    groupIndex: objects.vanishing_blocks_trigger[i].properties.group,\r\n                    trigger: new Phaser.Rectangle(x, y, width, height)\r\n                }\r\n            );\r\n        }\r\n\r\n        for (let i = 0; i < objects.vanishing_blocks.length; i++) {\r\n            let x: number = objects.vanishing_blocks[i].x;\r\n            let y: number = objects.vanishing_blocks[i].y;\r\n            let entity: any = this.entityManager.createEntity(objects.vanishing_blocks[i].type, x, y);\r\n            this.game.add.existing(entity);\r\n            this.entityManager.addEntity(entity);\r\n\r\n            let width: number = objects.vanishing_blocks[i].width;\r\n            let height: number = objects.vanishing_blocks[i].height;\r\n\r\n            let v0: Phaser.Point = new Phaser.Point(x, y - 16);                    // top-left\r\n            let v1: Phaser.Point = new Phaser.Point(x + width, y - 16);            // top-right\r\n            let v2: Phaser.Point = new Phaser.Point(x + width, y + height - 16);   // bottom-right\r\n            let v3: Phaser.Point = new Phaser.Point(x, y + height - 16);           // bottom-left\r\n\r\n            let dir1: Phaser.Point = v1.clone().subtract(v0.x, v0.y).normalize(); // top face\r\n            let dir2: Phaser.Point = v2.clone().subtract(v1.x, v1.y).normalize(); // right face\r\n            let dir3: Phaser.Point = v3.clone().subtract(v2.x, v2.y).normalize(); // bottom face\r\n            let dir4: Phaser.Point = v0.clone().subtract(v3.x, v3.y).normalize(); // left face\r\n\r\n            let line1: Surface = { p1: v0, p2: v1, dir: dir1, collidable: true, isMovingPlatform: false, targetSpeed: null }\r\n            let line2: Surface = { p1: v1, p2: v2, dir: dir2, collidable: true, isMovingPlatform: false, targetSpeed: null };\r\n            let line3: Surface = { p1: v2, p2: v3, dir: dir3, collidable: true, isMovingPlatform: false, targetSpeed: null };\r\n            let line4: Surface = { p1: v3, p2: v0, dir: dir4, collidable: true, isMovingPlatform: false, targetSpeed: null };\r\n\r\n            this.surfaces.push(line1);\r\n            this.surfaces.push(line2);\r\n            this.surfaces.push(line3);\r\n            this.surfaces.push(line4);\r\n\r\n            (<VanishingBlock>entity).groupIndex = objects.vanishing_blocks[i].properties.group;\r\n            (<VanishingBlock>entity).index = objects.vanishing_blocks[i].properties.index;\r\n            (<VanishingBlock>entity).startDelay = objects.vanishing_blocks[i].properties.startDelay;\r\n            (<VanishingBlock>entity).appearFor = objects.vanishing_blocks[i].properties.appearFor;\r\n\r\n            (<VanishingBlock>entity).surfaces.push(line1);\r\n            (<VanishingBlock>entity).surfaces.push(line2);\r\n            (<VanishingBlock>entity).surfaces.push(line3);\r\n            (<VanishingBlock>entity).surfaces.push(line4);\r\n            (<VanishingBlock>entity).surfaces.forEach(element => {\r\n                element.collidable = false;\r\n            });\r\n\r\n            // (<VanishingBlock>entity).startDelay = objects.vanishing_blocks[i].properties.startDelay;\r\n            // (<VanishingBlock>entity).appearFor = objects.vanishing_blocks[i].properties.appearFor;\r\n            // (<VanishingBlock>entity).hideFor = objects.vanishing_blocks[i].properties.hideFor;\r\n            // (<VanishingBlock>entity).initialize();\r\n\r\n            this.vanishingBlockManager.addToGroup((<VanishingBlock>entity).groupIndex, (<VanishingBlock>entity));\r\n        }\r\n    }\r\n\r\n    private parseDropLifts(objects: any): void {\r\n        for (let i = 0; i < objects.drop_lifts.length; i++) {\r\n            if (objects.drop_lifts[i].type == 'drop_lift_path') {\r\n                continue;\r\n            }\r\n\r\n            let x: number = objects.drop_lifts[i].x;\r\n            let y: number = objects.drop_lifts[i].y;\r\n            let dropLift: DropLift = this.entityManager.createDropLift(\r\n                x,\r\n                y,\r\n                objects.drop_lifts[i].properties.path,\r\n                objects.drop_lifts[i].properties.delay);\r\n            this.game.add.existing(dropLift);\r\n            this.entityManager.addEntity(dropLift);\r\n\r\n            let width: number = objects.drop_lifts[i].width;\r\n            let height: number = objects.drop_lifts[i].height;\r\n\r\n            let v0: Phaser.Point = new Phaser.Point(x, y - 16);                    // top-left\r\n            let v1: Phaser.Point = new Phaser.Point(x + width, y - 16);            // top-right\r\n\r\n            let dir1: Phaser.Point = v1.clone().subtract(v0.x, v0.y).normalize();  // top face\r\n            let line1: Surface = { p1: v0, p2: v1, dir: dir1, collidable: true, isMovingPlatform: true, targetSpeed: new Phaser.Point() }\r\n            this.surfaces.push(line1);\r\n            let tempSurfaces: Array<Surface> = new Array<Surface>();\r\n\r\n            dropLift.setSurface(line1);\r\n            dropLift.initialize();\r\n        }\r\n    }\r\n\r\n    private parseFootHolders(objects: any): void {\r\n        for (let i = 0; i < objects.foot_holders.length; i++) {\r\n            let tiledCustomProps = {\r\n                numLeftTiles: objects.foot_holders[i].properties.numLeftTiles,\r\n                numRightTiles: objects.foot_holders[i].properties.numRightTiles\r\n            };\r\n\r\n            let x: number = objects.foot_holders[i].x;\r\n            let y: number = objects.foot_holders[i].y;\r\n            let footHolder: FootHolder = <FootHolder>this.entityManager.createEntity(\r\n                EntityType.foot_holder,\r\n                x, y, tiledCustomProps);\r\n            this.game.add.existing(footHolder);\r\n            this.entityManager.addEntity(footHolder);\r\n        }\r\n    }\r\n\r\n    private parseDeathZones(objects: any): void {\r\n        // console.log('death_zones length: ' + objects.death_zones.length);\r\n\r\n        for (let i = 0; i < objects.death_zones.length; i++) {\r\n            let tempRect: Phaser.Rectangle = new Phaser.Rectangle(0, 0, 1, 1);\r\n            tempRect.x = objects.death_zones[i].x;\r\n            tempRect.y = objects.death_zones[i].y;\r\n            tempRect.width = objects.death_zones[i].width;\r\n            tempRect.height = objects.death_zones[i].height;\r\n            this.deathZones.push(tempRect);\r\n\r\n            // console.log('deathzone ' + i);\r\n            // console.log(tempRect);\r\n        }\r\n    }\r\n\r\n    private parseDoors(objects: any): void {\r\n        for (let i = 0; i < objects.doors.length; i++) {\r\n            // Door surface is collidable to prevent player from going back\r\n            // NOTE: Collidable does nothing currently.\r\n            if (objects.doors[i].name == 'door') {\r\n                let door: Door = {\r\n                    isOpen: false, hitbox: null, surfaces: new Array<Surface>(), tileCoordinates: new Array<Phaser.Point>(),\r\n                    doorDirection: 'right', firstDoorIntoBossRoom: false, secondDoorIntoBossRoom: false,\r\n                };\r\n\r\n                door.doorDirection = objects.doors[i].properties.doorDirection;\r\n                door.firstDoorIntoBossRoom = objects.doors[i].properties.firstDoorIntoBossRoom;\r\n                door.secondDoorIntoBossRoom = objects.doors[i].properties.secondDoorIntoBossRoom;\r\n\r\n                let x: number = objects.doors[i].x;\r\n                let y: number = objects.doors[i].y;\r\n                let width: number = objects.doors[i].width;\r\n                let height: number = objects.doors[i].height;\r\n\r\n                let v0: Phaser.Point = new Phaser.Point(x, y);                  // top-left\r\n                let v1: Phaser.Point = new Phaser.Point(x + width, y);          // top-right\r\n                let v2: Phaser.Point = new Phaser.Point(x + width, y + height); // bottom-right\r\n                let v3: Phaser.Point = new Phaser.Point(x, y + height);         // bottom-left\r\n\r\n                let dir1: Phaser.Point = v1.clone().subtract(v0.x, v0.y).normalize(); // top face\r\n                let dir2: Phaser.Point = v2.clone().subtract(v1.x, v1.y).normalize(); // right face\r\n                let dir3: Phaser.Point = v3.clone().subtract(v2.x, v2.y).normalize(); // bottom face\r\n                let dir4: Phaser.Point = v0.clone().subtract(v3.x, v3.y).normalize(); // left face\r\n\r\n                let line1: Surface = { p1: v0, p2: v1, dir: dir1, collidable: true, isMovingPlatform: false, targetSpeed: null }\r\n                let line2: Surface = { p1: v1, p2: v2, dir: dir2, collidable: true, isMovingPlatform: false, targetSpeed: null };\r\n                let line3: Surface = { p1: v2, p2: v3, dir: dir3, collidable: true, isMovingPlatform: false, targetSpeed: null };\r\n                let line4: Surface = { p1: v3, p2: v0, dir: dir4, collidable: true, isMovingPlatform: false, targetSpeed: null };\r\n\r\n                // When the player goes through a door this surface will block them from going back.\r\n                if (door.doorDirection == 'left') {\r\n                    door.surfaces.push(line4); // Redundant...leaving in...future might want to disable/enable blockage.\r\n                    this.surfaces.push(line4);\r\n                }\r\n                else if (door.doorDirection == 'right') {\r\n                    door.surfaces.push(line2);\r\n                    this.surfaces.push(line2);\r\n                }\r\n                else if (door.doorDirection == 'up') {\r\n                    door.surfaces.push(line1);\r\n                    this.surfaces.push(line1);\r\n                }\r\n                else if (door.doorDirection == 'down') {\r\n                    door.surfaces.push(line3);\r\n                    this.surfaces.push(line3);\r\n                }\r\n\r\n                door.hitbox = new Phaser.Rectangle(x, y, width, height);\r\n\r\n                let tiles: Phaser.Tile[] = this.levelManager.foreground.getTiles(x, y, width, height);\r\n                for (let i = 0; i < tiles.length; i++) {\r\n                    door.tileCoordinates.push(new Phaser.Point(tiles[i].x, tiles[i].y));\r\n                }\r\n\r\n                this.doors.push(door);\r\n\r\n                if (door.secondDoorIntoBossRoom) {\r\n                    this.hideDoor(door); // Hide the boss door that will be controlled from cut-scene.\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    private parseWalls(objects: any): void {\r\n        let temp_v0: Vector2 = new Vector2();\r\n        let temp_v1: Vector2 = new Vector2();\r\n        let temp_v2: Vector2 = new Vector2();\r\n        let temp_v3: Vector2 = new Vector2();\r\n\r\n        for (let i = 0; i < objects.walls.length; i++) {\r\n            let x: number = objects.walls[i].x;\r\n            let y: number = objects.walls[i].y;\r\n            let width: number = objects.walls[i].width;\r\n            let height: number = objects.walls[i].height;\r\n\r\n            let v0: Phaser.Point = new Phaser.Point(x, y);                  // top-left\r\n            let v1: Phaser.Point = new Phaser.Point(x + width, y);          // top-right\r\n            let v2: Phaser.Point = new Phaser.Point(x + width, y + height); // bottom-right\r\n            let v3: Phaser.Point = new Phaser.Point(x, y + height);         // bottom-left\r\n\r\n            let dir1: Phaser.Point = v1.clone().subtract(v0.x, v0.y).normalize(); // top face\r\n            let dir2: Phaser.Point = v2.clone().subtract(v1.x, v1.y).normalize(); // right face\r\n            let dir3: Phaser.Point = v3.clone().subtract(v2.x, v2.y).normalize(); // bottom face\r\n            let dir4: Phaser.Point = v0.clone().subtract(v3.x, v3.y).normalize(); // left face\r\n\r\n            let line1: Surface = { p1: v0, p2: v1, dir: dir1, collidable: true, isMovingPlatform: false, targetSpeed: null }\r\n            let line2: Surface = { p1: v1, p2: v2, dir: dir2, collidable: true, isMovingPlatform: false, targetSpeed: null };\r\n            let line3: Surface = { p1: v2, p2: v3, dir: dir3, collidable: true, isMovingPlatform: false, targetSpeed: null };\r\n            let line4: Surface = { p1: v3, p2: v0, dir: dir4, collidable: true, isMovingPlatform: false, targetSpeed: null };\r\n\r\n            this.surfaces.push(line1);\r\n            this.surfaces.push(line2);\r\n            this.surfaces.push(line3);\r\n            this.surfaces.push(line4);\r\n\r\n            temp_v0.x = v0.x;\r\n            temp_v0.y = v0.y;\r\n            temp_v1.x = v1.x;\r\n            temp_v1.y = v1.y;\r\n            temp_v2.x = v2.x;\r\n            temp_v2.y = v2.y;\r\n            temp_v3.x = v3.x;\r\n            temp_v3.y = v3.y;\r\n\r\n            let rect: Phaser.Rectangle = new Phaser.Rectangle(x, y, width, height);\r\n\r\n            this.walls.push({ top: line1, left: line2, right: line4, bottom: line3, rect: rect });\r\n        }\r\n    }\r\n\r\n    private parseLadders(objects: any): void {\r\n        for (let i = 0; i < objects.ladders.length; i++) {\r\n            let x: number = objects.ladders[i].x; // top-left x position of ladder\r\n            let y: number = objects.ladders[i].y; // top-left y position of ladder\r\n            let width: number = objects.ladders[i].width;\r\n            let height: number = objects.ladders[i].height;\r\n\r\n            // Create ladder line\r\n            // The ladder line is the 'floor' at the top of the ladder the player stands on.\r\n            // Without the floor the player falls through the gap created by the ladder.\r\n            // Player ignores this floor when on ladder.\r\n            let startX: number = x;        // start x for the top of the ladder 'floor'\r\n            let startY: number = y + 16;  // start y for the top of the ladder 'floor'\r\n            let endX: number = x + 16;    // end x for the top of the ladder 'floor'\r\n            let endY: number = y + 16;    // end y for the top of the ladder 'floor'\r\n\r\n            let v0: Phaser.Point = new Phaser.Point(startX, startY);\r\n            let v1: Phaser.Point = new Phaser.Point(endX, endY);\r\n            let dir1: Phaser.Point = v1.clone().subtract(v0.x, v0.y).normalize();\r\n            let ladderLine: Surface = { p1: v0, p2: v1, dir: dir1, collidable: true, isMovingPlatform: false, targetSpeed: null }\r\n            this.surfaces.push(ladderLine);\r\n\r\n            // The ladder hitbox.\r\n            let rect: Phaser.Rectangle = new Phaser.Rectangle(x, y, width, height);\r\n            this.ladders.push(rect);\r\n        }\r\n    }\r\n\r\n    private parseEnemies(objects: any): void {\r\n        for (let i = 0; i < objects.enemies.length; i++) {\r\n            let width: number = objects.enemies[i].width;\r\n            let height: number = objects.enemies[i].height;\r\n            let x: number = objects.enemies[i].x + width * 0.5;\r\n            let y: number = objects.enemies[i].y - height * 0.5; // subtract because Tiled uses bottom left corner...\r\n            let rotation: number = objects.enemies[i].rotation == undefined ? 0 : objects.enemies[i].rotation;\r\n            let canLoop: boolean = objects.enemies[i].type == EntityType.bombomb;\r\n            let loopTime: number = 0;\r\n            let respawnLocation: RespawnLocation = RespawnLocation.Original;\r\n            let maxEntitiesAllowedPerLoop: number = 1; // default always 1\r\n            let useDistanceCheck: boolean = false;\r\n            let withinPlayerDistanceX: number = 99999;\r\n            let withinPlayerDistanceY: number = 99999;\r\n            let tiledCustomProps: any = null;\r\n\r\n            switch (objects.enemies[i].type) {\r\n                case EntityType.octopus_battery:\r\n                    tiledCustomProps = {\r\n                        speed: objects.enemies[i].properties.speed,\r\n                        horizontal: objects.enemies[i].properties.horizontal,\r\n                        vertical: objects.enemies[i].properties.vertical,\r\n                    };\r\n                    break;\r\n\r\n                case EntityType.bombomb:\r\n                    loopTime = 3000;\r\n                    // Needs to be pushed UP slightly to prevent bombomb activating when the player is\r\n                    // a screen below the actual spawner.\r\n                    y -= 2;\r\n                    break;\r\n\r\n                case EntityType.killer_bullet:\r\n                    canLoop = objects.enemies[i].properties.loop;\r\n                    loopTime = objects.enemies[i].properties.loopTime;\r\n                    break;\r\n\r\n                case EntityType.screw_bomber:\r\n                    tiledCustomProps = {\r\n                        // rotation is not a custom property for screw_bomber in Tiled.\r\n                        // However, we need it to properly set whether or not the screw_bomber\r\n                        // is mounted to the floor or ceiling. We don't use custom properties here\r\n                        // because it is simpler to use rotation. No need to remember to set a custom property.\r\n                        rotation: rotation,\r\n                    };\r\n                    break;\r\n\r\n                case EntityType.super_cutter:\r\n                    canLoop = true;\r\n                    loopTime = 600;\r\n                    maxEntitiesAllowedPerLoop = 999999;\r\n                    useDistanceCheck = true;\r\n                    withinPlayerDistanceX = 70;\r\n                    break;\r\n\r\n                case EntityType.flying_shell:\r\n                    canLoop = true;\r\n                    loopTime = 300;\r\n                    break;\r\n\r\n                case EntityType.peng:\r\n                    canLoop = true;\r\n                    loopTime = 500;\r\n                    respawnLocation = RespawnLocation.RightSideOfScreen;\r\n                    tiledCustomProps = {\r\n                        xDistance: objects.enemies[i].properties.xDistance,\r\n                    };\r\n                    break;\r\n\r\n                case EntityType.beak:\r\n                    tiledCustomProps = {\r\n                        rotation: rotation,\r\n                    };\r\n                    break;\r\n\r\n                case EntityType.watcher:\r\n                    tiledCustomProps = {\r\n                        spawnDelay: objects.enemies[i].properties.spawnDelay,\r\n                        direction: objects.enemies[i].properties.direction,\r\n                    };\r\n\r\n                    // Needs to be pushed UP slightly to prevent watcher being detected by the collision manager\r\n                    // camera intersection test that enables/disables its spawner.\r\n                    y -= 2;\r\n                    break;\r\n            }\r\n\r\n            this.spawners.push({\r\n                game: this.game,\r\n                entityManager: this.entityManager,\r\n                collisionManager: this.collisionManager,\r\n                x: x,\r\n                y: y,\r\n                width: width,\r\n                height: height,\r\n                rotation: rotation,\r\n                entityType: objects.enemies[i].type,\r\n                isSpawnerOnScreen: false,\r\n                entities: new Array<Entity>(),\r\n                canLoop: canLoop,\r\n                loopElapsedTime: loopTime,\r\n                loopEndTime: loopTime,\r\n                respawnLocation: respawnLocation,\r\n                useDistanceCheck: useDistanceCheck,\r\n                withinPlayerDistanceX: withinPlayerDistanceX,\r\n                withinPlayerDistanceY: withinPlayerDistanceY,\r\n                maxEntitiesAllowedPerLoop: maxEntitiesAllowedPerLoop,\r\n                properties: tiledCustomProps,\r\n            });\r\n        }\r\n    }\r\n\r\n    private parseCrazyRazyTriggers(objects: any): void {\r\n        // Doesn't exist in this map.\r\n        if (objects.crazy_razy_trigger == undefined) {\r\n            console.warn('crazy_razy_trigger does not exist. Intended? - Some level don\\'t need this.')\r\n            return;\r\n        }\r\n\r\n        for (let i = 0; i < objects.crazy_razy_trigger.length; i++) {\r\n            let width: number = objects.crazy_razy_trigger[i].width;\r\n            let height: number = objects.crazy_razy_trigger[i].height;\r\n            let x: number = objects.crazy_razy_trigger[i].x;\r\n            let y: number = objects.crazy_razy_trigger[i].y;\r\n\r\n            this.crazyRazyTriggers.push(new Phaser.Rectangle(x, y, width, height));\r\n        }\r\n    }\r\n\r\n    public update(): void {\r\n        if (!this.canGoBackToStageSelect) {\r\n            this.fsm.currentState.update();\r\n            this.checkPlayerNeedsLerp();\r\n        }\r\n    }\r\n\r\n    public showDoor(door: Door): void {\r\n        let tiles: Phaser.Tile[] = this.levelManager.foreground.getTiles(door.hitbox.x, door.hitbox.y, door.hitbox.width, door.hitbox.height);\r\n        let counter: number = tiles.length - 1;\r\n        let doorTileIndex: number = GameData.BossDatas.filter((value: BossData) => {\r\n            return ((<LevelId>value.name) == LevelManager.CURR_LEVEL);\r\n        })[0].doorTile;\r\n\r\n        for (let i = 0; i <= counter; i++) {\r\n            this.levelManager.map.replace(-1, doorTileIndex, tiles[i].x, tiles[i].y, 1, 1, this.levelManager.foreground);\r\n        }\r\n    }\r\n\r\n    public hideDoor(door: Door): void {\r\n        let tiles: Phaser.Tile[] = this.levelManager.foreground.getTiles(door.hitbox.x, door.hitbox.y, door.hitbox.width, door.hitbox.height);\r\n        let counter: number = tiles.length - 1;\r\n        let doorTileIndex: number = GameData.BossDatas.filter((value: BossData) => {\r\n            return ((<LevelId>value.name) == LevelManager.CURR_LEVEL);\r\n        })[0].doorTile;\r\n\r\n        for (let i = 0; i <= counter; i++) {\r\n            this.levelManager.map.replace(doorTileIndex, -1, tiles[i].x, tiles[i].y, 1, 1, this.levelManager.foreground);\r\n        }\r\n    }\r\n\r\n    public openDoor(door: Door): void {\r\n        this.game.sound.play(AudioName.boss_gate);\r\n        // Stop shit so the door can open\r\n        this.entityManager.stop = true;\r\n        this.collisionManager.stop = true;\r\n        // Get the door tiles so we can fucking make them invisible.\r\n        let tiles: Phaser.Tile[] = this.levelManager.foreground.getTiles(door.hitbox.x, door.hitbox.y, door.hitbox.width, door.hitbox.height);\r\n        let counter: number = tiles.length - 1;\r\n        this.doorTimer = this.game.time.create(true);\r\n\r\n        console.log('This door index is located at: ' + tiles[0].index);\r\n\r\n        this.doorTimer.loop(80, () => {\r\n            // Invisible? Just replace them with nothing dumbass.\r\n            // Breakdown: Replace tile 6 (the gay ass door tile) with -1 aka nothing at the x & y. (tile 6 is cut_man door)\r\n            let doorTileIndex: number = GameData.BossDatas.filter((value: BossData) => {\r\n                return ((<LevelId>value.name) == LevelManager.CURR_LEVEL);\r\n            })[0].doorTile;\r\n            this.levelManager.map.replace(doorTileIndex, -1, tiles[counter].x, tiles[counter].y, 1, 1, this.levelManager.foreground);\r\n            counter--;\r\n\r\n            if (counter == -1) {\r\n                door.isOpen = true;\r\n                this.doorTimer.stop();\r\n                this.camera.forceCameraGo(door.doorDirection);\r\n            }\r\n        }, this);\r\n\r\n        this.doorTimer.start(0);\r\n    }\r\n\r\n    public closeDoor(door: Door): void {\r\n        this.game.sound.play(AudioName.boss_gate);\r\n        // Get the door tiles so we can fucking make them invisible.\r\n        let tiles: Phaser.Tile[] = this.levelManager.foreground.getTiles(door.hitbox.x, door.hitbox.y, door.hitbox.width, door.hitbox.height);\r\n        let counter: number = 0;\r\n        this.doorTimer = this.game.time.create(true);\r\n\r\n        this.doorTimer.loop(80, () => {\r\n            // Invisible? Just replace them with nothing dumbass.\r\n            // Breakdown: Replace tile 6 (the gay ass door tile) with -1 aka nothing at the x & y.\r\n            let doorTileIndex: number = GameData.BossDatas.filter((value: BossData) => {\r\n                return ((<LevelId>value.name) == LevelManager.CURR_LEVEL);\r\n            })[0].doorTile;\r\n            this.levelManager.map.replace(-1, doorTileIndex, tiles[counter].x, tiles[counter].y, 1, 1, this.levelManager.foreground);\r\n            counter++;\r\n\r\n            if (counter == tiles.length) {\r\n                door.isOpen = false;\r\n                this.doorTimer.stop();\r\n            }\r\n        }, this);\r\n\r\n        this.doorTimer.start(0);\r\n    }\r\n\r\n    public resetDoors(): void {\r\n        for (let i = 0; i < this.doors.length; i++) {\r\n            // Mega Man has opened this door.\r\n            if (this.doors[i].isOpen) {\r\n                // If boss doors are open (Mega Man went in) mark them as closed now.\r\n                if (this.doors[i].firstDoorIntoBossRoom || this.doors[i].secondDoorIntoBossRoom) {\r\n                    this.doors[i].isOpen = false;\r\n                }\r\n            }\r\n\r\n            if (this.doors[i].secondDoorIntoBossRoom) {\r\n                this.hideDoor(this.doors[i]);\r\n            }\r\n            else {\r\n                this.showDoor(this.doors[i]);\r\n            }\r\n        }\r\n    }\r\n\r\n    public pickedUpBossItem(type: EntityType): void {\r\n        console.log('Picked up: ' + type);\r\n\r\n        switch (type) {\r\n            case EntityType.cut_man_boss_item:\r\n                SaveGame.HasDefeatedCutMan = true;\r\n                SaveGame.HasCutManWeapon = true;\r\n                this.entityManager.player.getInventoryManager().unlockWeapon(WeaponType.CutMan);\r\n                break;\r\n\r\n            case EntityType.guts_man_boss_item:\r\n                SaveGame.HasDefeatedGutsMan = true;\r\n                SaveGame.HasGutsManWeapon = true;\r\n                this.entityManager.player.getInventoryManager().unlockWeapon(WeaponType.GutsMan);\r\n                break;\r\n\r\n            case EntityType.ice_man_boss_item:\r\n                SaveGame.HasDefeatedIceMan = true;\r\n                SaveGame.HasIceManWeapon = true;\r\n                this.entityManager.player.getInventoryManager().unlockWeapon(WeaponType.IceMan);\r\n                break;\r\n\r\n            case EntityType.bomb_man_boss_item:\r\n                SaveGame.HasDefeatedBombMan = true;\r\n                SaveGame.HasBombManWeapon = true;\r\n                this.entityManager.player.getInventoryManager().unlockWeapon(WeaponType.BombMan);\r\n                break;\r\n\r\n            case EntityType.fire_man_boss_item:\r\n                SaveGame.HasDefeatedFireMan = true;\r\n                SaveGame.HasFireManWeapon = true;\r\n                this.entityManager.player.getInventoryManager().unlockWeapon(WeaponType.FireMan);\r\n                break;\r\n\r\n            case EntityType.elec_man_boss_item:\r\n                SaveGame.HasDefeatedElecMan = true;\r\n                SaveGame.HasElecManWeapon = true;\r\n                this.entityManager.player.getInventoryManager().unlockWeapon(WeaponType.ElecMan);\r\n                break;\r\n\r\n            default:\r\n                console.error('Boss item error or not implemented yet.')\r\n                break;\r\n        }\r\n\r\n        SaveGame.saveAllData(this.inventoryManager.weaponList);\r\n        this.entityManager.stop = true;\r\n        this.collisionManager.stop = true;\r\n\r\n        if (Debug.EnableMusic) {\r\n            this.game.sound.play(AudioName.music_stage_clear);\r\n        }\r\n\r\n        this.game.time.events.add(6070/*100*/, () => {\r\n            this.canGoBackToStageSelect = true;\r\n        }, this);\r\n    }\r\n\r\n    private createPlayer(): void {\r\n        console.log('Create Player.');\r\n\r\n        let player: Player = this.entityManager.createPlayer(0, 0);\r\n\r\n        player.setInventoryManager(this.inventoryManager);\r\n\r\n        player.destroyed.add(() => {\r\n            this.levelManager.stopStageMusic();\r\n            this.levelManager.stopBossMusic();\r\n            this.disableBoss();\r\n            this.fsm.changeState(WorldState.waiting_for_reset);\r\n        }, this);\r\n\r\n        player.getPosition().x = this.startingSpawnPos.x + 8;\r\n        player.getPosition().y = this.startingSpawnPos.y + 16;\r\n        player.position.x = player.getPosition().x;\r\n        player.position.y = player.getPosition().y;\r\n        // We don't show the player yet. Don't use visible - camera won't move to player if invisible.\r\n        player.alpha = 0;\r\n\r\n        player.healthMeter.activateEnergyState.add(() => {\r\n            this.fsm.changeState(WorldState.giving_energy);\r\n        }, this);\r\n\r\n        player.healthMeter.deactivateEnergyState.add(() => {\r\n            this.fsm.changeState(WorldState.running);\r\n        }, this);\r\n\r\n        player.getAllWeapons().forEach(element => {\r\n            if (element.energyMeter == null) {\r\n                return;\r\n            }\r\n\r\n            element.energyMeter.activateEnergyState.add(() => {\r\n                this.fsm.changeState(WorldState.giving_energy);\r\n            });\r\n\r\n            element.energyMeter.deactivateEnergyState.add(() => {\r\n                this.fsm.changeState(WorldState.running);\r\n            });\r\n        }, this);\r\n\r\n        this.entityManager.addPlayer(player);\r\n    }\r\n\r\n    private createCamera(objects: any): void {\r\n        this.camera = new Camera(this.game, this, objects.camera_bounds);\r\n        this.camera.setTarget(this.entityManager.player);\r\n        this.camera.setCurrentRoom(0);\r\n\r\n        // Shift the player to the new room as the camera is shifting.\r\n        this.camera.cameraStateShifting.add(() => {\r\n            this.entityManager.stop = true;\r\n            this.vanishingBlockManager.pause();\r\n            this.collisionManager.stop = true;\r\n            this.playerStartX = this.entityManager.player.getPosition().x;\r\n            this.playerStartY = this.entityManager.player.getPosition().y;\r\n\r\n            switch (this.camera.goingTo) {\r\n                case GoingTo.Left:\r\n                    this.playerEndX = this.camera.currentRoom.bounds.x - 24;\r\n                    this.playerEndY = this.entityManager.player.getPosition().y;\r\n                    break;\r\n\r\n                case GoingTo.Right:\r\n                    this.playerEndX = this.camera.currentRoom.bounds.x + this.camera.currentRoom.bounds.width + 24;\r\n                    this.playerEndY = this.entityManager.player.getPosition().y;\r\n                    break;\r\n\r\n                case GoingTo.Up:\r\n                    this.playerEndX = this.camera.currentRoom.bounds.x;\r\n                    this.playerEndY = this.camera.currentRoom.bounds.y;\r\n                    break;\r\n\r\n                case GoingTo.Down:\r\n                    this.playerEndX = this.camera.currentRoom.bounds.x;\r\n                    // Mega man bounds checking is based on his center so his real position is passed the bounds Y. We\r\n                    // need an extra buffer compared to the X.\r\n                    this.playerEndY = this.camera.currentRoom.bounds.y + this.camera.currentRoom.bounds.height + 32;\r\n                    break;\r\n\r\n                default:\r\n                    console.error(\"GoingTo went terribly wrong!\")\r\n                    break;\r\n            }\r\n\r\n            // console.log(this.playerStartX, this.playerStartY);\r\n            // console.log(this.playerEndX, this.playerEndY);\r\n\r\n            this.lerpElapsedTime = 0;\r\n            this.startLerp = true;\r\n        }, this);\r\n\r\n        this.camera.camersStateBackToNormal.add(() => {\r\n            this.startLerp = false;\r\n            this.entityManager.stop = false;\r\n            this.entityManager.removeAllEntitiesExceptPlayer();\r\n            this.vanishingBlockManager.reset();\r\n            this.vanishingBlockManager.unpause();\r\n            this.collisionManager.stop = false;\r\n            this.checkCheckpoint();\r\n            this.checkIfBossRoom();\r\n        }, this);\r\n\r\n        // Must remove any listeners first since the game.camera is GLOBAL and may have\r\n        // listeners already attached.\r\n        this.game.camera.onFadeComplete.removeAll();\r\n        this.game.camera.onFlashComplete.removeAll();\r\n\r\n        this.game.camera.onFadeComplete.add(this.fadeComplete, this);\r\n        this.game.camera.onFlashComplete.add(this.flashComplete, this);\r\n    }\r\n\r\n    // Fading out...player died?\r\n    private fadeComplete(): void {\r\n        this.clearLevel();\r\n        this.game.camera.flash(0, 100);\r\n    }\r\n\r\n    // Fading in...time to respawn?\r\n    private flashComplete(): void {\r\n        // Reset camera back to the last checkpoint room.\r\n        this.camera.setCurrentRoom(this.checkPointRoomIndex);\r\n        this.fsm.changeState(WorldState.spawning);\r\n    }\r\n\r\n    private checkIfBossRoom(): void {\r\n        if (!this.camera.currentRoom.isBossRoom) {\r\n            return;\r\n        }\r\n\r\n        this.levelManager.stopStageMusic();\r\n        this.levelManager.playBossIntroMusic();\r\n\r\n        this.entityManager.player.playerInput.preventControl = true;\r\n        this.entityManager.player.stopAllMovement();\r\n\r\n        this.currBoss = this.createBossForThisLevel();\r\n        this.entityManager.addEntity(this.currBoss);\r\n        this.game.add.existing(this.currBoss);\r\n\r\n        this.currBoss.events.onKilled.add(() => {\r\n            this.currBoss.healthMeter.hide();\r\n            this.levelCompleted = true;\r\n            this.levelManager.stopBossMusic();\r\n        }, this);\r\n\r\n        this.game.time.events.add(3250/*100*/, () => {\r\n            this.doors.forEach(element => {\r\n                if (element.secondDoorIntoBossRoom) {\r\n                    this.closeDoor(element);\r\n                }\r\n            }, this);\r\n\r\n            this.game.sound.play(AudioName.boss_gate);\r\n            this.levelManager.playBossLoopMusic();\r\n            this.game.time.events.add(500, () => {\r\n                this.currBoss.visible = true;\r\n                this.currBoss.healthMeter.restoreSpeed = 25;\r\n                this.currBoss.healthMeter.restoreEnergy(28);\r\n                this.currBoss.performTaunt();\r\n                this.currBoss.healthMeter.deactivateEnergyState.add(() => {\r\n                    this.currBoss.healthMeter.restoreSpeed = 75;\r\n                    this.entityManager.player.playerInput.preventControl = false;\r\n                    this.currBoss.disableLogic = false;\r\n                }, this)\r\n            }, this);\r\n        }, this);\r\n    }\r\n\r\n    private createBossForThisLevel(): Boss {\r\n        let spawnPos: Phaser.Point = GameData.BossDatas.filter((value: BossData) => {\r\n            return (<LevelId>value.name) == LevelManager.CURR_LEVEL;\r\n        })[0].spawnPosition;\r\n\r\n        switch (LevelManager.CURR_LEVEL) {\r\n            case LevelId.CUT_MAN:\r\n                return <CutMan>this.entityManager.createEntity(EntityType.cut_man, spawnPos.x * 16, spawnPos.y * 16);\r\n\r\n            case LevelId.GUTS_MAN:\r\n                let gm = <GutsMan>this.entityManager.createEntity(EntityType.guts_man, spawnPos.x * 16, spawnPos.y * 16);\r\n                let shakeElapsedTime: number = 0;\r\n                this.shakeScreenTimer = this.game.time.create(false);\r\n                let shakeFor: number = 550;\r\n\r\n                gm.slamGround.add(\r\n                    (gm: GutsMan) => {\r\n                        this.game.camera.shake(0.02, shakeFor, true, Phaser.Camera.SHAKE_BOTH);\r\n                        this.shakeScreenTimer.repeat(1 / 60, 9999, () => {\r\n                            shakeElapsedTime += this.game.time.elapsedMS;\r\n                            if (shakeElapsedTime >= shakeFor) {\r\n                                shakeElapsedTime = 0;\r\n                                this.shakeScreenTimer.stop();\r\n                                return;\r\n                            }\r\n                            this.entityManager.player.loseControl();\r\n                        });\r\n                        this.shakeScreenTimer.start();\r\n                    }\r\n                )\r\n                return gm;\r\n\r\n            case LevelId.ICE_MAN:\r\n                return <IceMan>this.entityManager.createEntity(EntityType.ice_man, spawnPos.x * 16, spawnPos.y * 16);\r\n\r\n            case LevelId.BOMB_MAN:\r\n            // return <BombMan>this.entityManager.createEntity(EntityType.bomb_man, spawnPos.x * 16, spawnPos.y * 16);\r\n\r\n            case LevelId.FIRE_MAN:\r\n            // return <FireMan>this.entityManager.createEntity(EntityType.fire_man, spawnPos.x * 16, spawnPos.y * 16);\r\n\r\n            case LevelId.ELEC_MAN:\r\n            // return <ElecMan>this.entityManager.createEntity(EntityType.elec_man, spawnPos.x * 16, spawnPos.y * 16);\r\n\r\n            default:\r\n                console.error('Cannot create boss for this level.')\r\n                break;\r\n        }\r\n    }\r\n\r\n    private disableBoss(): void {\r\n        if (this.currBoss == null || this.currBoss == undefined) {\r\n            return;\r\n        }\r\n\r\n        this.currBoss.disableLogic = true;\r\n    }\r\n\r\n    /**\r\n     * Checks to see if the player entered a room that is a checkpoint. If so, it saves that room index and array index locaiton.\r\n     * This only saves the furthest checkpoint.\r\n     */\r\n    private checkCheckpoint(): void {\r\n        console.log('num checkpoints: ' + this.levelCheckpoints[0].checkpointsRoomIndex.length)\r\n\r\n        for (let i = 0; i < this.levelCheckpoints[0].checkpointsRoomIndex.length; i++) {\r\n            console.log('checkpointsRoomIndex: ' + this.levelCheckpoints[0].checkpointsRoomIndex[i])\r\n\r\n            if (this.camera.currentRoom.index == this.levelCheckpoints[0].checkpointsRoomIndex[i]) {\r\n                this.levelCheckpoints[0].active[i] = true;\r\n                this.checkPointRoomIndex = this.camera.currentRoom.index;\r\n                this.checkpointArrayIndex = i;\r\n                console.log('curr checkpoint room index: ' + this.checkPointRoomIndex)\r\n                break;\r\n            }\r\n        }\r\n    }\r\n\r\n    public clearLevel(): void {\r\n        this.camera.setTarget(null);\r\n\r\n        this.spawners.forEach((element: Spawner) => {\r\n            element.isSpawnerOnScreen = false;\r\n\r\n            for (let j = element.entities.length - 1; j >= 0; j--) {\r\n                element.entities.splice(j, 1);\r\n            }\r\n        },\r\n            this);\r\n\r\n        this.entityManager.removeAllEntitiesExceptPlayer();\r\n        this.entityManager.player.removeDeathEffect();\r\n    }\r\n\r\n    public spawnPlayer(): void {\r\n        console.log(\"Spawning player from initial Tiled position.\");\r\n        this.entityManager.player.getPosition().x = this.startingSpawnPos.x + 8;\r\n        this.entityManager.player.getPosition().y = this.startingSpawnPos.y + 16;\r\n        this.entityManager.player.position.x = this.entityManager.player.getPosition().x;\r\n        this.entityManager.player.position.y = this.entityManager.player.getPosition().y;\r\n        this.entityManager.player.alpha = 1;\r\n        this.entityManager.player.setDefaults();\r\n    }\r\n\r\n    public spawnPlayerAtLastCheckpoint(): void {\r\n        console.log(\"Spawning player at last checkpoint.\");\r\n        // Set the player spawn pos to the last checkpoint location.\r\n        this.entityManager.player.getPosition().x = this.getCheckpointSpawnPosition().x + 8;\r\n        this.entityManager.player.getPosition().y = this.getCheckpointSpawnPosition().y + 16;\r\n        // Immediately set the position otherwise we see mega man at his last position.\r\n        this.entityManager.player.x = this.entityManager.player.getPosition().x;\r\n        this.entityManager.player.y = this.entityManager.player.getPosition().y;\r\n        this.entityManager.player.revive();\r\n        this.entityManager.player.setDefaults();\r\n    }\r\n\r\n    public getCheckpointSpawnPosition(): Phaser.Point {\r\n        let x: number = this.levelCheckpoints[0].spawnPos[this.checkpointArrayIndex].x * 16;\r\n        let y: number = this.levelCheckpoints[0].spawnPos[this.checkpointArrayIndex].y * 16;\r\n        return new Phaser.Point(x, y);\r\n    }\r\n\r\n    /**\r\n     * Creates a dust particle at a location.\r\n     * @param x The x position to create the dust particle.\r\n     * @param y The y position to create the dust particle.\r\n     */\r\n    public createDust(x: number, y: number): void {\r\n        let dust: Phaser.Sprite = this.dustPool.getFirstDead(true);\r\n        dust.revive();\r\n        dust.x = x;\r\n        dust.y = y;\r\n        dust.animations.play('slide_dust');\r\n    }\r\n\r\n    /**\r\n     * Creates a hurt dust particle at a location.\r\n     * @param x The x position to create the hurt dust particle.\r\n     * @param y The y position to create the hurt dust particle.\r\n     */\r\n    public createHurtDust(x: number, y: number): void {\r\n        let hurtDust: Phaser.Sprite = this.hurtDustPool.getFirstDead(true);\r\n        hurtDust.revive();\r\n        hurtDust.x = x;\r\n        hurtDust.y = y;\r\n        hurtDust.animations.play('hurt_dust');\r\n    }\r\n\r\n    /**\r\n     * Creates a mega man death effect particle at a location.\r\n     * @param x The x position to create the man death effect particle.\r\n     * @param y The y position to create the man death effect particle.\r\n     */\r\n    public createMegaManDeathEffect(x: number, y: number): Phaser.Sprite {\r\n        var deathEffect: Phaser.Sprite = this.megaManDeathEffectPool.getFirstDead();\r\n        deathEffect.revive();\r\n        deathEffect.position.x = x;\r\n        deathEffect.position.y = y;\r\n        deathEffect.animations.play('mega_man_death_effect');\r\n        return deathEffect;\r\n    }\r\n\r\n    /**\r\n     * Creates an explosion effect particle at a location.\r\n     * @param x The x position to create the explosion effect particle.\r\n     * @param y The y position to create the explosion effect particle.\r\n     */\r\n    public createExplosionEffect(x: number, y: number): Phaser.Sprite {\r\n        var explosionEffect: Phaser.Sprite = this.explosionEffectPool.getFirstDead();\r\n        explosionEffect.revive();\r\n        explosionEffect.position.x = x;\r\n        explosionEffect.position.y = y;\r\n        explosionEffect.animations.play(Konstants.explosion);\r\n        return explosionEffect;\r\n    }\r\n\r\n    /**\r\n     * Turns the sprite background on/off.\r\n     */\r\n    public toggleTiles(): void {\r\n        this.showSpikeTiles = !this.showSpikeTiles;\r\n        this.showBackgroundTiles = !this.showBackgroundTiles;\r\n        this.showForegroundTiles = !this.showForegroundTiles;\r\n\r\n        this.levelManager.spikes.visible = this.showSpikeTiles;\r\n        this.levelManager.background.visible = this.showBackgroundTiles;\r\n        this.levelManager.foreground.visible = this.showForegroundTiles;\r\n    }\r\n\r\n    public toggleShowDebug(): void {\r\n        this.showDebug = !this.showDebug;\r\n        this.graphicsDebug.clear();\r\n    }\r\n\r\n    /**\r\n     * Standard pause is when the user presses s. It doesn't bring up the menu.\r\n     */\r\n    public executeStandardPauseEvent(): void {\r\n        if (this.levelCompleted) {\r\n            return;\r\n        }\r\n\r\n        if (!this.isPaused) {\r\n            this.game.sound.play(AudioName.pause_menu);\r\n        }\r\n\r\n        this.isPaused = !this.isPaused;\r\n        this.isStandardPaused = !this.isStandardPaused;\r\n\r\n        if (!this.isPaused) {\r\n            if (this.entityManager.player.isOnGround) {\r\n                this.entityManager.player.stopAllMovement();\r\n            }\r\n\r\n            this.entityManager.player.isWarpingIn = true;\r\n            let warpTimer: Phaser.Timer = this.game.time.create(true);\r\n\r\n            warpTimer.add(this.pausedWarpSpeed, () => {\r\n                this.game.sound.play(AudioName.megaman_warp);\r\n                this.entityManager.player.isWarpingIn = false;\r\n\r\n                this.entityManager.entities.forEach(element => {\r\n                    element.togglePause();\r\n                });\r\n            }, this);\r\n\r\n            warpTimer.start();\r\n        }\r\n        else {\r\n            this.entityManager.entities.forEach(element => {\r\n                element.togglePause();\r\n            });\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Shows/hides the menu. Even during standard pause.\r\n     */\r\n    public executeMenuPauseEvent(): void {\r\n        if (this.levelCompleted) {\r\n            return;\r\n        }\r\n\r\n        if (this.isStandardPaused) {\r\n            this.pauseWithMenu();\r\n        }\r\n        else {\r\n            this.isPaused == true ? this.unpauseWithMenu() : this.pauseWithMenu();\r\n        }\r\n    }\r\n\r\n    public playStageMusic(): void {\r\n        this.levelManager.playStageMusic();\r\n    }\r\n\r\n    private pauseWithMenu(): void {\r\n        this.isPaused = true;\r\n        this.isStandardPaused = false; // no longer in standard pause; important\r\n        this.entityManager.player.toggleMeter();\r\n\r\n        this.entityManager.entities.forEach(element => {\r\n            element.togglePause();\r\n            element.toggleVisibility();\r\n        });\r\n\r\n        this.inventoryManager.toggleInventory();\r\n    }\r\n\r\n    private unpauseWithMenu(): void {\r\n        this.inventoryManager.inventoryMenuFullyClosed.addOnce(() => {\r\n            this.waitForUnpauseEffect();\r\n        }, this);\r\n\r\n        this.inventoryManager.toggleInventory();\r\n    }\r\n\r\n    /**\r\n     * Game doesn't actually unpause until mega man's warp-in animation is complete.\r\n     * Fucking dumb animations don't work while paused or some retarded shit.\r\n     * I disable pause on animations and it still doesn't work. wtf you fucking faggots.\r\n     * *UPDATE*\r\n     * I'm the biggest retard. Animations were working but I fucking enabled visiblity after...\r\n     * so I couldn't see the animation. Retard fuck.\r\n     */\r\n    private waitForUnpauseEffect(): void {\r\n        this.entityManager.player.isWarpingIn = true;\r\n        this.isPaused = false;\r\n\r\n        // Mega man looks retarded if we stop him in air.\r\n        if (this.entityManager.player.isOnGround) {\r\n            this.entityManager.player.stopAllMovement();\r\n        }\r\n\r\n        this.entityManager.entities.forEach(element => {\r\n            element.togglePause();\r\n            element.toggleVisibility();\r\n        });\r\n\r\n        let warpTimer: Phaser.Timer = this.game.time.create(true);\r\n\r\n        warpTimer.add(this.pausedWarpSpeed, () => {\r\n            this.game.sound.play(AudioName.megaman_warp);\r\n            this.entityManager.player.isWarpingIn = false;\r\n            this.entityManager.player.toggleMeter();\r\n\r\n            this.entityManager.entities.forEach(element => {\r\n                element.togglePause();\r\n            });\r\n        }, this);\r\n\r\n        warpTimer.start();\r\n    }\r\n\r\n    private createEntityFromSpawner(spawner: Spawner): void {\r\n        let xPos: number = spawner.x;\r\n        let yPos: number = spawner.y;\r\n\r\n        if (spawner.respawnLocation == RespawnLocation.RightSideOfScreen) {\r\n            xPos = this.game.camera.x + this.game.camera.width;\r\n        }\r\n\r\n        if (spawner.respawnLocation == RespawnLocation.LeftSideOfScreen) {\r\n            xPos = this.game.camera.x;\r\n        }\r\n\r\n        let entity: any = this.entityManager.createEntity(spawner.entityType, xPos, yPos, spawner.properties);\r\n        this.game.add.existing(entity);\r\n        this.entityManager.addEntity(entity);\r\n    }\r\n\r\n    /**\r\n     * Dust is a simple sprite with a simple animations. It's not needed as an entity so we'll just use it in a Group (pool)\r\n     * and revive it when needed.\r\n     */\r\n    private createDustPool(): void {\r\n        this.dustPool = this.game.add.group();\r\n        this.dustPool.createMultiple(10, Konstants.mega_man, 'slide_dust_01.png', false);\r\n\r\n        this.dustPool.forEachDead((element: Phaser.Sprite) => {\r\n            element.animations.add('slide_dust', Phaser.Animation.generateFrameNames('slide_dust_', 1, 3, '.png', 2), 7, false, false);\r\n            element.animations.getAnimation('slide_dust').killOnComplete = true;\r\n        }, this);\r\n    }\r\n\r\n    private createHurtDustPool(): void {\r\n        this.hurtDustPool = this.game.add.group();\r\n        this.hurtDustPool.createMultiple(10, Konstants.mega_man, 'hurt_dust_01.png', false);\r\n\r\n        this.hurtDustPool.forEachDead((element: Phaser.Sprite) => {\r\n            element.animations.add('hurt_dust', Phaser.Animation.generateFrameNames('hurt_dust_', 1, 3, '.png', 2), 7, false, false);\r\n            element.animations.getAnimation('hurt_dust').killOnComplete = true;\r\n        }, this);\r\n    }\r\n\r\n    private createMegaManDeathEffectPool(): void {\r\n        this.megaManDeathEffectPool = this.game.add.group();\r\n        this.megaManDeathEffectPool.createMultiple(20, Konstants.mega_man, 'mega_man_death_effect_01.png', false);\r\n\r\n        this.game.physics.arcade.enable(this.megaManDeathEffectPool);\r\n        this.megaManDeathEffectPool.forEachDead((element: Phaser.Sprite) => {\r\n            element.animations.add('mega_man_death_effect', Phaser.Animation.generateFrameNames('mega_man_death_effect_', 1, 4, '.png', 2), 7, true, false);\r\n            element.anchor.setTo(0.5, 0.5);\r\n        }, this);\r\n    }\r\n\r\n    private createExplosionPool(): void {\r\n        this.explosionEffectPool = this.game.add.group();\r\n        this.explosionEffectPool.createMultiple(20, Konstants.explosion, 'explosion_01', false);\r\n\r\n        this.explosionEffectPool.forEachDead((element: Phaser.Sprite) => {\r\n            element.animations.add(Konstants.explosion, ['explosion_01', 'explosion_04', 'explosion_03', 'explosion_02'], 10, false, false);\r\n            element.anchor.setTo(0.5, 0.5);\r\n            element.animations.getAnimation(Konstants.explosion).killOnComplete = true;\r\n        }, this);\r\n    }\r\n\r\n    private createFiniteStateMachine(): void {\r\n        this.fsm = new StateMachine();\r\n        this.fsm.addState(WorldState.spawning, new WorldSpawningState(this));\r\n        this.fsm.addState(WorldState.running, new WorldRunningState(this));\r\n        this.fsm.addState(WorldState.giving_energy, new WorldGivingEnergyState(this));\r\n        this.fsm.addState(WorldState.waiting_for_reset, new WorldWaitingForResetState(this));\r\n        this.fsm.addState(WorldState.waiting, new WorldWaitingState(this));\r\n        this.fsm.changeState(WorldState.spawning);\r\n    }\r\n\r\n    private checkPlayerNeedsLerp(): void {\r\n        if (this.startLerp) {\r\n            this.lerpElapsedTime += this.game.time.elapsedMS;\r\n\r\n            switch (this.camera.goingTo) {\r\n                case GoingTo.Left:\r\n                    this.entityManager.player.getPosition().x = MathUtil.lerp(this.playerStartX, this.playerEndX, this.lerpElapsedTime / this.lerpEndTime);\r\n                    this.entityManager.player.position.x = this.entityManager.player.getPosition().x;\r\n                    break;\r\n\r\n                case GoingTo.Right:\r\n                    this.entityManager.player.getPosition().x = MathUtil.lerp(this.playerStartX, this.playerEndX, this.lerpElapsedTime / this.lerpEndTime);\r\n                    this.entityManager.player.position.x = this.entityManager.player.getPosition().x;\r\n                    break;\r\n\r\n                case GoingTo.Up:\r\n                    this.entityManager.player.getPosition().y = MathUtil.lerp(this.playerStartY, this.playerEndY, this.lerpElapsedTime / this.lerpEndTime);\r\n                    this.entityManager.player.position.y = this.entityManager.player.getPosition().y;\r\n                    break;\r\n\r\n                case GoingTo.Down:\r\n                    this.entityManager.player.getPosition().y = MathUtil.lerp(this.playerStartY, this.playerEndY, this.lerpElapsedTime / this.lerpEndTime);\r\n                    this.entityManager.player.position.y = this.entityManager.player.getPosition().y;\r\n                    break;\r\n\r\n                default:\r\n                    console.error(\"GoingTo went terribly wrong!\")\r\n                    break;\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nclass WorldSpawningState implements State {\r\n\r\n    name: string = WorldState.spawning;\r\n    initialized: boolean;\r\n    actor: World;\r\n    private elapsedTime: number = 0;\r\n    private endTime: number = 1000;\r\n    private readyBitmapText: Phaser.BitmapText;\r\n    private spawnEffect: Phaser.Sprite;\r\n    private warpInEffect: Phaser.Sprite;\r\n    private startX: number = 0;\r\n    private startY: number = 0;\r\n    private endX: number = 0;\r\n    private endY: number = 0;\r\n    private showingSpawnEffect: boolean = false;\r\n    private warpDownElapsedTime: number = 0;\r\n    private warpDownEndTime: number = 200;\r\n    private showingWarpInEffect: boolean = false;\r\n    private spawnPos: Phaser.Point = new Phaser.Point();\r\n\r\n    constructor(actor: World) {\r\n        this.actor = actor;\r\n\r\n        this.readyBitmapText = this.actor.game.make.bitmapText(0, 0, 'myfont', 'READY', 8);\r\n        this.actor.game.add.existing(this.readyBitmapText);\r\n\r\n        this.spawnEffect = this.actor.game.add.sprite(0, 0, Konstants.mega_man, 'spawn_effect.png');\r\n        this.actor.game.add.existing(this.spawnEffect);\r\n        this.spawnEffect.kill();\r\n\r\n        this.warpInEffect = this.actor.game.add.sprite(0, 0, Konstants.mega_man, 'warp_in_effect_01.png');\r\n        this.warpInEffect.animations.add(Konstants.warp_in_effect, ['warp_in_effect_01.png', 'warp_in_effect_02.png', 'warp_in_effect_01.png'], 13, false, false);\r\n        this.warpInEffect.anchor.setTo(0.5);\r\n\r\n        this.actor.game.add.existing(this.warpInEffect);\r\n        this.warpInEffect.kill();\r\n    }\r\n\r\n    enter(): void {\r\n        console.log(\"ENTER: \" + this.name);\r\n        this.initialized = true;\r\n        this.populateSpawnPosition();\r\n        this.readyBitmapText.x = this.actor.camera.currentRoom.bounds.x + 128;\r\n        this.readyBitmapText.y = this.actor.camera.currentRoom.bounds.y + 100;\r\n        this.startY = 0;\r\n        this.endY = this.spawnPos.y - 8;\r\n        this.readyBitmapText.visible = true;\r\n        this.actor.playStageMusic();\r\n        this.actor.resetDoors();\r\n    }\r\n\r\n    update(): void {\r\n        this.elapsedTime += this.actor.game.time.elapsedMS;\r\n\r\n        if (this.elapsedTime >= this.endTime && !this.showingSpawnEffect && !this.showingWarpInEffect) {\r\n            this.spawnEffect.position.x = this.spawnPos.x;\r\n            this.spawnEffect.revive();\r\n            this.showingSpawnEffect = true;\r\n            this.readyBitmapText.visible = false;\r\n            this.elapsedTime = 0;\r\n            return;\r\n        }\r\n\r\n        if (this.showingSpawnEffect && !this.showingWarpInEffect) {\r\n            this.warpDownElapsedTime += this.actor.game.time.elapsedMS;\r\n            this.spawnEffect.position.y = MathUtil.lerp(this.startY, this.endY, this.warpDownElapsedTime / this.warpDownEndTime);\r\n\r\n            if (this.warpDownElapsedTime >= this.warpDownEndTime) {\r\n                this.warpDownElapsedTime = 0;\r\n                this.spawnEffect.kill();\r\n                this.warpInEffect.revive();\r\n                this.warpInEffect.play(Konstants.warp_in_effect);\r\n                this.warpInEffect.position.x = this.spawnPos.x + 8;\r\n                this.warpInEffect.position.y = this.spawnPos.y;\r\n                this.showingSpawnEffect = false;\r\n                this.showingWarpInEffect = true;\r\n            }\r\n        }\r\n\r\n        if (this.showingWarpInEffect) {\r\n            if (this.warpInEffect.animations.currentAnim.isFinished) {\r\n                this.actor.game.sound.play(AudioName.megaman_warp);\r\n                this.showingSpawnEffect = false;\r\n                this.showingWarpInEffect = false;\r\n                this.warpInEffect.kill();\r\n\r\n                if (this.actor.initialSpawn) {\r\n                    this.actor.spawnPlayer();\r\n                    this.actor.initialSpawn = false;\r\n                }\r\n                else {\r\n                    this.actor.spawnPlayerAtLastCheckpoint();\r\n                    this.actor.camera.setTarget(this.actor.entityManager.player);\r\n                }\r\n\r\n                this.actor.fsm.changeState(WorldState.running);\r\n                return;\r\n            }\r\n        }\r\n    }\r\n\r\n    exit(): void {\r\n        console.log(\"EXIT: \" + this.name);\r\n        this.initialized = false;\r\n        this.elapsedTime = 0;\r\n        this.showingSpawnEffect = false;\r\n        this.showingWarpInEffect = false;\r\n        this.warpInEffect.kill();\r\n        this.warpInEffect.animations.stop();\r\n        this.warpDownElapsedTime = 0;\r\n        this.spawnEffect.kill();\r\n    }\r\n\r\n    private populateSpawnPosition(): void {\r\n        if (this.actor.initialSpawn) {\r\n            this.spawnPos.x = this.actor.startingSpawnPos.x;\r\n            this.spawnPos.y = this.actor.startingSpawnPos.y;\r\n        }\r\n        else {\r\n            this.spawnPos.x = this.actor.getCheckpointSpawnPosition().x;\r\n            this.spawnPos.y = this.actor.getCheckpointSpawnPosition().y;\r\n        }\r\n    }\r\n}\r\n\r\nclass WorldRunningState implements State {\r\n\r\n    name: string = WorldState.running;\r\n    initialized: boolean;\r\n    actor: World;\r\n\r\n    constructor(actor: World) {\r\n        this.actor = actor;\r\n    }\r\n\r\n    enter(): void {\r\n        console.log(\"ENTER: \" + this.name);\r\n        this.initialized = true;\r\n    }\r\n\r\n    update(): void {\r\n        if (this.actor.sKey.justDown) {\r\n            this.actor.executeStandardPauseEvent();\r\n        }\r\n\r\n        if (this.actor.eKey.justDown) {\r\n            this.actor.executeMenuPauseEvent();\r\n        }\r\n\r\n        if (this.actor.upKey.justDown) {\r\n            if (this.actor.inventoryManager.isOpen) this.actor.inventoryManager.cycleInventoryUp();\r\n        }\r\n\r\n        if (this.actor.downKey.justDown) {\r\n            if (this.actor.inventoryManager.isOpen) this.actor.inventoryManager.cycleInventoryDown();\r\n        }\r\n\r\n        if (this.actor.isPaused) {\r\n            return;\r\n        }\r\n\r\n        this.actor.entityManager.update();\r\n        this.actor.vanishingBlockManager.update();\r\n        this.actor.collisionManager.update();\r\n        this.actor.entityManager.clean();\r\n        this.actor.camera.update();\r\n        this.actor.debugDrawManager.update();\r\n    }\r\n\r\n    exit(): void {\r\n        console.log(\"EXIT: \" + this.name);\r\n        this.initialized = false;\r\n    }\r\n}\r\n\r\nclass WorldGivingEnergyState implements State {\r\n\r\n    name: string = WorldState.giving_energy;\r\n    initialized: boolean;\r\n    actor: World;\r\n\r\n    constructor(actor: World) {\r\n        this.actor = actor;\r\n    }\r\n\r\n    enter(): void {\r\n        console.log('ENTER: ' + this.name)\r\n        this.initialized = true;\r\n    }\r\n\r\n    update(): void {\r\n    }\r\n\r\n    exit(): void {\r\n        console.log(\"EXIT: \" + this.name);\r\n        this.initialized = false;\r\n    }\r\n}\r\n\r\nclass WorldWaitingForResetState implements State {\r\n\r\n    name: string = WorldState.waiting_for_reset;\r\n    initialized: boolean;\r\n    actor: World;\r\n    elapsedTime: number = 0;\r\n    endTime: number = 3000;\r\n\r\n    constructor(actor: World) {\r\n        this.actor = actor;\r\n    }\r\n\r\n    enter(): void {\r\n        this.initialized = true;\r\n        console.log('ENTER: ' + this.name)\r\n    }\r\n\r\n    update(): void {\r\n        this.actor.entityManager.update();\r\n        this.actor.debugDrawManager.update();\r\n        this.actor.collisionManager.update();\r\n\r\n        this.elapsedTime += this.actor.game.time.elapsedMS;\r\n\r\n        if (this.elapsedTime >= this.endTime) {\r\n            this.actor.fsm.changeState(WorldState.waiting);\r\n        }\r\n    }\r\n\r\n    exit(): void {\r\n        console.log(\"EXIT: \" + this.name);\r\n        this.initialized = false;\r\n        this.elapsedTime = 0;\r\n    }\r\n}\r\n\r\nclass WorldWaitingState implements State {\r\n\r\n    name: string = WorldState.waiting;\r\n    initialized: boolean;\r\n    actor: World;\r\n\r\n    constructor(actor: World) {\r\n        this.actor = actor;\r\n    }\r\n\r\n    enter(): void {\r\n        this.initialized = true;\r\n        console.log('ENTER: ' + this.name)\r\n        this.actor.game.camera.fade(0, 100, true);\r\n    }\r\n\r\n    update(): void {\r\n        this.actor.entityManager.update();\r\n        this.actor.debugDrawManager.update();\r\n    }\r\n\r\n    exit(): void {\r\n        console.log(\"EXIT: \" + this.name);\r\n        this.initialized = false;\r\n    }\r\n}","import { World, Surface } from '../world'\r\nimport { Player } from '../player'\r\nimport { PlayerInput } from '../playerInput'\r\nimport { PlayerGraphics } from '../playerGraphics'\r\nimport { Entity } from '../entity'\r\nimport { EntityType, TagType, Konstants, SpriteSheets } from '../konstants'\r\nimport { Blader } from '../enemies/blader'\r\nimport { Met } from '../enemies/met'\r\nimport { Beak } from '../enemies/beak'\r\nimport { SniperJoe } from '../enemies/sniperJoe'\r\nimport { Bombomb } from '../enemies/bombomb'\r\nimport { BombombShrapnel } from '../enemies/bombomb_shrapnel'\r\nimport { Spine } from '../enemies/spine'\r\nimport { OctopusBattery } from '../enemies/octopusBattery'\r\nimport { KillerBullet } from '../enemies/killerBullet'\r\nimport { Explosion } from '../enemies/explosion'\r\nimport { ScrewBomber } from '../enemies/screw_bomber'\r\nimport { SuperCutter } from '../enemies/super_cutter'\r\nimport { Watcher } from '../enemies/watcher'\r\nimport { Peng } from '../enemies/peng'\r\nimport { BigEye } from '../enemies/big_eye'\r\nimport { Flea } from '../enemies/flea'\r\nimport { FlyingShell } from '../enemies/flying_shell'\r\nimport { Spike } from '../spike'\r\nimport { CutMan } from '../enemies/bosses/cut_man'\r\nimport { GutsMan } from '../enemies/bosses/guts_man'\r\nimport { IceMan } from '../enemies/bosses/ice_man'\r\nimport { PowerUp } from '../powerups/powerup'\r\nimport { VanishingBlock } from '../platforms/vanishingBlock'\r\nimport { Bullet } from '../bullets/bullet'\r\nimport { Pick } from '../bullets/pick'\r\nimport { PickBulletMovement } from '../bullets/pickBulletMovement'\r\nimport { Debug } from '../debug'\r\nimport { GameData, BossData } from '../gameData'\r\nimport { LevelId } from '../managers/levelManager'\r\nimport { ThrowableObject } from '../bullets/throwableObject'\r\nimport { DropLift } from '../platforms/drop_lift'\r\nimport { PicketMan } from '../enemies/picket_man'\r\nimport { CrazyRazy } from '../enemies/crazy_razy'\r\nimport { CrazyRazyFly } from '../enemies/crazy_razy_fly'\r\nimport { FootHolder } from '../enemies/foot_holder'\r\n\r\nexport class EntityManager {\r\n\r\n    public player: Player;\r\n    public entities: Array<Entity> = new Array<Entity>();\r\n    public surfaces: Array<Surface> = new Array<Surface>();\r\n    public ladders: Array<Phaser.Rectangle> = new Array<Phaser.Rectangle>();\r\n    public stop: boolean = false;\r\n    private g: Phaser.Graphics;\r\n    private allowDrawHitboxes: boolean;\r\n    private tempEntity: Entity = null;\r\n    private tempRect: Phaser.Rectangle = new Phaser.Rectangle(0, 0, 0, 0);\r\n\r\n    constructor(private game: Phaser.Game, private world: World) {\r\n        this.game = game;\r\n        this.world = world;\r\n        this.g = this.game.add.graphics();\r\n        this.game.add.existing(this.g);\r\n        this.allowDrawHitboxes = Debug.AllowDrawHitboxes;\r\n    }\r\n\r\n    public update(): void {\r\n        if (this.stop) {\r\n            return;\r\n        }\r\n\r\n        this.entities.forEach((entity) => {\r\n            if (entity.alive) {\r\n                entity.manualUpdate();\r\n            }\r\n        });\r\n    }\r\n\r\n    private drawHitboxes(entity: Entity): void {\r\n        if (!this.allowDrawHitboxes) {\r\n            return;\r\n        }\r\n\r\n        this.g.clear();\r\n\r\n        if (entity.myEntityType == EntityType.player) {\r\n            this.g.lineStyle(1);\r\n            this.g.beginFill(0x00ff00, 0.5);\r\n            this.g.drawRect((<Player>entity).hitbox.x, (<Player>entity).hitbox.y, (<Player>entity).hitbox.width, (<Player>entity).hitbox.height);\r\n        }\r\n    }\r\n\r\n    public clean(): void {\r\n        for (let i = 0; i < this.entities.length; i++) {\r\n            if (this.entities[i].tag == TagType.player) {\r\n                continue;\r\n            }\r\n\r\n            if (!this.entities[i].alive) {\r\n                this.entities.splice(i, 1);\r\n            }\r\n        }\r\n    }\r\n\r\n    public addPlayer(player: Player): void {\r\n        if (this.player != null) {\r\n            return;\r\n        }\r\n\r\n        this.player = player;\r\n        this.addEntity(player);\r\n    }\r\n\r\n    public createPlayer(x: number, y: number): Player {\r\n        let playerInput = new PlayerInput(this.game);\r\n        let playerGraphics = new PlayerGraphics(this.game);\r\n        return new Player(playerInput, playerGraphics, this.world, TagType.player, EntityType.player, this.game, x, y, Konstants.mega_man, '');\r\n    }\r\n\r\n    public createEntity(entityType: EntityType, x: number, y: number, properties: any = null): Entity {\r\n        console.log(\"Create: \" + entityType);\r\n\r\n        switch (entityType) {\r\n            case EntityType.cut_man:\r\n                let cm: CutMan = new CutMan(this.world, TagType.enemy, entityType, this.game, x, y, entityType, 'throw_01');\r\n                cm.contactDamage = 4000;\r\n                cm.bossData = GameData.BossDatas.filter((value: BossData) => {\r\n                    return (<LevelId>value.name) == LevelId.CUT_MAN;\r\n                })[0];\r\n\r\n                return cm;\r\n\r\n            case EntityType.guts_man:\r\n                let gm: GutsMan = new GutsMan(this.world, TagType.enemy, entityType, this.game, x, y, entityType, '');\r\n                gm.contactDamage = 4000;\r\n                gm.bossData = GameData.BossDatas.filter((value: BossData) => {\r\n                    return (<LevelId>value.name) == LevelId.GUTS_MAN;\r\n                })[0];\r\n\r\n                return gm;\r\n\r\n            case EntityType.ice_man:\r\n                let im: IceMan = new IceMan(this.world, TagType.enemy, entityType, this.game, x, y, entityType, '');\r\n                im.contactDamage = 4000;\r\n                im.bossData = GameData.BossDatas.filter((value: BossData) => {\r\n                    return (<LevelId>value.name) == LevelId.ICE_MAN;\r\n                })[0];\r\n                return im;\r\n\r\n            case EntityType.bomb_man:\r\n                break;\r\n\r\n            case EntityType.fire_man:\r\n                break;\r\n\r\n            case EntityType.elec_man:\r\n                break;\r\n\r\n            case EntityType.met:\r\n                let met: Met = new Met(this.world, TagType.enemy, entityType, this.game, x, y, entityType, '');\r\n                met.contactDamage = 1;\r\n                return met;\r\n\r\n            case EntityType.blader:\r\n                let b: Blader = new Blader(this.world, TagType.enemy, entityType, this.game, x, y, entityType, '');\r\n                b.contactDamage = 1000;\r\n                return b;\r\n\r\n            case EntityType.beak:\r\n                let beak: Beak = new Beak(this.world, TagType.enemy, entityType, this.game, x, y, entityType, '');\r\n                beak.contactDamage = 1;\r\n                beak.setDirectionFromRotation(properties.rotation);\r\n                return beak;\r\n\r\n            case EntityType.sniper_joe:\r\n                let sj: SniperJoe = new SniperJoe(this.world, TagType.enemy, entityType, this.game, x, y, entityType, '');\r\n                sj.contactDamage = 1;\r\n                return sj;\r\n\r\n            case EntityType.bombomb:\r\n                let bombomb: Bombomb = new Bombomb(this.world, TagType.enemy, entityType, this.game, x, y, entityType, '');\r\n                bombomb.contactDamage = 1;\r\n                return bombomb;\r\n\r\n            case EntityType.bombomb_shrapnel:\r\n                let shrap: BombombShrapnel = new BombombShrapnel(this.world, TagType.enemy, entityType, this.game, x, y, EntityType.bombomb, ''); // we pass bombomb_blue explicity because thats the spritesheet atlas\r\n                shrap.contactDamage = 1;\r\n                return shrap;\r\n\r\n            case EntityType.spine:\r\n                let spine: Spine = new Spine(this.world, TagType.enemy, entityType, this.game, x, y, entityType, '');\r\n                spine.contactDamage = 1;\r\n                return spine;\r\n\r\n            case EntityType.octopus_battery:\r\n                let ob: OctopusBattery = new OctopusBattery(this.world, TagType.enemy, entityType, this.game, x, y, entityType, '');\r\n                ob.contactDamage = 1;\r\n                ob.speed = properties.speed;\r\n                ob.horizontal = properties.horizontal;\r\n                ob.vertical = properties.vertical;\r\n                return ob;\r\n\r\n            case EntityType.spike:\r\n                let spike: Spike = new Spike(this.world, TagType.enemy, entityType, this.game, x, y, entityType, '');\r\n                spike.contactDamage = 9999;\r\n                return spike;\r\n\r\n            case EntityType.killer_bullet:\r\n                let kb: KillerBullet = new KillerBullet(this.world, TagType.enemy, entityType, this.game, x, y, entityType, '');\r\n                kb.contactDamage = 1;\r\n                return kb;\r\n\r\n            case EntityType.explosion_from_killer_bullet:\r\n                let explosion: Explosion = new Explosion(this.world, TagType.enemy, entityType, this.game, x, y, entityType, '');\r\n                explosion.contactDamage = 4;\r\n                return explosion;\r\n\r\n            case EntityType.screw_bomber:\r\n                let sb: ScrewBomber = new ScrewBomber(this.world, TagType.enemy, entityType, this.game, x, y, entityType, '');\r\n                sb.contactDamage = 2;\r\n                sb.setMountByRotation(properties.rotation);\r\n                return sb;\r\n\r\n            case EntityType.super_cutter:\r\n                let sc: SuperCutter = new SuperCutter(this.world, TagType.enemy, entityType, this.game, x, y, entityType, '');\r\n                sc.contactDamage = 4;\r\n                return sc;\r\n\r\n            case EntityType.big_eye:\r\n                let be: BigEye = new BigEye(this.world, TagType.enemy, entityType, this.game, x, y, entityType, '');\r\n                be.contactDamage = 4;\r\n                return be;\r\n\r\n            case EntityType.flea:\r\n                let flea: Flea = new Flea(this.world, TagType.enemy, entityType, this.game, x, y, entityType, '');\r\n                flea.contactDamage = 4;\r\n                return flea;\r\n\r\n            case EntityType.flying_shell:\r\n                let fs: FlyingShell = new FlyingShell(this.world, TagType.enemy, entityType, this.game, x, y, entityType, '');\r\n                fs.contactDamage = 4;\r\n                return fs;\r\n\r\n            case EntityType.watcher:\r\n                let w: Watcher = new Watcher(this.world, TagType.enemy, entityType, this.game, x, y, entityType, '');\r\n                w.spawnDelay = properties.spawnDelay;\r\n                w.direction = properties.direction;\r\n                w.initialize();\r\n                w.contactDamage = 4;\r\n                return w;\r\n\r\n            case EntityType.peng:\r\n                let p: Peng = new Peng(this.world, TagType.enemy, entityType, this.game, x, y, entityType, '');\r\n                p.contactDamage = 4;\r\n                return p;\r\n\r\n            case EntityType.picket_man:\r\n                let pm: PicketMan = new PicketMan(this.world, TagType.enemy, EntityType.picket_man, this.game, x, y, EntityType.picket_man, 'picket_man_01');\r\n                pm.contactDamage = 4;\r\n                return pm;\r\n\r\n            case EntityType.crazy_razy:\r\n                let cr: CrazyRazy = new CrazyRazy(this.world, TagType.enemy, entityType, this.game, x, y, entityType, 'crazy_razy_walk_01');\r\n                cr.contactDamage = 4;\r\n                cr.events.onKilled.addOnce(() => {\r\n                    cr.killLegs();\r\n                }, this);\r\n                cr.horizontalSpeed = 80;\r\n                return cr;\r\n\r\n            case EntityType.crazy_razy_fly:\r\n                let crf: CrazyRazyFly = new CrazyRazyFly(this.world, TagType.enemy, entityType, this.game, x, y, EntityType.crazy_razy, 'crazy_razy_fly');\r\n                crf.contactDamage = 4;\r\n                crf.horizontalSpeed = 80;\r\n                return crf;\r\n\r\n            case EntityType.vanishing_block:\r\n                this.tempEntity = new VanishingBlock(this.world, TagType.platform, entityType, this.game, x, y, entityType, 'vanishing_block_01');\r\n                (this.tempEntity as VanishingBlock).hitbox = new Phaser.Rectangle(x, y, 16, 16);\r\n                return (<VanishingBlock>this.tempEntity);\r\n\r\n            case EntityType.foot_holder:\r\n                this.tempEntity = new FootHolder(this.world, TagType.platform, entityType, this.game, x, y, entityType, 'foot_holder_01');\r\n\r\n                let width: number = 24;\r\n                let v0: Phaser.Point = new Phaser.Point(x - 12, y - 12);              // top-left\r\n                let v1: Phaser.Point = new Phaser.Point(x - 12 + width, y - 12);      // top-right\r\n                let dir1: Phaser.Point = v1.clone().subtract(v0.x, v0.y).normalize(); // top face\r\n                let surface: Surface = { p1: v0, p2: v1, dir: dir1, collidable: true, isMovingPlatform: true, targetSpeed: new Phaser.Point() }\r\n                this.surfaces.push(surface);\r\n\r\n                (this.tempEntity as FootHolder).horizontalSpeed = 30;\r\n                (this.tempEntity as FootHolder).setSurface(surface);\r\n                (this.tempEntity as FootHolder).setNumTiles(properties.numLeftTiles, properties.numRightTiles);\r\n                (this.tempEntity as FootHolder).initialize();\r\n\r\n                return (this.tempEntity as FootHolder);\r\n\r\n            case EntityType.cut_man_boss_item:\r\n            case EntityType.bomb_man_boss_item:\r\n            case EntityType.fire_man_boss_item:\r\n            case EntityType.elec_man_boss_item:\r\n                this.tempEntity = new PowerUp(this.world, TagType.power_up, entityType, this.game, x, y, Konstants.items, 'base_boss_item');\r\n                (this.tempEntity as PowerUp).hitbox = new Phaser.Rectangle(x, y, 16, 16);\r\n                (this.tempEntity as PowerUp).hitboxOffset.x = 0;\r\n                (this.tempEntity as PowerUp).hitboxOffset.y = -16;\r\n                (this.tempEntity as PowerUp).animations.add('glow', ['base_boss_item', 'red_boss_item'], 10, true);\r\n                (this.tempEntity as PowerUp).animations.play('glow');\r\n                return (<PowerUp>this.tempEntity);\r\n\r\n            case EntityType.guts_man_boss_item:\r\n                this.tempEntity = new PowerUp(this.world, TagType.power_up, entityType, this.game, x, y, Konstants.items, 'base_boss_item');\r\n                (this.tempEntity as PowerUp).hitbox = new Phaser.Rectangle(x, y, 16, 16);\r\n                (this.tempEntity as PowerUp).hitboxOffset.x = 0;\r\n                (this.tempEntity as PowerUp).hitboxOffset.y = -16;\r\n                (this.tempEntity as PowerUp).animations.add('glow', ['base_boss_item', 'orange_boss_item'], 10, true);\r\n                (this.tempEntity as PowerUp).animations.play('glow');\r\n                return (<PowerUp>this.tempEntity);\r\n\r\n            case EntityType.ice_man_boss_item:\r\n                this.tempEntity = new PowerUp(this.world, TagType.power_up, entityType, this.game, x, y, Konstants.items, 'base_boss_item');\r\n                (this.tempEntity as PowerUp).hitbox = new Phaser.Rectangle(x, y, 16, 16);\r\n                (this.tempEntity as PowerUp).hitboxOffset.x = 0;\r\n                (this.tempEntity as PowerUp).hitboxOffset.y = -16;\r\n                (this.tempEntity as PowerUp).animations.add('glow', ['base_boss_item', 'blue_boss_item'], 10, true);\r\n                (this.tempEntity as PowerUp).animations.play('glow');\r\n                return (<PowerUp>this.tempEntity);\r\n\r\n            default:\r\n                console.error(\"This type does not exist: \" + entityType);\r\n                break;\r\n        }\r\n    }\r\n\r\n    public createDropLift(x: number, y: number, path: string, delay: number): DropLift {\r\n        console.log('Create ' + EntityType.drop_lift);\r\n\r\n        let dropLift = new DropLift(this.world, TagType.platform, EntityType.drop_lift, this.game, x, y, EntityType.drop_lift, 'drop_lift_01');\r\n        dropLift.health = 1;\r\n        dropLift.maxHealth = 1;\r\n        dropLift.isShielded = false;\r\n        dropLift.hitbox = new Phaser.Rectangle(x, y, 32, 16);\r\n        dropLift.updateRect();\r\n\r\n        dropLift.setPath(path.split(',')); // string[]\r\n        dropLift.horizontalSpeed = 50;\r\n        dropLift.setDelay(delay);\r\n\r\n        return dropLift;\r\n    }\r\n\r\n    public createBasicBullet(owner: Entity, startX: number, startY: number, width: number, height: number,\r\n        key: string, bulletEntityType: EntityType, frame: string | number): Bullet {\r\n        console.log('Create ' + bulletEntityType);\r\n\r\n        let bullet: Bullet = new Bullet(owner, this.world, TagType.bullet, bulletEntityType, this.game,\r\n            startX, startY, key, frame);\r\n        this.game.add.existing(bullet);\r\n        this.addEntity(bullet);\r\n\r\n        bullet.hitbox = new Phaser.Rectangle(startX, startY, width, height);\r\n        bullet.hitbox.width = width;\r\n        bullet.hitbox.height = height;\r\n        bullet.hitboxOffset.x = -width * 0.5;\r\n        bullet.hitboxOffset.y = -height * 0.5;\r\n        bullet.updateRect();\r\n        this.game.add.existing(bullet);\r\n        this.addEntity(bullet);\r\n\r\n        return bullet;\r\n    }\r\n\r\n    /**\r\n     * Bullets that use bitmapdata so that you can easily use a different color.\r\n     * @param owner \r\n     * @param startX \r\n     * @param startY \r\n     * @param width \r\n     * @param height \r\n     * @param key \r\n     * @param bulletEntityType \r\n     */\r\n    public createBitmapBullet(owner: Entity, startX: number, startY: number, width: number, height: number, key: string, bulletEntityType: EntityType): Bullet {\r\n        console.log('Create ' + bulletEntityType);\r\n\r\n        let bmd: Phaser.BitmapData = this.game.make.bitmapData(width, height);\r\n        let standardBullet = this.game.make.sprite(0, 0, key);\r\n        bmd.copy(standardBullet, 0, 0, width, height);\r\n        bmd.update();\r\n\r\n        bmd.processPixelRGB((color: Phaser.ColorComponents, x: number, y: number) => {\r\n            switch (bulletEntityType) {\r\n                case EntityType.met_bullet:\r\n                    return this.changeColor(color, 255, 164, 64);\r\n\r\n                case EntityType.sniper_joe_bullet:\r\n                    return this.changeColor(color, 88, 220, 80);\r\n\r\n                case EntityType.beak_bullet:\r\n                    return this.changeColor(color, 228, 0, 88);\r\n\r\n                case EntityType.foot_holder_bullet:\r\n                    return this.changeColor(color, 255, 164, 64);\r\n            }\r\n        }, this);\r\n\r\n        let bullet: Bullet = new Bullet(owner, this.world, TagType.bullet, bulletEntityType, this.game,\r\n            startX, startY,\r\n            bmd);\r\n        bullet.hitbox = new Phaser.Rectangle(startX, startY, width, height);\r\n        bullet.hitboxOffset.x = -width * 0.5;\r\n        bullet.hitboxOffset.y = -height * 0.5;\r\n        bullet.updateRect();\r\n        this.game.add.existing(bullet);\r\n        this.addEntity(bullet);\r\n\r\n        return bullet;\r\n    }\r\n\r\n    public createLaserBullet(\r\n        owner: Entity,\r\n        startX: number, startY: number,\r\n        width: number, height: number,\r\n        key: string, bulletEntityType: EntityType): Bullet {\r\n        console.log('Create ' + bulletEntityType);\r\n\r\n        let laser: Bullet = new Bullet(owner, this.world, TagType.bullet, bulletEntityType, this.game, startX, startY, key);\r\n        this.game.add.existing(laser);\r\n        this.addEntity(laser);\r\n\r\n        laser.animations.add('idle', ['laser_beam_01', 'laser_beam_02'], 10, true, false);\r\n        laser.animations.play('idle');\r\n        laser.hitbox = new Phaser.Rectangle(startX, startY, width, height);\r\n        laser.hitbox.width = width;\r\n        laser.hitbox.height = height;\r\n        laser.hitboxOffset.x = -width * 0.5;\r\n        laser.hitboxOffset.y = -height * 0.5;\r\n        laser.updateRect();\r\n\r\n        return laser;\r\n    }\r\n\r\n    public createThrowableObject(owner: Entity, startX: number, startY: number, width: number, height: number,\r\n        offsetX: number, offsetY: number,\r\n        largeKey: EntityType, largeStartFrame: string | number,\r\n        smallKey: EntityType, smallStartFrame: string | number,\r\n        entityType: EntityType): ThrowableObject {\r\n        // console.log('Create ' + entityType);\r\n        let to = new ThrowableObject(owner, this.world, TagType.bullet, entityType, this.game, startX, startY, largeKey, largeStartFrame);\r\n        to.setHitboxAsRect(startX, startY, width, height, offsetX, offsetY);\r\n        to.updateRect();\r\n        to.setBreakableParameters(smallKey, smallStartFrame);\r\n        // to.contactDamage=4;\r\n        this.addEntity(to);\r\n        this.game.add.existing(to);\r\n        return to;\r\n    }\r\n\r\n    public createPick(owner: Entity, startX: number, startY: number,\r\n        targetX: number, targetY: number,\r\n        width: number, height: number,\r\n        key: string, entityType: EntityType): Pick {\r\n        let pick: Pick = new Pick(owner, this.world, TagType.bullet, entityType, this.game, startX, startY, key);\r\n\r\n        pick.animations.add('spin', ['picket_man_weapon_01', 'picket_man_weapon_02', 'picket_man_weapon_03', 'picket_man_weapon_04'], 10, true, false);\r\n        pick.animations.play('spin');\r\n        pick.hitbox = new Phaser.Rectangle(startX, startX, width, height);\r\n        pick.hitboxOffset.x = -width * 0.5;\r\n        pick.hitboxOffset.y = -height * 0.5;\r\n        pick.updateRect();\r\n        pick.bulletMovement = new PickBulletMovement(pick, new Phaser.Point(startX, startY),\r\n            new Phaser.Point(targetX, targetY), 1, -450);\r\n\r\n        this.game.add.existing(pick);\r\n        this.addEntity(pick);\r\n\r\n        return pick;\r\n    }\r\n\r\n    public createPowerUp(type: EntityType, x: number, y: number, isGlobal: boolean): PowerUp {\r\n        console.log('Create: ' + type);\r\n\r\n        switch (type) {\r\n            case EntityType.energy_pellet_small:\r\n                this.tempEntity = new PowerUp(this.world, TagType.power_up, type, this.game, x, y, Konstants.items, 'energy_pellet_small');\r\n                (this.tempEntity as PowerUp).energyRestore = 3;\r\n                (this.tempEntity as PowerUp).animations.add('idle', ['energy_pellet_small'], 10, false, false);\r\n                (this.tempEntity as PowerUp).animations.play('idle');\r\n\r\n                if (isGlobal) {\r\n                    (this.tempEntity as PowerUp).isGlobal = isGlobal;\r\n                    (this.tempEntity as PowerUp).getPosition().x = x + 8;\r\n                    (this.tempEntity as PowerUp).getPosition().y = y - 8;\r\n                    (this.tempEntity as PowerUp).position.x = (this.tempEntity as PowerUp).getPosition().x;\r\n                    (this.tempEntity as PowerUp).position.y = (this.tempEntity as PowerUp).getPosition().y;\r\n                }\r\n\r\n                (this.tempEntity as PowerUp).setHitboxAsRect(x, y, 10, 12, -5, -6);\r\n                (this.tempEntity as PowerUp).updateRect();\r\n                return (<PowerUp>this.tempEntity);\r\n\r\n            case EntityType.energy_pellet_large:\r\n                this.tempEntity = new PowerUp(this.world, TagType.power_up, type, this.game, x, y, Konstants.items, 'energy_pellet_large_02');\r\n                (this.tempEntity as PowerUp).energyRestore = 9;\r\n                (this.tempEntity as PowerUp).animations.add('idle', ['energy_pellet_large_01', 'energy_pellet_large_02'], 10, true, false);\r\n                (this.tempEntity as PowerUp).animations.play('idle');\r\n\r\n                if (isGlobal) {\r\n                    (this.tempEntity as PowerUp).isGlobal = isGlobal;\r\n                    (this.tempEntity as PowerUp).getPosition().x = x + 8;\r\n                    (this.tempEntity as PowerUp).getPosition().y = y - 8;\r\n                    (this.tempEntity as PowerUp).position.x = (this.tempEntity as PowerUp).getPosition().x;\r\n                    (this.tempEntity as PowerUp).position.y = (this.tempEntity as PowerUp).getPosition().y;\r\n                }\r\n\r\n                (this.tempEntity as PowerUp).setHitboxAsRect(x, y, 16, 16, -8, -8);\r\n                (this.tempEntity as PowerUp).updateRect();\r\n                return (<PowerUp>this.tempEntity);\r\n\r\n            case EntityType.weapon_energy_small:\r\n                this.tempEntity = new PowerUp(this.world, TagType.power_up, type, this.game, x, y, Konstants.items, 'weapon_energy_small');\r\n                (this.tempEntity as PowerUp).energyRestore = 3;\r\n                (this.tempEntity as PowerUp).animations.add('idle', ['weapon_energy_small'], 10, false, false);\r\n                (this.tempEntity as PowerUp).animations.play('idle');\r\n\r\n                if (isGlobal) {\r\n                    (this.tempEntity as PowerUp).isGlobal = isGlobal;\r\n                    (this.tempEntity as PowerUp).getPosition().x = x + 8;\r\n                    (this.tempEntity as PowerUp).getPosition().y = y - 8;\r\n                    (this.tempEntity as PowerUp).position.x = (this.tempEntity as PowerUp).getPosition().x;\r\n                    (this.tempEntity as PowerUp).position.y = (this.tempEntity as PowerUp).getPosition().y;\r\n                }\r\n\r\n                (this.tempEntity as PowerUp).setHitboxAsRect(x, y, 12, 8, -6, 0);\r\n                (this.tempEntity as PowerUp).updateRect();\r\n                return (<PowerUp>this.tempEntity);\r\n\r\n            case EntityType.weapon_energy_large:\r\n                this.tempEntity = new PowerUp(this.world, TagType.power_up, type, this.game, x, y, Konstants.items, 'weapon_energy_large_02');\r\n                (this.tempEntity as PowerUp).energyRestore = 9;\r\n                (this.tempEntity as PowerUp).animations.add('idle', ['weapon_energy_large_01', 'weapon_energy_large_02'], 10, true, false);\r\n                (this.tempEntity as PowerUp).animations.play('idle');\r\n\r\n                if (isGlobal) {\r\n                    (this.tempEntity as PowerUp).isGlobal = isGlobal;\r\n                    (this.tempEntity as PowerUp).getPosition().x = x + 8;\r\n                    (this.tempEntity as PowerUp).getPosition().y = y - 8;\r\n                    (this.tempEntity as PowerUp).position.x = (this.tempEntity as PowerUp).getPosition().x;\r\n                    (this.tempEntity as PowerUp).position.y = (this.tempEntity as PowerUp).getPosition().y;\r\n                }\r\n\r\n                (this.tempEntity as PowerUp).setHitboxAsRect(x, y, 16, 12, -8, -4);\r\n                (this.tempEntity as PowerUp).updateRect();\r\n                return (<PowerUp>this.tempEntity);\r\n\r\n            case EntityType.robot_crystal:\r\n                this.tempEntity = new PowerUp(this.world, TagType.power_up, type, this.game, x, y, Konstants.items, 'robot_crystal');\r\n\r\n                if (isGlobal) {\r\n                    (this.tempEntity as PowerUp).isGlobal = isGlobal;\r\n                    (this.tempEntity as PowerUp).getPosition().x = x + 8;\r\n                    (this.tempEntity as PowerUp).getPosition().y = y - 8;\r\n                    (this.tempEntity as PowerUp).position.x = (this.tempEntity as PowerUp).getPosition().x;\r\n                    (this.tempEntity as PowerUp).position.y = (this.tempEntity as PowerUp).getPosition().y;\r\n                }\r\n\r\n                (this.tempEntity as PowerUp).setHitboxAsRect(x, y, 8, 8, -4, -0);\r\n                (this.tempEntity as PowerUp).updateRect();\r\n\r\n                return (<PowerUp>this.tempEntity);\r\n\r\n            case EntityType.one_up:\r\n                this.tempEntity = new PowerUp(this.world, TagType.power_up, type, this.game, x, y, Konstants.items, 'one_up');\r\n\r\n                if (isGlobal) {\r\n                    (this.tempEntity as PowerUp).isGlobal = isGlobal;\r\n                    (this.tempEntity as PowerUp).getPosition().x = x + 8;\r\n                    (this.tempEntity as PowerUp).getPosition().y = y - 8;\r\n                    (this.tempEntity as PowerUp).position.x = (this.tempEntity as PowerUp).getPosition().x;\r\n                    (this.tempEntity as PowerUp).position.y = (this.tempEntity as PowerUp).getPosition().y;\r\n                }\r\n\r\n                (this.tempEntity as PowerUp).setHitboxAsRect(x, y, 16, 16, -8, -8);\r\n                (this.tempEntity as PowerUp).updateRect();\r\n\r\n                return (<PowerUp>this.tempEntity);\r\n\r\n            default:\r\n                console.error('This power up does not exist!');\r\n                break;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Changes the passed in color to the r,g,b.\r\n     * @param color \r\n     * @param r \r\n     * @param g \r\n     * @param b \r\n     */\r\n    private changeColor(color: Phaser.ColorComponents, r: number, g: number, b: number): Phaser.ColorComponents {\r\n        color.r = color.r == 160 ? r : color.r;\r\n        color.g = color.g == 160 ? g : color.g;\r\n        color.b = color.b == 160 ? b : color.b;\r\n        return color;\r\n    }\r\n\r\n    public addEntity(entity: Entity): void {\r\n        this.entities.push(entity);\r\n    }\r\n\r\n    public removeAllEntitiesExceptPlayer(): void {\r\n        for (let i = this.entities.length - 1; i >= 0; i--) {\r\n            if (this.entities[i].myEntityType == EntityType.player) {\r\n                continue;\r\n            }\r\n\r\n            // Don't remove spike...until I figure out a smarter way to cull this shit.\r\n            if (this.entities[i].myEntityType == EntityType.spike) {\r\n                continue;\r\n            }\r\n\r\n            // Don't remove vanishing block...its not a spawner...maybe I should make it one.\r\n            if (this.entities[i].tag == TagType.platform) {\r\n                continue;\r\n            }\r\n\r\n            if (this.entities[i].tag == TagType.power_up) {\r\n                if ((<PowerUp>this.entities[i]).isGlobal) {\r\n                    continue;\r\n                }\r\n            }\r\n\r\n            this.entities[i].kill();\r\n            this.entities.splice(i, 1);\r\n        }\r\n    }\r\n\r\n    public addSurface(surface: Surface): void {\r\n        this.surfaces.push(surface);\r\n    }\r\n\r\n    public addLadder(ladder: Phaser.Rectangle): void {\r\n        this.ladders.push(ladder);\r\n    }\r\n}","import { World } from './world'\r\nimport { Konstants, TagType, AudioName, EntityType, WallContact } from './konstants'\r\nimport { PlayerInput } from './playerInput'\r\nimport { PlayerGraphics } from './playerGraphics'\r\nimport { Bullet } from './bullets/bullet'\r\nimport { Entity } from './entity'\r\nimport { SAT2D } from './sat2d/sat2d'\r\nimport { Ray } from './sat2d/ray'\r\nimport { RayIntersection } from './sat2d/rayIntersection'\r\nimport { RayType } from './sat2d/ray'\r\nimport { Vector2 } from './sat2d/vector2'\r\nimport { Surface } from './world'\r\nimport { Helper } from './helper'\r\nimport { Spike } from './spike'\r\nimport { Weapon, WeaponType } from './weapon/weapon'\r\nimport { LemonWeapon } from './weapon/lemonWeapon'\r\nimport { CutManWeapon } from './weapon/cutManWeapon'\r\nimport { Meter, MeterDirection } from './ui/meter'\r\nimport { InventoryManager } from './managers/inventoryManager'\r\nimport { fixedTime, fixedTimeMS } from './main'\r\nimport { Debug } from './debug'\r\n\r\nexport enum MegaManAnimations {\r\n    idle = 'idle',\r\n    run = 'run',\r\n    jump = 'jump',\r\n    slide = 'slide',\r\n    blink = 'blink',\r\n    hurt = 'hurt',\r\n    idle_shoot = 'idle_shoot',\r\n    run_shoot = 'run_shoot',\r\n    jump_shoot = 'jump_shoot',\r\n    ladder_shoot = 'ladder_shoot',\r\n    ladder = 'ladder',\r\n    ladder_idle = 'ladder_idle',\r\n    throw = 'throw',\r\n    jump_throw = 'jump_throw',\r\n    ladder_throw = 'ladder_throw',\r\n    unpause_effect = 'unpause_effect',\r\n    lose_control = 'lose_control',\r\n}\r\n\r\n/**\r\n * The player's position is the bottom middle center. The anchor point.\r\n */\r\nexport class Player extends Entity {\r\n\r\n    private isPlayerInvincible_Debug: boolean;\r\n    public switchedWeapon: Phaser.Signal = new Phaser.Signal();\r\n    public healthMeter: Meter;\r\n    public isWarpingIn: boolean = false;\r\n\r\n    playerInput: PlayerInput;\r\n    playerGraphics: PlayerGraphics;\r\n    horizontalSpeed: number = 90;\r\n    isRunning: boolean = false;\r\n    idleElapsedTime: number = 0;\r\n    blinkStartTime: number = 2500;         // After some time player will play idle animation after (ms) passed.\r\n    isIdle: boolean = false;               // The player has not moved for some time.\r\n    isJumping: boolean = false;\r\n    canJumpInAir: boolean = true;\r\n    jumpInAirElapsedTime: number = 0;\r\n    jumpInAirEndTime: number = 500;\r\n    airJumpWindow: boolean = false;\r\n    isFalling: boolean = false;\r\n    useGravity: boolean = true;\r\n    targetSpeed: Phaser.Point = new Phaser.Point(0, 0);\r\n    jumpSpeed: number = 100;\r\n    isOnGround: boolean = false;\r\n\r\n    isSliding: boolean = false;\r\n    slideSpeed: number = 160;\r\n    slideElapsedTime: number = 0;\r\n    slideEndTime: number = 400;\r\n\r\n    isHurt: boolean = false;\r\n    hurtElapsedTime: number = 0;\r\n    hurtEndTime: number = 500;\r\n    damageDir: Phaser.Point = new Phaser.Point;\r\n    isInvincible: boolean = false;\r\n    invincibleElapsedTime: number = 0;\r\n    invincibleEndTime: number = 1300;\r\n    isBlinking: boolean = false;\r\n    blinkingElapsedTime: number = 0;\r\n    blinkingEndTime: number = 1300;\r\n    blinkRate: number = 2;\r\n    blinkCounter: number = 0;\r\n    whiteEffect: Phaser.Sprite;\r\n    whiteEffectMaxCounter: number = 12;\r\n    deathEffects: Array<Phaser.Sprite> = new Array<Phaser.Sprite>();\r\n\r\n    isTouchingLadder: boolean = false;\r\n    currLadder: Phaser.Rectangle;\r\n    isOnLadder: boolean = false;\r\n    ladderShootingDir: number = -1;\r\n    ladderSpeed: number = 65;\r\n    facingDirection: number = 1;\r\n    isShooting: boolean = false;\r\n    shootElapsedTime: number = 0;\r\n    shootEndTime: number = 225;\r\n    midGroundCheck: Ray;\r\n    leftGroundCheck: Ray;\r\n    rightGroundCheck: Ray;\r\n    midCeilCheck: Ray;\r\n    leftCeilCheck: Ray;\r\n    rightCeilCheck: Ray;\r\n    leftCheck1: Ray;\r\n    leftCheck2: Ray;\r\n    rightCheck1: Ray;\r\n    rightCheck2: Ray;\r\n    groundRays: Array<Ray> = new Array<Ray>();\r\n    ceilRays: Array<Ray> = new Array<Ray>();\r\n    leftRays: Array<Ray> = new Array<Ray>();\r\n    rightRays: Array<Ray> = new Array<Ray>();\r\n    skinWidth: number = 5;\r\n    wallContact: WallContact;\r\n    private isShootingImmobileWeapon: boolean = false; // Player cannot move when shooting weapons like Rolling Cutter.\r\n    private inventoryManager: InventoryManager = null; // local access - for convenience\r\n\r\n    //******************************\r\n    // JUMP SETTINGS\r\n    //******************************\r\n    private minJumpHeight: number = 1;\r\n    private maxJumpHeight: number = 60;\r\n    private timeToJumpApex = 0.35;\r\n    private gravityX: number = 0;\r\n    private gravityY: number = 0;\r\n    private maxJumpVelocity = 0;\r\n    private minJumpVelocity = 0;\r\n\r\n    private tempSuface: Surface;\r\n    private tempInto: RayIntersection;\r\n    private tempRay_1: Ray = new Ray(new Vector2(), new Vector2(), RayType.not_infinite);\r\n    private tempRay_2: Ray = new Ray(new Vector2(), new Vector2(), RayType.not_infinite);\r\n\r\n    //******************************\r\n    // DISRUPT SETTINGS\r\n    //******************************\r\n    public isDisrupted: boolean = false;\r\n    private disruptionElapsedTime: number = 0;\r\n    private disruptionEndTime: number = 400;\r\n\r\n    //******************************\r\n    // MOVING PLATFORM\r\n    //******************************\r\n    public isOnMovingPlatform: boolean;\r\n    private currMovingPlatform: Surface;\r\n\r\n    // private pGraphicsDebug: Phaser.Graphics;\r\n\r\n    constructor(input: PlayerInput, graphics: PlayerGraphics, myWorld: World, tag: TagType, e: EntityType, game: Phaser.Game, x: number, y: number, key: string, frame: string) {\r\n        super(myWorld, tag, e, game, x, y, key, frame);\r\n\r\n        this.isPlayerInvincible_Debug = Debug.IsPlayerInvincible;\r\n        this.playerInput = input;\r\n        this.playerGraphics = graphics;\r\n        this.game.add.existing(this);\r\n        this.getPosition().x = x;\r\n        this.getPosition().y = y;\r\n        this.anchor.setTo(0.5, 1);\r\n        this.smoothed = true;\r\n\r\n        this.animations.add(MegaManAnimations.idle, ['idle.png'], 10, false, false);\r\n        this.animations.add(MegaManAnimations.blink, Phaser.Animation.generateFrameNames('blink_', 1, 3, '.png', 2), 3, true, false);\r\n        this.animations.add(MegaManAnimations.run, Phaser.Animation.generateFrameNames('run_', 1, 4, '.png', 2), 10, false, false);\r\n        this.animations.add(MegaManAnimations.jump, ['jump.png'], 10, false, false);\r\n        this.animations.add(MegaManAnimations.idle_shoot, ['idle_shoot.png'], 10, false, false);\r\n        this.animations.add(MegaManAnimations.jump_shoot, ['jump_shoot.png'], 10, false, false);\r\n        this.animations.add(MegaManAnimations.run_shoot, Phaser.Animation.generateFrameNames('run_shoot_', 1, 4, '.png', 2), 10, true, false);\r\n        this.animations.add(MegaManAnimations.ladder_shoot, ['climb_ladder_shoot.png'], 10, false, false);\r\n        this.animations.add(MegaManAnimations.ladder, ['climb_ladder_01.png', 'climb_ladder_02.png'], 8, false, false);\r\n        this.animations.add(MegaManAnimations.ladder_idle, ['climb_ladder_01.png'], 10, false, false);\r\n        this.animations.add(MegaManAnimations.hurt, ['hurt.png'], 10, false, false);\r\n        this.animations.add(MegaManAnimations.slide, ['slide.png'], 10, false, false);\r\n        this.animations.add(MegaManAnimations.throw, ['throw.png'], 10, false, false);\r\n        this.animations.add(MegaManAnimations.jump_throw, ['jump_throw.png'], 10, false, false);\r\n        this.animations.add(MegaManAnimations.ladder_throw, ['ladder_throw.png'], 10, false, false);\r\n        this.animations.add(MegaManAnimations.unpause_effect, ['spawn_effect.png', 'warp_in_effect_01.png', 'warp_in_effect_02.png', 'spawn_effect.png'], 20, false, false);\r\n        this.animations.add(MegaManAnimations.lose_control, ['lose_control.png',], 10, false, false);\r\n        this.animations.play(MegaManAnimations.idle);\r\n\r\n        this.hitbox = new Phaser.Rectangle(this.getPosition().x, this.getPosition().y, 16, 20);\r\n        this.hitboxOffset.x = -8;\r\n        this.hitboxOffset.y = -20;\r\n        this.updateRect();\r\n\r\n        this.midGroundCheck = new Ray(new Vector2(), new Vector2(), RayType.not_infinite);\r\n        this.leftGroundCheck = new Ray(new Vector2(), new Vector2(), RayType.not_infinite);\r\n        this.rightGroundCheck = new Ray(new Vector2(), new Vector2(), RayType.not_infinite);\r\n        this.midCeilCheck = new Ray(new Vector2(), new Vector2(), RayType.not_infinite);\r\n        this.leftCeilCheck = new Ray(new Vector2(), new Vector2(), RayType.not_infinite);\r\n        this.rightCeilCheck = new Ray(new Vector2(), new Vector2(), RayType.not_infinite);\r\n        this.leftCheck1 = new Ray(new Vector2(), new Vector2(), RayType.not_infinite);\r\n        this.leftCheck2 = new Ray(new Vector2(), new Vector2(), RayType.not_infinite);\r\n        this.rightCheck1 = new Ray(new Vector2(), new Vector2(), RayType.not_infinite);\r\n        this.rightCheck2 = new Ray(new Vector2(), new Vector2(), RayType.not_infinite);\r\n        this.groundRays.push(this.midGroundCheck);\r\n        this.groundRays.push(this.leftGroundCheck);\r\n        this.groundRays.push(this.rightGroundCheck);\r\n        this.ceilRays.push(this.midCeilCheck);\r\n        this.ceilRays.push(this.leftCeilCheck);\r\n        this.ceilRays.push(this.rightCeilCheck);\r\n        this.leftRays.push(this.leftCheck1);\r\n        this.leftRays.push(this.leftCheck2);\r\n        this.rightRays.push(this.rightCheck1);\r\n        this.rightRays.push(this.rightCheck2);\r\n\r\n        this.wallContact = { left: false, right: false, up: false, down: false };\r\n        this.calculateRegularJumpSettings();\r\n\r\n        this.whiteEffect = this.game.add.sprite(0, 0, Konstants.mega_man, 'white_effect.png');\r\n        this.whiteEffect.alpha = 0.5;\r\n        this.whiteEffect.visible = false;\r\n        this.addChild(this.whiteEffect);\r\n\r\n        this.healthMeter = new Meter(this.game, 16, 15, MeterDirection.Vertical);\r\n        this.health = this.healthMeter.totalEnergy;\r\n        // this.health = 1;\r\n        this.maxHealth = this.healthMeter.totalEnergy;\r\n        // this.maxHealth = 1;\r\n\r\n        // this.pGraphicsDebug = this.game.add.graphics();\r\n        // this.game.add.existing(this.pGraphicsDebug);\r\n    }\r\n\r\n    public manualUpdate(): void {\r\n        // this.pGraphicsDebug.clear();\r\n\r\n        if (!this.enabled) {\r\n            return;\r\n        }\r\n\r\n        if (!this.alive) {\r\n            return;\r\n        }\r\n\r\n        this.playerInput.update(this);\r\n        this.checkMovingPlatform();\r\n\r\n        if (this.useGravity && !this.isOnLadder) {\r\n            this.targetSpeed.x += Math.abs(this.gravityX) * fixedTime;\r\n            this.targetSpeed.y += Math.abs(this.gravityY) * fixedTime;\r\n        }\r\n\r\n        if (this.targetSpeed.y >= 300) {\r\n            this.targetSpeed.y = 300;\r\n        }\r\n\r\n        this.velocity.x = this.targetSpeed.x;\r\n        this.velocity.y = this.targetSpeed.y;\r\n\r\n        this.previousPosition.x = this.getPosition().x;\r\n        this.previousPosition.y = this.getPosition().y;\r\n\r\n        this.getPosition().x += this.velocity.x * fixedTime;\r\n        this.getPosition().y += this.velocity.y * fixedTime;\r\n\r\n        // This ensures that the sprite sits at an integer value to prevent pixel smoothing.\r\n        // The sprite.position must be separated from the actual positional movement logic, hence why\r\n        // this.myPosition is used instead of 'this.position' - 'this.position' is inherited from Phaser.Sprite\r\n        // and automatically updates the sprites location and we don't want that. We want the sprite X to sit at\r\n        // an integer value but the actual position to be the float value.\r\n        this.position.x = (this.getPosition().x + 0.5) | 0;\r\n        this.position.y = this.getPosition().y;\r\n\r\n        this.checkBlink();\r\n        this.checkShooting();\r\n        this.checkSliding();\r\n        this.checkInvincible();\r\n        this.checkHurt();\r\n        this.checkIdle();\r\n        this.checkFalling();\r\n        this.checkLadderPosition();\r\n        this.checkIfDisrupted();\r\n        this.updateRect();\r\n        this.playerGraphics.update(this);\r\n        this.castRays();\r\n        // this.showDebugRays();\r\n    }\r\n\r\n    public loseControl(): void {\r\n        if (!this.isOnGround) {\r\n            return;\r\n        }\r\n\r\n        if (this.isDisrupted) {\r\n            return;\r\n        }\r\n\r\n        this.isDisrupted = true;\r\n        this.getVelocity().x = this.getVelocity().y = 0;\r\n        this.targetSpeed.x = 8 * -this.getFacingDirection();\r\n        this.targetSpeed.y = 0;\r\n    }\r\n\r\n    public regainControl(): void {\r\n        this.isDisrupted = false;\r\n        this.disruptionElapsedTime = 0;\r\n    }\r\n\r\n    public switchWeapon(direction: number): void {\r\n    }\r\n\r\n    public takeDamage(damage: number, damageDir: Phaser.Point = new Phaser.Point(0, 0)): void {\r\n        if (!this.alive) {\r\n            return;\r\n        }\r\n\r\n        if (this.isPlayerInvincible_Debug) {\r\n            return;\r\n        }\r\n\r\n        if (this.health <= 0) {\r\n            return;\r\n        }\r\n\r\n        this.healthMeter.takeEnergy(damage);\r\n        this.health -= damage;\r\n        this.targetSpeed.x = 30 * damageDir.x;\r\n        this.targetSpeed.y = 0;\r\n\r\n        if (this.health <= 0) {\r\n            this.game.sound.play(AudioName.megaman_defeat);\r\n            this.health = 0;\r\n\r\n            let speed: number = 14;\r\n            this.addDeathEffect(0, -speed); // top\r\n            this.addDeathEffect(speed, 0);  // right\r\n            this.addDeathEffect(0, speed);  // bottom\r\n            this.addDeathEffect(-speed, 0); // left\r\n\r\n            speed = 40;\r\n            this.addDeathEffect(0, -speed); // top\r\n            this.addDeathEffect(Math.cos(45 * (Math.PI / 180)) * speed, Math.sin(-45 * (Math.PI / 180)) * speed); // top-right\r\n            this.addDeathEffect(speed, 0);  // right\r\n            this.addDeathEffect(Math.cos(45 * (Math.PI / 180)) * speed, Math.sin(45 * (Math.PI / 180)) * speed); // bottom-right\r\n            this.addDeathEffect(0, speed);  // bottom\r\n            this.addDeathEffect(Math.cos(135 * (Math.PI / 180)) * speed, Math.sin(45 * (Math.PI / 180)) * speed); // bottom-left\r\n            this.addDeathEffect(-speed, 0);  // left\r\n            this.addDeathEffect(Math.cos(135 * (Math.PI / 180)) * speed, Math.sin(-45 * (Math.PI / 180)) * speed); // top-left\r\n\r\n            this.kill();\r\n            this.destroyed.dispatch(this);\r\n        }\r\n        else {\r\n            this.game.sound.play(AudioName.megaman_damage);\r\n            this.isHurt = true;\r\n            this.isInvincible = true;\r\n            this.isBlinking = true;\r\n            this.myWorld.createHurtDust(this.getPosition().x - 2, this.getPosition().y - 40);\r\n            this.myWorld.createHurtDust(this.getPosition().x - 12, this.getPosition().y - 36);\r\n            this.myWorld.createHurtDust(this.getPosition().x + 8, this.getPosition().y - 36);\r\n            this.isOnLadder = false;\r\n            this.currLadder = null;\r\n            this.whiteEffect.visible = true;\r\n            this.whiteEffect.position.x = -12;\r\n            this.whiteEffect.position.y = -24;\r\n        }\r\n    }\r\n\r\n    public checkSurfaceCollisions(surfaces: Array<Surface>): void {\r\n        this.wallContact.left = false;\r\n        this.wallContact.right = false;\r\n        this.wallContact.up = false;\r\n        this.wallContact.down = false;\r\n        this.isTouchingLadder = false; // todo: is this necessary?\r\n        this.currLadder = null; // todo: is this necessary?\r\n        this.isOnGround = false;\r\n        this.isOnMovingPlatform = false;\r\n        this.tempInto = null;\r\n\r\n        for (let j = 0; j < surfaces.length; j++) {\r\n            if (this.isOnLadder) {\r\n                continue;\r\n            }\r\n\r\n            this.tempSuface = surfaces[j];\r\n\r\n            if (!this.tempSuface.collidable) {\r\n                continue;\r\n            }\r\n\r\n            let nx: number = this.tempSuface.dir.y;\r\n            let ny: number = -this.tempSuface.dir.x;\r\n\r\n            // Check floors\r\n            if (ny == -1 && this.getVelocity().y > 0) {\r\n                for (let k = 0; k < this.groundRays.length; k++) {\r\n                    this.tempRay_2.start.x = this.tempSuface.p1.x;\r\n                    this.tempRay_2.start.y = this.tempSuface.p1.y;\r\n                    this.tempRay_2.end.x = this.tempSuface.p2.x;\r\n                    this.tempRay_2.end.y = this.tempSuface.p2.y;\r\n                    this.tempRay_2.dir.x = this.tempRay_2.end.x - this.tempRay_2.start.x;\r\n                    this.tempRay_2.dir.x = this.tempRay_2.end.y - this.tempRay_2.start.y;\r\n                    this.tempInto = SAT2D.testRayVsRay(this.groundRays[k], this.tempRay_2, this.tempInto);\r\n\r\n                    if (this.tempInto != null) {\r\n\r\n                        let dx: number = this.tempInto.ray1.end.x - this.tempInto.ray1.start.x;\r\n                        let dy: number = this.tempInto.ray1.end.y - this.tempInto.ray1.start.y;\r\n                        let distance: number = Math.sqrt(dx * dx + dy * dy);\r\n                        let trueDistance: number = distance * this.tempInto.u1;\r\n\r\n                        let contactX: number = this.tempInto.ray1.start.x + this.tempInto.ray1.dir.x * this.tempInto.u1;\r\n                        let contactY: number = this.tempInto.ray1.start.y + trueDistance;\r\n\r\n                        // this.pGraphicsDebug.drawCircle(contactX, contactY, 3);\r\n\r\n                        if (trueDistance > this.hitbox.height * 0.5) {\r\n                            continue;\r\n                        }\r\n\r\n                        if (this.isFalling) {\r\n                            this.game.sound.play(AudioName.megaman_land);\r\n                        }\r\n\r\n                        this.getPosition().y = contactY;\r\n                        this.setVelocity(this.getVelocity().x, 0);\r\n                        this.targetSpeed.y = 0;\r\n                        this.isOnGround = true;\r\n                        this.isJumping = false;\r\n                        this.isFalling = false;\r\n                        this.wallContact.down = true;\r\n                        this.airJumpWindow = false;\r\n                        this.jumpInAirElapsedTime = 0;\r\n\r\n                        if (this.tempSuface.isMovingPlatform) {\r\n                            this.isOnMovingPlatform = true;\r\n                            this.currMovingPlatform = this.tempSuface;\r\n                        }\r\n\r\n                        continue;\r\n                    }\r\n                }\r\n            }\r\n\r\n            // Check ceilings\r\n            if (ny == 1 && this.getVelocity().y < 0) {\r\n                for (let k = 0; k < this.ceilRays.length; k++) {\r\n                    this.tempRay_2.start.x = this.tempSuface.p1.x;\r\n                    this.tempRay_2.start.y = this.tempSuface.p1.y;\r\n                    this.tempRay_2.end.x = this.tempSuface.p2.x;\r\n                    this.tempRay_2.end.y = this.tempSuface.p2.y;\r\n                    this.tempRay_2.dir.x = this.tempRay_2.end.x - this.tempRay_2.start.x;\r\n                    this.tempRay_2.dir.x = this.tempRay_2.end.y - this.tempRay_2.start.y;\r\n                    this.tempInto = SAT2D.testRayVsRay(this.ceilRays[k], this.tempRay_2, this.tempInto);\r\n\r\n                    if (this.tempInto != null) {\r\n\r\n                        let dx: number = this.tempInto.ray1.end.x - this.tempInto.ray1.start.x;\r\n                        let dy: number = this.tempInto.ray1.end.y - this.tempInto.ray1.start.y;\r\n                        let distance: number = Math.sqrt(dx * dx + dy * dy);\r\n                        let trueDistance: number = distance * this.tempInto.u1;\r\n\r\n                        let contactX: number = this.tempInto.ray1.start.x + this.tempInto.ray1.dir.x * this.tempInto.u1;\r\n                        let contactY: number = this.tempInto.ray1.start.y - trueDistance;\r\n\r\n                        // this.pGraphicsDebug.drawCircle(contactX, contactY, 3);\r\n\r\n                        if (trueDistance > this.hitbox.height * 0.5) {\r\n                            continue;\r\n                        }\r\n\r\n                        this.getPosition().y = contactY + this.hitbox.height;\r\n                        this.setVelocity(this.getVelocity().x, 0);\r\n                        this.targetSpeed.y = 0;\r\n                        this.isFalling = true;\r\n                        this.wallContact.up = true;\r\n                        continue;\r\n                    }\r\n                }\r\n            }\r\n\r\n            // Check right walls\r\n            if (nx == -1 && this.getVelocity().x > 0) {\r\n                for (let k = 0; k < this.rightRays.length; k++) {\r\n                    this.tempRay_2.start.x = this.tempSuface.p1.x;\r\n                    this.tempRay_2.start.y = this.tempSuface.p1.y;\r\n                    this.tempRay_2.end.x = this.tempSuface.p2.x;\r\n                    this.tempRay_2.end.y = this.tempSuface.p2.y;\r\n                    this.tempRay_2.dir.x = this.tempRay_2.end.x - this.tempRay_2.start.x;\r\n                    this.tempRay_2.dir.x = this.tempRay_2.end.y - this.tempRay_2.start.y;\r\n                    this.tempInto = SAT2D.testRayVsRay(this.rightRays[k], this.tempRay_2, this.tempInto);\r\n\r\n                    if (this.tempInto != null) {\r\n\r\n                        let dx: number = this.tempInto.ray1.end.x - this.tempInto.ray1.start.x;\r\n                        let dy: number = this.tempInto.ray1.end.y - this.tempInto.ray1.start.y;\r\n                        let distance: number = Math.sqrt(dx * dx + dy * dy);\r\n                        let trueDistance: number = distance * this.tempInto.u1;\r\n\r\n                        let contactX: number = this.tempInto.ray1.start.x + trueDistance;\r\n                        let contactY: number = this.tempInto.ray1.start.y;\r\n\r\n                        // this.pGraphicsDebug.lineStyle(1, 0);\r\n                        // this.pGraphicsDebug.beginFill(0xff0000, 0.5);\r\n                        // this.pGraphicsDebug.drawCircle(contactX, contactY, 5);\r\n\r\n                        if (trueDistance > this.hitbox.width * 0.5) {\r\n                            continue;\r\n                        }\r\n\r\n                        this.getPosition().x = contactX - this.hitbox.width * 0.5;\r\n                        this.wallContact.right = true;\r\n                        continue;\r\n                    }\r\n                }\r\n            }\r\n\r\n            // Check left walls\r\n            if (nx == 1 && this.getVelocity().x < 0) {\r\n                for (let k = 0; k < this.leftRays.length; k++) {\r\n                    this.tempRay_2.start.x = this.tempSuface.p1.x;\r\n                    this.tempRay_2.start.y = this.tempSuface.p1.y;\r\n                    this.tempRay_2.end.x = this.tempSuface.p2.x;\r\n                    this.tempRay_2.end.y = this.tempSuface.p2.y;\r\n                    this.tempRay_2.dir.x = this.tempRay_2.end.x - this.tempRay_2.start.x;\r\n                    this.tempRay_2.dir.x = this.tempRay_2.end.y - this.tempRay_2.start.y;\r\n                    this.tempInto = SAT2D.testRayVsRay(this.leftRays[k], this.tempRay_2, this.tempInto);\r\n\r\n                    if (this.tempInto != null) {\r\n\r\n                        let dx: number = this.tempInto.ray1.end.x - this.tempInto.ray1.start.x;\r\n                        let dy: number = this.tempInto.ray1.end.y - this.tempInto.ray1.start.y;\r\n                        let distance: number = Math.sqrt(dx * dx + dy * dy);\r\n                        let trueDistance: number = distance * this.tempInto.u1;\r\n\r\n                        let contactX: number = this.tempInto.ray1.start.x - trueDistance;\r\n                        let contactY: number = this.tempInto.ray1.start.y;\r\n\r\n                        // this.pGraphicsDebug.lineStyle(1, 0);\r\n                        // this.pGraphicsDebug.beginFill(0xff0000, 0.5);\r\n                        // this.pGraphicsDebug.drawCircle(contactX, contactY, 5);\r\n\r\n                        if (trueDistance > this.hitbox.width * 0.5) {\r\n                            continue;\r\n                        }\r\n\r\n                        this.getPosition().x = contactX + this.hitbox.width * 0.5;\r\n                        this.wallContact.left = true;\r\n                        continue;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    public checkLadderCollisions(ladders: Array<Phaser.Rectangle>): void {\r\n        for (let j = 0; j < ladders.length; j++) {\r\n            if (Phaser.Rectangle.intersects(this.hitbox, ladders[j])) {\r\n                this.isTouchingLadder = true;\r\n                this.currLadder = ladders[j];\r\n            }\r\n        }\r\n    }\r\n\r\n    public checkCollideWith(entity: Entity): void {\r\n        if (Helper.distanceTo(entity, this) > 21) {\r\n            return;\r\n        }\r\n\r\n        if (entity.tag == TagType.bullet) {\r\n            return;\r\n        }\r\n    }\r\n\r\n    public move(x: number, y: number, facingDir: number = 1): void {\r\n        if (this.isHurt) {\r\n            return;\r\n        }\r\n\r\n        if (this.isOnLadder) {\r\n            this.setFacingDirection(facingDir);\r\n            return;\r\n        }\r\n\r\n        // Player cannot move while sliding. Slide has a pre-set time.\r\n        if (this.isSliding) {\r\n            return;\r\n        }\r\n\r\n        if (this.isShootingImmobileWeapon) {\r\n            x = 0;\r\n        }\r\n\r\n        this.targetSpeed.x = x;\r\n        this.targetSpeed.y = y;\r\n        this.setFacingDirection(facingDir);\r\n\r\n        if (this.targetSpeed.x > 0 || this.targetSpeed.x < 0) {\r\n            this.isRunning = true;\r\n        }\r\n\r\n        if (this.targetSpeed.x == 0) {\r\n            this.isRunning = false;\r\n        }\r\n    }\r\n\r\n    public jump(): void {\r\n        if (this.isHurt) {\r\n            return;\r\n        }\r\n\r\n        if (this.isOnGround) {\r\n            this.jumpOnGround();\r\n        }\r\n        else {\r\n            if (this.isOnLadder) {\r\n                this.jumpOnLadder();\r\n            }\r\n            else {\r\n                this.jumpInAir();\r\n            }\r\n        }\r\n    }\r\n\r\n    public jumpReleased(): void {\r\n        if (this.isHurt) {\r\n            return;\r\n        }\r\n\r\n        if (this.isOnGround) {\r\n            return;\r\n        }\r\n\r\n        if (this.velocity.y < this.minJumpVelocity) {\r\n            this.targetSpeed.y = -this.minJumpVelocity;\r\n        }\r\n    }\r\n\r\n    public shoot(): void {\r\n        if (this.isHurt) {\r\n            return;\r\n        }\r\n\r\n        if (this.isSliding) {\r\n            return;\r\n        }\r\n\r\n        if (this.isShootingImmobileWeapon) {\r\n            return;\r\n        }\r\n\r\n        let xPos: number = 0;\r\n        let yPos: number = 0;\r\n\r\n        if (this.isJumping) {\r\n            xPos = this.getPosition().x + 16 * this.getFacingDirection();\r\n            yPos = this.getPosition().y - 19;\r\n        }\r\n        else if (this.isOnLadder) {\r\n            xPos = this.getPosition().x + 16 * this.getFacingDirection();\r\n            yPos = this.getPosition().y - 18;\r\n        }\r\n        else { // idle\r\n            xPos = this.getPosition().x + 16 * this.getFacingDirection();\r\n            yPos = this.getPosition().y - 13;\r\n        }\r\n\r\n        if (!this.getCurrentWeapon().doAction(xPos, yPos)) {\r\n            return;\r\n        }\r\n\r\n        this.isShooting = true;\r\n\r\n        if (this.getCurrentWeapon().type == WeaponType.CutMan && this.isOnGround) {\r\n            this.targetSpeed.x = 0;\r\n            this.isRunning = false;\r\n            this.isShootingImmobileWeapon = true;\r\n            this.game.time.events.add(150, () => {\r\n                this.isShootingImmobileWeapon = false;\r\n            });\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Attempts to climb a ladder.\r\n     * @param upPressed - up key is pressed.\r\n     */\r\n    public getOnLadder(upPressed: boolean = false): void {\r\n        if (this.isHurt) {\r\n            return;\r\n        }\r\n\r\n        if (!this.isTouchingLadder || this.isOnLadder) { // runs once to get on the ladder\r\n            return;\r\n        }\r\n\r\n        // If the player is too far horizontally don't get on ladder. This prevents ugly snapping.\r\n        if (Math.abs((this.currLadder.topLeft.x + 8) - this.getPosition().x) > 15) {\r\n            return;\r\n        }\r\n\r\n        let ladderTopY: number = this.currLadder.topLeft.y + 16;\r\n\r\n        // Don't get on ladder if pressing down and on ground and below ladder.\r\n        if (!upPressed && this.isOnGround && this.getPosition().y - this.hitbox.height > ladderTopY) {\r\n            return;\r\n        }\r\n\r\n        // Don't get on ladder is pressing up and on ground and at the top of the ladder.\r\n        if (upPressed && this.isOnGround && this.getPosition().y - this.hitbox.height < ladderTopY) {\r\n            return;\r\n        }\r\n\r\n        this.targetSpeed.x = 0;\r\n\r\n        // Stop sliding when we have determined we can get on ladder.\r\n        if (this.isSliding) {\r\n            this.slideElapsedTime = 0;\r\n            this.isSliding = false;\r\n        }\r\n\r\n        if (this.getPosition().y - this.hitbox.height * 0.5 < ladderTopY) { // above ladder\r\n            // If up is pressed and we are on top of a ladder; don't do anything.\r\n            if (upPressed) {\r\n                return;\r\n            }\r\n\r\n            this.animations.play(MegaManAnimations.ladder);\r\n            let centerX: number = this.currLadder.topLeft.x + this.currLadder.width * 0.5;\r\n            let ladderY: number = this.currLadder.topLeft.y + 16 + this.hitbox.height * 0.5;\r\n            this.getPosition().x = centerX;\r\n            this.getPosition().y = ladderY;\r\n            this.isOnLadder = true;\r\n        }\r\n        else { // below ladder\r\n            this.animations.play(MegaManAnimations.ladder_idle);\r\n            let centerX: number = this.currLadder.topLeft.x + this.currLadder.width * 0.5;\r\n            let ladderY: number = this.getPosition().y;\r\n            this.getPosition().x = centerX;\r\n            this.getPosition().y = ladderY;\r\n            this.isOnLadder = true;\r\n        }\r\n    }\r\n\r\n    public moveOnLadder(speed: number): void {\r\n        if (this.isHurt) {\r\n            return;\r\n        }\r\n\r\n        if (!this.isOnLadder) {\r\n            return;\r\n        }\r\n\r\n        if (this.isShooting) {\r\n            this.targetSpeed.y = 0;\r\n            return;\r\n        }\r\n\r\n        this.targetSpeed.y = speed;\r\n\r\n        // if (this.targetSpeed.x > 0 || this.targetSpeed.x < 0) {\r\n        //     this.isRunning = true;\r\n        // }\r\n\r\n        // if (this.targetSpeed.x == 0) {\r\n        //     this.isRunning = false;\r\n        // }\r\n    }\r\n\r\n    public slide(): void {\r\n        if (this.isHurt) {\r\n            return;\r\n        }\r\n\r\n        if (!this.isOnGround) {\r\n            return;\r\n        }\r\n\r\n        if (this.isSliding) {\r\n            return;\r\n        }\r\n\r\n        this.myWorld.createDust(this.getPosition().x - 10 * this.getFacingDirection(), this.getPosition().y - 5);\r\n        this.isSliding = true;\r\n        this.targetSpeed.x = this.slideSpeed * this.getFacingDirection();\r\n    }\r\n\r\n    public removeDeathEffect(): void {\r\n        for (let i = this.deathEffects.length - 1; i >= 0; i--) {\r\n            this.deathEffects[i].kill();\r\n            this.deathEffects.splice(i, 1);\r\n        }\r\n    }\r\n\r\n    public giveHealth(amount: number): void {\r\n        this.health += amount;\r\n        if (this.health > this.maxHealth) {\r\n            this.health = this.maxHealth;\r\n        }\r\n    }\r\n\r\n    public setHealth(value: number): void {\r\n        this.health = value;\r\n        if (this.health > this.maxHealth) {\r\n            this.health = this.maxHealth;\r\n        }\r\n\r\n        if (this.health < 0) {\r\n            this.health = 0;\r\n        }\r\n    }\r\n\r\n    public setDefaults(): void {\r\n        this.animations.stop();\r\n        this.animations.play(MegaManAnimations.idle);\r\n        this.targetSpeed.x = 0;\r\n        this.targetSpeed.y = 0;\r\n        this.isJumping = false;\r\n        this.isOnGround = false;\r\n        this.isFalling = false;\r\n        this.isHurt = false;\r\n        this.isInvincible = false;\r\n        this.isWarpingIn = false;\r\n        this.isBlinking = false;\r\n        this.isIdle = false;\r\n        this.isOnLadder = false;\r\n        this.isShielded = false;\r\n        this.isIdle = false;\r\n        this.isSliding = false;\r\n        this.isShootingImmobileWeapon = false;\r\n        this.health = this.maxHealth;\r\n        this.healthMeter.setEnergy(this.health);\r\n        this.healthMeter.reset();\r\n    }\r\n\r\n    public stopAllMovement(): void {\r\n        this.targetSpeed.x = 0;\r\n        this.targetSpeed.y = 0;\r\n        this.getVelocity().x = 0;\r\n        this.getVelocity().y = 0;\r\n        this.isRunning = false;\r\n        this.isJumping = false;\r\n    }\r\n\r\n    public getCurrentWeapon(): Weapon {\r\n        return this.inventoryManager.getCurrentlySelectedWeapon();\r\n    }\r\n\r\n    public getAllWeapons(): Array<Weapon> {\r\n        return this.inventoryManager.weaponList;\r\n    }\r\n\r\n    public getInventoryManager(): InventoryManager {\r\n        return this.inventoryManager;\r\n    }\r\n\r\n    public setInventoryManager(im: InventoryManager): void {\r\n        this.inventoryManager = im;\r\n        this.inventoryManager.selectedWeapon.add((weapon: Weapon) => {\r\n\r\n        }, this);\r\n    }\r\n\r\n    public toggleMeter(): void {\r\n        this.healthMeter.isVisible == true ? this.healthMeter.hide() : this.healthMeter.show();\r\n\r\n        if (this.inventoryManager.getCurrentlySelectedItem().weapon.energyMeter == null) {\r\n            return;\r\n        }\r\n\r\n        this.inventoryManager.getCurrentlySelectedItem().weapon.energyMeter.isVisible == true ?\r\n            this.inventoryManager.getCurrentlySelectedItem().weapon.energyMeter.hide() :\r\n            this.inventoryManager.getCurrentlySelectedItem().weapon.energyMeter.show();\r\n    }\r\n\r\n    private calculateRegularJumpSettings(): void {\r\n        this.gravityY = -(2 * this.maxJumpHeight) / Math.pow(this.timeToJumpApex, 2);\r\n        this.maxJumpVelocity = Math.abs(this.gravityY) * this.timeToJumpApex;\r\n        this.minJumpVelocity = Math.sqrt(2 * Math.abs(this.gravityY) * this.minJumpHeight);\r\n\r\n        // console.log('gravity: ' + this._gravity);\r\n        // console.log('maxJumpVelocity: ' + this._maxJumpVelocity);\r\n        // console.log('minJumpVelocity: ' + this._minJumpVelocity);\r\n    }\r\n\r\n    private addDeathEffect(vx: number, vy: number): void {\r\n        let s: Phaser.Sprite = this.myWorld.createMegaManDeathEffect(this.getPosition().x, this.getPosition().y - 12);\r\n        s.body.velocity.x = vx;\r\n        s.body.velocity.y = vy;\r\n        this.deathEffects.push(s);\r\n    }\r\n\r\n    private checkMovingPlatform(): void {\r\n        if (!this.isOnMovingPlatform) {\r\n            return;\r\n        }\r\n\r\n        // Use the targetSpeed from hurt instead of from moving platform.\r\n        if (!this.isHurt) {\r\n            this.targetSpeed.x += this.currMovingPlatform.targetSpeed.x;\r\n        }\r\n\r\n        // Only set the targetSpeed when the moving platform is going down.\r\n        // This prevents the player from constantly falling.\r\n        // Going up is fine because the raycasts re-position the player automatically.\r\n        if (this.currMovingPlatform.targetSpeed.y > 0) {\r\n            this.targetSpeed.y += this.currMovingPlatform.targetSpeed.y;\r\n        }\r\n    }\r\n\r\n    private checkBlink(): void {\r\n        if (!this.isBlinking) {\r\n            return;\r\n        }\r\n\r\n        this.blinkCounter++;\r\n\r\n        if (this.blinkCounter % this.blinkRate == 0) {\r\n            this.alpha == 1 ? this.alpha = 0 : this.alpha = 1;\r\n        }\r\n\r\n        if (this.blinkCounter > this.whiteEffectMaxCounter) {\r\n            this.whiteEffect.visible = false;\r\n        }\r\n\r\n        this.blinkingElapsedTime += this.game.time.elapsedMS;\r\n\r\n        if (this.blinkingElapsedTime > this.blinkingEndTime) {\r\n            this.blinkingElapsedTime = 0;\r\n            this.isBlinking = false;\r\n            this.alpha = 1;\r\n            this.blinkCounter = 0;\r\n        }\r\n    }\r\n\r\n    private checkShooting(): void {\r\n        if (this.isShooting) {\r\n            this.shootElapsedTime += this.game.time.elapsedMS;\r\n\r\n            if (this.shootElapsedTime > this.shootEndTime) {\r\n                this.shootElapsedTime = 0;\r\n                this.isShooting = false;\r\n            }\r\n        }\r\n    }\r\n\r\n    private checkSliding(): void {\r\n        if (this.isSliding) {\r\n            this.slideElapsedTime += this.game.time.elapsedMS;\r\n\r\n            if (this.slideElapsedTime > this.slideEndTime) {\r\n                this.slideElapsedTime = 0;\r\n                this.isSliding = false;\r\n            }\r\n\r\n            if (!this.isOnGround) {\r\n                if (this.slideElapsedTime < this.slideEndTime - 200) {\r\n                    this.slideElapsedTime = this.slideEndTime - 200;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    private checkInvincible(): void {\r\n        if (!this.isInvincible) {\r\n            return;\r\n        }\r\n\r\n        this.invincibleElapsedTime += this.game.time.elapsedMS;\r\n\r\n        if (this.invincibleElapsedTime > this.invincibleEndTime) {\r\n            this.invincibleElapsedTime = 0;\r\n            this.isInvincible = false;\r\n        }\r\n    }\r\n\r\n    private checkHurt(): void {\r\n        if (!this.isHurt) {\r\n            return;\r\n        }\r\n\r\n        this.hurtElapsedTime += this.game.time.elapsedMS;\r\n\r\n        if (this.hurtElapsedTime > this.hurtEndTime) {\r\n            this.hurtElapsedTime = 0;\r\n            this.isHurt = false;\r\n        }\r\n    }\r\n\r\n    private checkIdle(): void {\r\n        if (this.isOnGround && this.velocity.x == 0 && !this.isShooting) {\r\n            this.idleElapsedTime += this.game.time.elapsedMS;\r\n\r\n            if (this.idleElapsedTime > this.blinkStartTime) {\r\n                this.isIdle = true;\r\n            }\r\n        }\r\n        else {\r\n            this.isIdle = false;\r\n            this.idleElapsedTime = 0;\r\n        }\r\n    }\r\n\r\n    private checkFalling(): void {\r\n        if (!this.isOnGround && this.velocity.y > 0) {\r\n            this.isFalling = true;\r\n\r\n            // When falling we give the player some time to jump again; after that time jumping isnt possible while in air.\r\n            this.airJumpWindow = true;\r\n            this.jumpInAirElapsedTime += this.game.time.elapsedMS;\r\n\r\n            if (this.jumpInAirElapsedTime > this.jumpInAirEndTime) {\r\n                this.airJumpWindow = false;\r\n            }\r\n        }\r\n    }\r\n\r\n    private checkLadderPosition(): void {\r\n        if (!this.isOnLadder) {\r\n            return;\r\n        }\r\n\r\n        if (this.currLadder == null) {\r\n            return;\r\n        }\r\n\r\n        let bottomY = this.currLadder.bottomLeft.y; // bottom y pos of the ladder\r\n        let topY = this.currLadder.topLeft.y + 16 + 10; // top y pos of the ladder\r\n\r\n        // Player reached the bottom of the ladder; force them off.\r\n        if (this.getPosition().y > bottomY) {\r\n            this.isOnLadder = false;\r\n            this.currLadder = null;\r\n        }\r\n\r\n        // Player reached the top of the ladder; force them off.\r\n        if (this.getPosition().y < topY) {\r\n            this.getPosition().y = this.currLadder.topLeft.y + 16;\r\n            this.isOnLadder = false;\r\n            this.currLadder = null;\r\n            this.targetSpeed.y = 0;\r\n        }\r\n    }\r\n\r\n    private checkIfDisrupted(): void {\r\n        if (!this.isDisrupted) {\r\n            return;\r\n        }\r\n\r\n        this.disruptionElapsedTime += this.game.time.elapsedMS;\r\n\r\n        if (this.disruptionElapsedTime > this.disruptionEndTime) {\r\n            this.regainControl();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Using the current position moves the rays a frame even though the player may be running into a wall. By using\r\n     * previous position the rays don't move for that frame. They use the previous frame. Think about it, when the player\r\n     * is running into a wall, its 'bounds' should not move.\r\n     */\r\n    private castRays(): void {\r\n        let centerX: number = this.getPosition().x;\r\n        let centerY: number = this.getPosition().y - this.hitbox.height * 0.5;\r\n\r\n        if (this.wallContact.left || this.wallContact.right) {\r\n            centerX = this.previousPosition.x;\r\n        }\r\n\r\n        // cast ground rays\r\n        this.midGroundCheck.start.x = centerX;\r\n        this.midGroundCheck.start.y = centerY;\r\n        this.midGroundCheck.end.x = centerX;\r\n        this.midGroundCheck.end.y = centerY + this.hitbox.height * 0.5 + this.skinWidth + 100;\r\n        this.leftGroundCheck.start.x = centerX - this.hitbox.width * 0.5 + 3;\r\n        this.leftGroundCheck.start.y = centerY;\r\n        this.leftGroundCheck.end.x = centerX - this.hitbox.width * 0.5 + 3;\r\n        this.leftGroundCheck.end.y = centerY + this.hitbox.height * 0.5 + this.skinWidth + 100;\r\n        this.rightGroundCheck.start.x = centerX + this.hitbox.width * 0.5 - 3;\r\n        this.rightGroundCheck.start.y = centerY;\r\n        this.rightGroundCheck.end.x = centerX + this.hitbox.width * 0.5 - 3;\r\n        this.rightGroundCheck.end.y = centerY + this.hitbox.height * 0.5 + this.skinWidth + 100;\r\n\r\n        // cast ceil rays\r\n        this.midCeilCheck.start.x = centerX;\r\n        this.midCeilCheck.start.y = centerY;\r\n        this.midCeilCheck.end.x = centerX;\r\n        this.midCeilCheck.end.y = centerY - this.hitbox.height * 0.5 - this.skinWidth;\r\n        this.leftCeilCheck.start.x = centerX - this.hitbox.width * 0.5 + 3;\r\n        this.leftCeilCheck.start.y = centerY;\r\n        this.leftCeilCheck.end.x = centerX - this.hitbox.width * 0.5 + 3;\r\n        this.leftCeilCheck.end.y = centerY - this.hitbox.height * 0.5 - this.skinWidth;\r\n        this.rightCeilCheck.start.x = centerX + this.hitbox.width * 0.5 - 3;\r\n        this.rightCeilCheck.start.y = centerY;\r\n        this.rightCeilCheck.end.x = centerX + this.hitbox.width * 0.5 - 3;\r\n        this.rightCeilCheck.end.y = centerY - this.hitbox.height * 0.5 - this.skinWidth;\r\n\r\n        // cast left rays\r\n        let offsetY: number = 8;\r\n        this.leftCheck1.start.x = centerX;\r\n        this.leftCheck1.start.y = centerY - offsetY;\r\n        this.leftCheck1.end.x = centerX - this.hitbox.width * 0.5 - this.skinWidth;\r\n        this.leftCheck1.end.y = centerY - offsetY;\r\n        this.leftCheck2.start.x = centerX;\r\n        this.leftCheck2.start.y = centerY + offsetY;\r\n        this.leftCheck2.end.x = centerX - this.hitbox.width * 0.5 - this.skinWidth;\r\n        this.leftCheck2.end.y = centerY + offsetY;\r\n\r\n        // cast right rays\r\n        offsetY = 8;\r\n        this.rightCheck1.start.x = centerX;\r\n        this.rightCheck1.start.y = centerY - offsetY;\r\n        this.rightCheck1.end.x = centerX + this.hitbox.width * 0.5 + this.skinWidth;\r\n        this.rightCheck1.end.y = centerY - offsetY;\r\n        this.rightCheck2.start.x = centerX;\r\n        this.rightCheck2.start.y = centerY + offsetY;\r\n        this.rightCheck2.end.x = centerX + this.hitbox.width * 0.5 + this.skinWidth;\r\n        this.rightCheck2.end.y = centerY + offsetY;\r\n    }\r\n\r\n    private showDebugRays(): void {\r\n        // this.pGraphicsDebug.lineStyle(1, 0);\r\n\r\n        // this.groundRays.forEach((ray) => {\r\n        //     this.pGraphicsDebug.moveTo(ray.start.x, ray.start.y);\r\n        //     this.pGraphicsDebug.lineTo(ray.end.x, ray.end.y);\r\n        // });\r\n\r\n        // this.ceilRays.forEach((ray) => {\r\n        //     this.pGraphicsDebug.moveTo(ray.start.x, ray.start.y);\r\n        //     this.pGraphicsDebug.lineTo(ray.end.x, ray.end.y);\r\n        // });\r\n\r\n        // this.leftRays.forEach((ray) => {\r\n        //     this.pGraphicsDebug.moveTo(ray.start.x, ray.start.y);\r\n        //     this.pGraphicsDebug.lineTo(ray.end.x, ray.end.y);\r\n        // });\r\n\r\n        // this.rightRays.forEach((ray) => {\r\n        //     this.pGraphicsDebug.moveTo(ray.start.x, ray.start.y);\r\n        //     this.pGraphicsDebug.lineTo(ray.end.x, ray.end.y);\r\n        // });\r\n    }\r\n\r\n    private jumpOnGround(): void {\r\n        this.targetSpeed.y = -this.maxJumpVelocity;\r\n        this.isOnGround = false;\r\n        this.isJumping = true;\r\n        this.isFalling = false;\r\n    }\r\n\r\n    private jumpInAir(): void {\r\n        // The player can only jump in the air when walking off a platform.\r\n        if (this.canJumpInAir && !this.isJumping && this.airJumpWindow) {\r\n            this.jumpOnGround();\r\n        }\r\n    }\r\n\r\n    private jumpOnLadder(): void {\r\n        this.isOnLadder = false;\r\n        this.currLadder = null;\r\n    }\r\n\r\n}","import { World } from './world'\r\nimport { TagType } from './konstants'\r\nimport { EntityType } from './konstants'\r\nimport { Surface } from './world'\r\n\r\nexport abstract class Entity extends Phaser.Sprite {\r\n\r\n    public destroyed: Phaser.Signal = new Phaser.Signal();\r\n    public currPosition: Phaser.Point = new Phaser.Point();\r\n    public velocity: Phaser.Point = new Phaser.Point();\r\n    public hitbox: any; // rectangle, circle, or polygon\r\n    public hitboxOffset: Phaser.Point = new Phaser.Point();\r\n    public isShielded: boolean = false;\r\n    public contactDamage: number = 1;\r\n    public enabled: boolean = true;\r\n\r\n    constructor(public myWorld: World, public tag: TagType, public myEntityType: EntityType, game: Phaser.Game, x: number, y: number, key?: string | Phaser.RenderTexture | Phaser.BitmapData | PIXI.Texture, frame?: string | number) {\r\n        super(game, x, y, key, frame);\r\n    }\r\n\r\n    manualUpdate(): void { }\r\n    takeDamage(damage: number, damageDir: Phaser.Point = new Phaser.Point(0, 0)): void { }\r\n    checkSurfaceCollisions(surfaces: Array<Surface>): void { }\r\n\r\n    public setHitboxAsRect(x: number, y: number, width: number, height: number,\r\n        offsetX: number, offsetY: number): void {\r\n        this.hitbox = new Phaser.Rectangle(x, y, width, height);\r\n        this.hitboxOffset.x = offsetX;\r\n        this.hitboxOffset.y = offsetY;\r\n    }\r\n\r\n    public enable(): void {\r\n        this.enabled = true;\r\n        this.visible = true;\r\n    }\r\n\r\n    public disable(): void {\r\n        this.enabled = false;\r\n        this.visible = false;\r\n    }\r\n\r\n    public getVelocity(): Phaser.Point {\r\n        return this.velocity;\r\n    }\r\n\r\n    public setVelocity(x: number, y: number): void {\r\n        this.velocity.x = x;\r\n        this.velocity.y = y;\r\n    }\r\n\r\n    public getPosition(): Phaser.Point {\r\n        return this.currPosition;\r\n    }\r\n\r\n    public getFacingDirection(): number {\r\n        return this.scale.x >= 0 ? 1 : -1;\r\n    }\r\n\r\n    public setFacingDirection(dir: number): void {\r\n        this.scale.x = dir;\r\n    }\r\n\r\n    public updateRect(): void {\r\n        this.hitbox.x = this.getPosition().x + this.hitboxOffset.x;\r\n        this.hitbox.y = this.getPosition().y + this.hitboxOffset.y;\r\n    }\r\n\r\n    public togglePause(): void {\r\n        if (!this.animations.currentAnim) {\r\n            return;\r\n        }\r\n\r\n        this.animations.currentAnim.paused = !this.animations.currentAnim.paused;\r\n    }\r\n\r\n    public toggleVisibility(): void {\r\n        this.visible = !this.visible;\r\n    }\r\n}","import { RayIntersection } from './rayIntersection'\r\nimport { Ray, RayType } from './ray'\r\nimport { RayCollision } from './rayCollision'\r\nimport { Polygon } from './polygon'\r\nimport { ShapeCollision } from './shapeCollision'\r\nimport { Vector2 } from './vector2'\r\n\r\nexport class SAT2D {\r\n    private static tempRayIntersection: RayIntersection = new RayIntersection();\r\n    private static tmp1 = new ShapeCollision();\r\n    private static tmp2 = new ShapeCollision();\r\n\r\n    /**\r\n     * \r\n     * @param {Ray} ray \r\n     * @param {Polygon} polygon \r\n     * @param {RayCollision} into \r\n     * @return {RayCollision}\r\n     */\r\n    static testRayVsPolygon(ray: Ray, polygon: Polygon, into: RayCollision) {\r\n\r\n        var min_u = Number.POSITIVE_INFINITY;\r\n        var max_u = Number.NEGATIVE_INFINITY;\r\n\r\n        var startX = ray.start.x;\r\n        var startY = ray.start.y;\r\n        var deltaX = ray.end.x - startX;\r\n        var deltaY = ray.end.y - startY;\r\n\r\n        var verts = polygon.getTransformedVertices();\r\n        var v1 = verts[verts.length - 1];\r\n        var v2 = verts[0];\r\n\r\n        var ud = (v2.y - v1.y) * deltaX - (v2.x - v1.x) * deltaY;\r\n        var ua = SAT2D.rayU(ud, startX, startY, v1.x, v1.y, v2.x - v1.x, v2.y - v1.y);\r\n        var ub = SAT2D.rayU(ud, startX, startY, v1.x, v1.y, deltaX, deltaY);\r\n\r\n        if (ud != 0.0 && ub >= 0.0 && ub <= 1.0) {\r\n            if (ua < min_u) min_u = ua;\r\n            if (ua > max_u) max_u = ua;\r\n        }\r\n\r\n        for (var i = 1; i < verts.length; i++) {\r\n\r\n            v1 = verts[i - 1];\r\n            v2 = verts[i];\r\n\r\n            ud = (v2.y - v1.y) * deltaX - (v2.x - v1.x) * deltaY;\r\n            ua = SAT2D.rayU(ud, startX, startY, v1.x, v1.y, v2.x - v1.x, v2.y - v1.y);\r\n            ub = SAT2D.rayU(ud, startX, startY, v1.x, v1.y, deltaX, deltaY);\r\n\r\n            if (ud != 0.0 && ub >= 0.0 && ub <= 1.0) {\r\n                if (ua < min_u) min_u = ua;\r\n                if (ua > max_u) max_u = ua;\r\n            }\r\n\r\n        } //each vert\r\n\r\n        var valid = false;\r\n        switch (ray.infinite) {\r\n            case RayType.not_infinite: // not infinite\r\n                valid = (min_u >= 0.0 && min_u <= 1.0);\r\n                break;\r\n\r\n            case RayType.infinite: // infinite\r\n                valid = (min_u != Number.POSITIVE_INFINITY);\r\n                break;\r\n\r\n            case RayType.infinite_from_start: // infinite from start\r\n                valid = (min_u != Number.POSITIVE_INFINITY && min_u >= 0.0);\r\n                break;\r\n        }\r\n\r\n        if (valid) {\r\n            into = (into == null) ? new RayCollision() : into.reset();\r\n            into.shape = polygon;\r\n            into.ray = ray;\r\n            into.start = min_u;\r\n            into.end = max_u;\r\n            return into;\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param {Ray} ray1 \r\n     * @param {Ray} ray2 \r\n     * @param {RayIntersection} into \r\n     * @return {RayIntersection}\r\n     */\r\n    static testRayVsRay(ray1: Ray, ray2: Ray, into: RayIntersection): RayIntersection {\r\n        let delta1X: number = ray1.end.x - ray1.start.x;\r\n        let delta1Y: number = ray1.end.y - ray1.start.y;\r\n        let delta2X: number = ray2.end.x - ray2.start.x;\r\n        let delta2Y: number = ray2.end.y - ray2.start.y;\r\n        let diffX: number = ray1.start.x - ray2.start.x;\r\n        let diffY: number = ray1.start.y - ray2.start.y;\r\n        let ud: number = delta2Y * delta1X - delta2X * delta1Y;\r\n\r\n        if (ud == 0.0) return null;\r\n\r\n        let u1: number = (delta2X * diffY - delta2Y * diffX) / ud;\r\n        let u2: number = (delta1X * diffY - delta1Y * diffX) / ud;\r\n\r\n        // :todo: ask if ray hit condition difference is intentional (> 0 and not >= 0 like other checks)\r\n        let valid1: boolean = false;\r\n        switch (ray1.infinite) {\r\n            case RayType.not_infinite:\r\n                valid1 = (u1 > 0.0 && u1 <= 1.0);\r\n                break;\r\n\r\n            case RayType.infinite:\r\n                valid1 = true;\r\n                break;\r\n\r\n            case RayType.infinite_from_start:\r\n                valid1 = u1 > 0.0;\r\n                break;\r\n        }\r\n\r\n        var valid2 = false;\r\n        switch (ray2.infinite) {\r\n            case RayType.not_infinite:\r\n                valid2 = (u2 > 0.0 && u2 <= 1.0);\r\n                break;\r\n\r\n            case RayType.infinite:\r\n                valid2 = true;\r\n                break;\r\n\r\n            case RayType.infinite_from_start:\r\n                valid2 = u2 > 0.0;\r\n                break;\r\n        }\r\n\r\n        if (valid1 && valid2) {\r\n            into = (into == null) ? SAT2D.tempRayIntersection : into.reset();\r\n            into.ray1 = ray1;\r\n            into.ray2 = ray2;\r\n            into.u1 = u1;\r\n            into.u2 = u2;\r\n            return into;\r\n\r\n        } //both valid \r\n\r\n        return null;\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param {Polygon} polygon1 \r\n     * @param {Polygon} polygon2 \r\n     * @param {ShapeCollision} into \r\n     * @param {Bool} flip \r\n     * @return {ShapeCollision}\r\n     */\r\n    static testPolygonVsPolygon(polygon1: Polygon, polygon2: Polygon, into: ShapeCollision, flip = false) {\r\n        into = (into == null) ? new ShapeCollision() : into.reset();\r\n\r\n        let tmp1 = SAT2D.tmp1;\r\n        let tmp2 = SAT2D.tmp2;\r\n\r\n        if (SAT2D.checkPolygons(polygon1, polygon2, tmp1, flip) == null) {\r\n            return null;\r\n        }\r\n\r\n        if (SAT2D.checkPolygons(polygon2, polygon1, tmp2, !flip) == null) {\r\n            return null;\r\n        }\r\n\r\n        var result = null, other = null;\r\n        if (Math.abs(tmp1.overlap) < Math.abs(tmp2.overlap)) {\r\n            result = tmp1;\r\n            other = tmp2;\r\n        }\r\n        else {\r\n            result = tmp2;\r\n            other = tmp1;\r\n        }\r\n\r\n        result.otherOverlap = other.overlap;\r\n        result.otherSeparationX = other.separationX;\r\n        result.otherSeparationY = other.separationY;\r\n        result.otherUnitVectorX = other.unitVectorX;\r\n        result.otherUnitVectorY = other.unitVectorY;\r\n\r\n        into.copy_from(result);\r\n        result = other = null;\r\n\r\n        return into;\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param {Polygon} polygon1 \r\n     * @param {Polygon} polygon2 \r\n     * @param {ShapeCollision} into \r\n     * @param {Bool} flip \r\n     * @return {ShapeCollision}\r\n     */\r\n    static checkPolygons(polygon1: Polygon, polygon2: Polygon, into: ShapeCollision, flip: boolean) {\r\n        into.reset();\r\n\r\n        var offset = 0.0, test1 = 0.0, test2 = 0.0, testNum = 0.0;\r\n        var min1 = 0.0, max1 = 0.0, min2 = 0.0, max2 = 0.0;\r\n        var closest = 0x3FFFFFFF;\r\n\r\n        var axisX = 0.0;\r\n        var axisY = 0.0;\r\n        var verts1 = polygon1.getTransformedVertices();\r\n        var verts2 = polygon2.getTransformedVertices();\r\n\r\n        // loop to begin projection\r\n        for (var i = 0; i < verts1.length; i++) {\r\n\r\n            axisX = SAT2D.findNormalAxisX(verts1, i);\r\n            axisY = SAT2D.findNormalAxisY(verts1, i);\r\n            var aLen = SAT2D.vec_length(axisX, axisY);\r\n            axisX = SAT2D.vec_normalize(aLen, axisX);\r\n            axisY = SAT2D.vec_normalize(aLen, axisY);\r\n\r\n            // project polygon1\r\n            min1 = SAT2D.vec_dot(axisX, axisY, verts1[0].x, verts1[0].y);\r\n            max1 = min1;\r\n\r\n            for (var j = 0; j < verts1.length; j++) {\r\n                testNum = SAT2D.vec_dot(axisX, axisY, verts1[j].x, verts1[j].y);\r\n                if (testNum < min1) min1 = testNum;\r\n                if (testNum > max1) max1 = testNum;\r\n            }\r\n\r\n            // project polygon2\r\n            min2 = SAT2D.vec_dot(axisX, axisY, verts2[0].x, verts2[0].y);\r\n            max2 = min2;\r\n\r\n            for (var j = 0; j < verts2.length; j++) {\r\n                testNum = SAT2D.vec_dot(axisX, axisY, verts2[j].x, verts2[j].y);\r\n                if (testNum < min2) min2 = testNum;\r\n                if (testNum > max2) max2 = testNum;\r\n            }\r\n\r\n            test1 = min1 - max2;\r\n            test2 = min2 - max1;\r\n\r\n            if (test1 > 0 || test2 > 0) {\r\n                return null;\r\n            }\r\n\r\n            var distMin = -(max2 - min1);\r\n            if (flip) distMin *= -1;\r\n\r\n            if (Math.abs(distMin) < closest) {\r\n                into.unitVectorX = axisX;\r\n                into.unitVectorY = axisY;\r\n                into.overlap = distMin;\r\n                closest = Math.abs(distMin);\r\n            }\r\n        }\r\n\r\n        into.shape1 = flip ? polygon2 : polygon1;\r\n        into.shape2 = flip ? polygon1 : polygon2;\r\n        into.separationX = -into.unitVectorX * into.overlap;\r\n        into.separationY = -into.unitVectorY * into.overlap;\r\n\r\n        if (flip) {\r\n            into.unitVectorX = -into.unitVectorX;\r\n            into.unitVectorY = -into.unitVectorY;\r\n        }\r\n\r\n        return into;\r\n    }\r\n\r\n    /**\r\n     * Internal helper for ray overlaps.\r\n     * @param {Float} udelta \r\n     * @param {Float} aX \r\n     * @param {Float} aY \r\n     * @param {Float} bX \r\n     * @param {Float} bY \r\n     * @param {Float} dX \r\n     * @param {Float} dY \r\n     * @return {Float}\r\n     */\r\n    static rayU(udelta: number, aX: number, aY: number, bX: number, bY: number, dX: number, dY: number) {\r\n        return (dX * (aY - bY) - dY * (aX - bX)) / udelta;\r\n    }\r\n\r\n    static findNormalAxisX(verts: Array<Vector2>, index: number) {\r\n        var v2 = (index >= verts.length - 1) ? verts[0] : verts[index + 1];\r\n        return -(v2.y - verts[index].y);\r\n    }\r\n\r\n    static findNormalAxisY(verts: Array<Vector2>, index: number) {\r\n        var v2 = (index >= verts.length - 1) ? verts[0] : verts[index + 1];\r\n        return (v2.x - verts[index].x);\r\n    }\r\n\r\n    static vec_length(x: number, y: number) {\r\n        return Math.sqrt(SAT2D.vec_lengthSq(x, y))\r\n    }\r\n\r\n    static vec_lengthSq(x: number, y: number) {\r\n        return x * x + y * y;\r\n    }\r\n\r\n    static vec_normalize(length: number, value: number) {\r\n        return value / length;\r\n    }\r\n\r\n    static vec_dot(x1: number, y1: number, x2: number, y2: number) {\r\n        return x1 * x2 + y1 * y2;\r\n    }\r\n}\r\n\r\n","import { Ray } from './ray'\r\n\r\nexport class RayIntersection {\r\n\r\n    ray1: Ray = null; // The first ray in the test\r\n    ray2: Ray = null; // The second ray in the test\r\n    u1: number = 0; // u value for ray1.\r\n    u2: number = 0; // u value for ray2.\r\n\r\n    public reset(): RayIntersection {\r\n        this.ray1 = null;\r\n        this.ray2 = null;\r\n        this.u1 = 0;\r\n        this.u2 = 0;\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * @param {RayIntersection} other \r\n     */\r\n    public copy_from(other: RayIntersection): void {\r\n        this.ray1 = other.ray1;\r\n        this.ray2 = other.ray2;\r\n        this.u1 = other.u1;\r\n        this.u2 = other.u2;\r\n    }\r\n\r\n    public clone(): RayIntersection {\r\n        let clone: RayIntersection = new RayIntersection();\r\n        clone.copy_from(this);\r\n        return clone;\r\n    }\r\n}","import { Vector2 } from './vector2'\r\n\r\nexport enum RayType {\r\n    not_infinite = 'not_infinite',\r\n    infinite = 'infinite',\r\n    infinite_from_start = 'infinite_from_start',\r\n}\r\n\r\nexport class Ray {\r\n\r\n    start: Vector2;\r\n    end: Vector2;\r\n    dir: Vector2;\r\n    infinite: RayType;\r\n    color: number;\r\n    alpha: number;\r\n\r\n    /**\r\n     * Create a new ray with the start and end point,\r\n     * which determine the direction of the ray, and optionally specifying\r\n     * that this ray is infinite in some way.\r\n     * @param {Vector2} start \r\n     * @param {Vector2} end \r\n     * @param {Int} infinite \r\n     */\r\n    constructor(start: Vector2, end: Vector2, infinite: RayType) {\r\n        this.start = start; // The start point of the ray.\r\n        this.end = end;     // The end point of the ray.\r\n\r\n        /**\r\n         * The direction of the ray.\r\n         * Returns a cached vector, so modifying it will affect this instance.\r\n         * Updates only when the dir value is accessed.\r\n         */\r\n        this.dir = new Vector2(this.end.x - this.start.x, this.end.y - this.start.y);\r\n\r\n        /**\r\n         * The line is a fixed length between the start and end points.\r\n         * 0 = not infinite\r\n         * \r\n         * The line is infinite from it's starting point. \r\n         * 1 = infinite\r\n         * \r\n         * The line is infinite in both directions from it's starting point.\r\n         * 2 = infinite from start\r\n         */\r\n        this.infinite = infinite == null ? RayType.not_infinite : infinite; // Whether or not the ray is infinite.\r\n        this.color = 0x000000;\r\n        this.alpha = 0.5;\r\n    }\r\n\r\n    public recalculateDir():void{\r\n        this.dir = new Vector2(this.end.x - this.start.x, this.end.y - this.start.y);\r\n    }\r\n}","export class Vector2 {\r\n    x: number;\r\n    y: number;\r\n\r\n    constructor(x: number = 0, y: number = 0) {\r\n        this.x = x;\r\n        this.y = y;\r\n    }\r\n}","import { Shape } from './shape'\r\nimport { Ray, RayType } from './ray'\r\n\r\nexport class RayCollision {\r\n    public shape: Shape;\r\n    public ray: Ray;\r\n    public start: number;\r\n    public end: number;\r\n\r\n    constructor() {\r\n        this.shape = new Shape(0, 0); // Shape the intersection was with.\r\n        this.ray = new Ray(null, null, RayType.not_infinite); // The ray involved in the intersection.\r\n        this.start = 0; // Distance along ray that the intersection start at.\r\n        this.end = 0; // Distance along ray that the intersection ended at.\r\n    }\r\n\r\n    public reset() {\r\n        this.shape = null;\r\n        this.ray = null;\r\n        this.start = 0;\r\n        this.end = 0;\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * @param {RayCollision} other \r\n     */\r\n    public copy_from(other: RayCollision) {\r\n        this.shape = other.shape;\r\n        this.ray = other.ray;\r\n        this.start = other.start;\r\n        this.end = other.end;\r\n    }\r\n\r\n    public clone() {\r\n        var clone = new RayCollision();\r\n        clone.copy_from(this);\r\n        return clone;\r\n    }\r\n}\r\n\r\n/**\r\n * A static extension class helper for RayCollision\r\n */\r\nclass RayCollisionHelper {\r\n    /**\r\n     * Convenience: get the start X point along the line.\r\n     * It is possible the start point is not along the ray itself, when\r\n     * the `start` value is < 0, the ray start is inside the shape.\r\n     * If you need that point, use the ray.start point,\r\n     * i.e `if(data.start < 0) point = data.ray.start; else point = data.hitStart(); \r\n     * @param {RayCollision} data \r\n     * @return {Float}\r\n     */\r\n    static hitStartX(data: RayCollision) {\r\n        return data.ray.start.x + (data.ray.dir.x * data.start);\r\n    }\r\n\r\n    /**\r\n     * Convenience: get the start Y point along the line \r\n     * @param {RayCollision} data \r\n     * @return {Float}\r\n     */\r\n    static hitStartY(data:RayCollision) {\r\n        return data.ray.start.y + (data.ray.dir.y * data.start);\r\n    }\r\n\r\n    /**\r\n     * Convenience: get the end X point along the line.\r\n     * Note that it is possible that this extends beyond the length of the ray,\r\n     * when RayCollision `end` value is > 1, i.e the end of the ray is inside the shape area.\r\n     * If you need that point, you would use ray.end as the point,\r\n     * i.e `if(data.end > 1) point = data.ray.end; else point = data.hitEnd();`\r\n     * @param {RayCollision} data \r\n     * @return {Float}\r\n     */\r\n    static hitEndX(data:RayCollision) {\r\n        return data.ray.end.x + (data.ray.dir.x * data.end);\r\n    }\r\n\r\n    /**\r\n     * Convenience: get the end point along the line.\r\n     * Note that it is possible that this extends beyond the length of the ray,\r\n     * when RayCollision `end` value is > 1, i.e the end of the ray is inside the shape area.\r\n     * If you need that point, you would use ray.end as the point,\r\n     * i.e `if(data.end > 1) point = data.ray.end; else point = data.hitEnd();`\r\n     * @param {RayCollision} data \r\n     * @return {Float}\r\n     */\r\n    static hitEndY(data:RayCollision) {\r\n        return data.ray.end.y + (data.ray.dir.y * data.end);\r\n    }\r\n}","import { Vector2 } from './vector2'\r\nimport { ShapeCollision } from './shapeCollision'\r\nimport { Polygon } from './polygon'\r\n\r\nexport class Shape {\r\n\r\n    active: boolean = true;                   // The state of this shape, if inactive can be ignored in results\r\n    name: string = \"\";                        // The name of this shape, to help in debugging\r\n    data: any;                                  // A generic data object where you can store anything you want, for later use\r\n    // tags = []                                // A list of tags to use for marking shapes with data for later use, by key/value\r\n    position: Vector2 = new Vector2();    // The position of this shape\r\n    x: number = 0;                            // The x position of this shape\r\n    y: number = 0;                            // The y position of this shape\r\n    rotation: number = 0;                   // The rotation of this shape, in degrees\r\n    scaleX: number = 1;                     // The scale in the x direction of this shape\r\n    scaleY: number = 1;                     // The scale in the y direction of this shape\r\n    color: number = 0x00ff00;\r\n    alpha: number = 0.5;\r\n\r\n    constructor(x: number, y: number) {\r\n        this.x = x;\r\n        this.y = y;\r\n        this.position.x = x;\r\n        this.position.y = y;\r\n    }\r\n\r\n    /**\r\n     * @param {Shape} shape \r\n     * @param {ShapeCollision} into \r\n     * @return {ShapeCollision}\r\n     */\r\n    test(shape: Shape, into: ShapeCollision) { }\r\n\r\n    /**\r\n     * \r\n     * @param {Circle} circle \r\n     * @param {ShapeCollision} into \r\n     * @param {Bool} flip \r\n     * @return {ShapeCollision}\r\n     */\r\n    // testCircle(circle:Circle, into:ShapeCollision, flip = false) {\r\n\r\n    // }\r\n\r\n    /**\r\n     * \r\n     * @param {Polygon} polygon \r\n     * @param {ShapeCollision} into \r\n     * @param {Bool} flip \r\n     * @return {ShapeCollision}\r\n     */\r\n    testPolygon(polygon: Polygon, into: ShapeCollision, flip = false) { }\r\n\r\n    /**\r\n     * \r\n     * @param {Ray} ray \r\n     * @param {RayCollision} into \r\n     * @return {RayCollision}\r\n     */\r\n    // testRay(ray, into) {\r\n\r\n    // }\r\n}","import { Shape } from './shape'\r\n\r\n/**\r\n * Collision data, obtained by testing two shapes for a collision.\r\n */\r\nexport class ShapeCollision {\r\n\r\n    overlap: number = 0; // The overlap amount\r\n    separationX: number = 0; // X component of the separation vector, when subtracted from shape 1 will separate it from shape 2\r\n    separationY: number = 0; // Y component of the separation vector, when subtracted from shape 1 will separate it from shape 2\r\n    unitVectorX: number = 0; // X component of the unit vector, on the axis of the collision (i.e the normal of the face that was collided with)\r\n    unitVectorY: number = 0; // Y component of the unit vector, on the axis of the collision (i.e the normal of the face that was collided with)\r\n    otherOverlap: number = 0;\r\n    otherSeparationX: number = 0;\r\n    otherSeparationY: number = 0;\r\n    otherUnitVectorX: number = 0;\r\n    otherUnitVectorY: number = 0;\r\n    shape1: Shape = null; // The shape that was tested\r\n    shape2: Shape = null; // The shape that shape1 was tested against\r\n\r\n    reset(): ShapeCollision {\r\n        this.shape1 = null;\r\n        this.shape2 = null;\r\n        this.overlap = 0;\r\n        this.separationX = 0;\r\n        this.separationY = 0;\r\n        this.unitVectorX = 0;\r\n        this.unitVectorY = 0;\r\n        this.otherOverlap = 0;\r\n        this.otherSeparationX = 0;\r\n        this.otherSeparationY = 0;\r\n        this.otherUnitVectorX = 0;\r\n        this.otherUnitVectorY = 0;\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param {ShapeCollision} _other \r\n     */\r\n    copy_from(_other: ShapeCollision) {\r\n        this.overlap = _other.overlap;\r\n        this.separationX = _other.separationX;\r\n        this.separationY = _other.separationY;\r\n        this.unitVectorX = _other.unitVectorX;\r\n        this.unitVectorY = _other.unitVectorY;\r\n        this.otherOverlap = _other.otherOverlap;\r\n        this.otherSeparationX = _other.otherSeparationX;\r\n        this.otherSeparationY = _other.otherSeparationY;\r\n        this.otherUnitVectorX = _other.otherUnitVectorX;\r\n        this.otherUnitVectorY = _other.otherUnitVectorY;\r\n        this.shape1 = _other.shape1;\r\n        this.shape2 = _other.shape2;\r\n    }\r\n}","import { Entity } from './entity'\r\n\r\nexport class Helper {\r\n    /**\r\n     * The direction from a to b. The vector points towards b (b - a).\r\n     * @param a - 1st entity.\r\n     * @param b - 2nd entity.\r\n     * @returns {Phaser.Point}\r\n     */\r\n    static directionTo(a: Entity, b: Entity): Phaser.Point {\r\n        let dx: number = b.getPosition().x - a.getPosition().x;\r\n        let dy: number = b.getPosition().y - a.getPosition().y;\r\n        let distance: number = Math.sqrt(dx * dx + dy * dy);\r\n        return new Phaser.Point(dx / distance, dy / distance);\r\n    }\r\n\r\n    static directionTo2(a: Phaser.Point, b: Phaser.Point): Phaser.Point {\r\n        let dx: number = b.x - a.x;\r\n        let dy: number = b.y - a.y;\r\n        let distance: number = Math.sqrt(dx * dx + dy * dy);\r\n        return new Phaser.Point(dx / distance, dy / distance);\r\n    }\r\n\r\n    /**\r\n     * The distance from a to b.\r\n     * @param a - 1st entity.\r\n     * @param b - 2nd entity.\r\n     * @returns {number}\r\n     */\r\n    static distanceTo(a: Entity, b: Entity): number {\r\n        let dx: number = b.getPosition().x - a.getPosition().x;\r\n        let dy: number = b.getPosition().y - a.getPosition().y;\r\n        return Math.sqrt(dx * dx + dy * dy);\r\n    }\r\n\r\n    static distanceTo2(a: Phaser.Point, b: Phaser.Point): number {\r\n        let dx: number = b.x - a.x;\r\n        let dy: number = b.y - a.y;\r\n        return Math.sqrt(dx * dx + dy * dy);\r\n    }\r\n\r\n    static distanceTo3(x1: number, y1: number, x2: number, y2: number): number {\r\n        return Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\r\n    }\r\n}","import { Konstants } from '../konstants'\r\nimport { TagType } from '../konstants'\r\nimport { AudioName } from '../konstants'\r\n\r\nexport enum MeterDirection {\r\n    Vertical = 'Vertical',\r\n    Horizontal = 'Horizontal',\r\n}\r\n\r\nexport class Meter {\r\n    public activateEnergyState: Phaser.Signal = new Phaser.Signal();\r\n    public deactivateEnergyState: Phaser.Signal = new Phaser.Signal();\r\n    public currEnergy: number = 28;\r\n    public totalEnergy: number = 28;\r\n    public isGivingEnergy: boolean = false; // HACK: True, if the meter is 'working', giving energy; prevent meter logic from overlapping when player picks up two energy items.\r\n    public restoreSpeed: number = 75;\r\n    public isVisible: boolean = true;\r\n    private background: Phaser.Sprite;\r\n    private singlePoint: Array<Phaser.Sprite> = new Array<Phaser.Sprite>();\r\n    private barHeight: number = 56;\r\n    private spacing: number = 2;\r\n    private energyTimer: Phaser.Timer = null;\r\n    private energyFillSoundTimer: Phaser.Timer = null;\r\n    private energyFillSound: Phaser.Sound = null;\r\n\r\n    constructor(private game: Phaser.Game, private x: number, private y: number, public direction: MeterDirection = MeterDirection.Vertical) {\r\n        this.direction == MeterDirection.Horizontal ? this.createHorizontalMeter() : this.createVerticalMeter();\r\n        this.energyFillSound = this.game.add.audio(AudioName.energy_fill);\r\n    }\r\n\r\n    private createHorizontalMeter(): void {\r\n        this.background = this.game.add.sprite(this.x, this.y, Konstants.meter, 'horizontal_healthbar_background');\r\n        this.background.fixedToCamera = true;\r\n        this.game.add.existing(this.background);\r\n\r\n        let tempSprite: Phaser.Sprite;\r\n        for (let i = this.totalEnergy - 1; i >= 0; i--) {\r\n            tempSprite = this.game.add.sprite(this.x + this.spacing * i, this.y, Konstants.meter, 'horizontal_healthbar_single');\r\n            tempSprite.fixedToCamera = true;\r\n            this.singlePoint.push(tempSprite);\r\n            this.game.add.existing(tempSprite);\r\n        }\r\n    }\r\n\r\n    private createVerticalMeter(): void {\r\n        this.background = this.game.add.sprite(this.x, this.y + 1, Konstants.meter, 'vertical_healthbar_background');\r\n        this.background.fixedToCamera = true;\r\n        this.game.add.existing(this.background);\r\n\r\n        let tempSprite: Phaser.Sprite;\r\n        for (let i = this.totalEnergy - 1; i >= 0; i--) {\r\n            tempSprite = this.game.add.sprite(this.x, this.y + (this.barHeight - (this.spacing * i)) - 2, Konstants.meter, 'vertical_healthbar_single');\r\n            tempSprite.fixedToCamera = true;\r\n            this.singlePoint.push(tempSprite);\r\n            this.game.add.existing(tempSprite);\r\n        }\r\n    }\r\n\r\n    public hide(): void {\r\n        this.isVisible = false;\r\n        this.background.visible = false;\r\n        this.singlePoint.forEach((sprite: Phaser.Sprite) => {\r\n            sprite.visible = false;\r\n        });\r\n    }\r\n\r\n    public show(): void {\r\n        this.isVisible = true;\r\n        this.background.visible = true;\r\n        this.background.bringToTop();\r\n\r\n        for (let i = 0; i < this.currEnergy; i++) {\r\n            this.singlePoint[this.totalEnergy - 1 - i].visible = true;\r\n            this.singlePoint[this.totalEnergy - 1 - i].bringToTop();\r\n        }\r\n    }\r\n\r\n    public takeOneEnergy(): void {\r\n        if (this.currEnergy < 0) {\r\n            this.currEnergy = 0;\r\n            return;\r\n        }\r\n\r\n        this.currEnergy--;\r\n\r\n        for (let i = 0; i <= this.singlePoint.length - 1; i++) {\r\n            if (this.singlePoint[i].visible) {\r\n                this.singlePoint[i].visible = false;\r\n                return;\r\n            }\r\n        }\r\n    }\r\n\r\n    public takeEnergy(amount: number): void {\r\n        let count: number = 0;\r\n\r\n        for (let i = 0; i <= amount; i++) {\r\n            this.takeOneEnergy();\r\n            count++;\r\n\r\n            if (count >= amount) {\r\n                return;\r\n            }\r\n        }\r\n    }\r\n\r\n    public restoreEnergy(amount: number): void {\r\n        this.isGivingEnergy = true;\r\n        this.activateEnergyState.dispatch();\r\n        this.energyTimer = this.game.time.create(true);\r\n        this.energyFillSoundTimer = this.game.time.create(true);\r\n        let count: number = 0;\r\n\r\n        this.energyTimer.loop(this.restoreSpeed, () => {\r\n            this.currEnergy++;\r\n\r\n            for (let i = this.singlePoint.length - 1; i >= 0; i--) {\r\n                if (!this.singlePoint[i].visible) {\r\n                    this.singlePoint[i].visible = true;\r\n                    this.singlePoint[i].bringToTop();\r\n                    break;\r\n                }\r\n            }\r\n\r\n            count++;\r\n            if (count >= amount || this.currEnergy >= this.totalEnergy) {\r\n                this.isGivingEnergy = false;\r\n                this.energyTimer.stop();\r\n                this.deactivateEnergyState.dispatch();\r\n                return;\r\n            }\r\n        }, this);\r\n\r\n        this.energyFillSoundTimer.loop(75, () => {\r\n            this.energyFillSound.play();\r\n            if (!this.isGivingEnergy) {\r\n                this.energyFillSoundTimer.stop();\r\n                return;\r\n            }\r\n        }, this);\r\n\r\n        this.energyTimer.start();\r\n        this.energyFillSoundTimer.start();\r\n    }\r\n\r\n    public setEnergy(value: number): void {\r\n        this.currEnergy = value;\r\n        let count: number = 0;\r\n\r\n        for (let i = 0; i < this.totalEnergy - value; i++) {\r\n            if (this.singlePoint[i].visible) {\r\n                this.singlePoint[i].visible = false;\r\n                count++;\r\n\r\n                if (count == value) {\r\n                    return;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    public reset(): void {\r\n        for (let i = 0; i <= this.singlePoint.length - 1; i++) {\r\n            this.singlePoint[i].visible = true;\r\n        }\r\n\r\n        this.currEnergy = this.totalEnergy;\r\n    }\r\n\r\n    private playEnergyFillSound(): void {\r\n        if (this.energyFillSound.isPlaying) {\r\n            return;\r\n        }\r\n\r\n        if (this.energyFillSound.isPlaying && this.energyFillSound.currentTime < 50) {\r\n            return;\r\n        }\r\n\r\n        this.energyFillSound.play();\r\n    }\r\n}","import { Input } from \"./input\";\r\nimport { Player } from \"./player\";\r\n\r\nexport class PlayerInput extends Input {\r\n\r\n    constructor(game: Phaser.Game) {\r\n        super(game);\r\n    }\r\n\r\n    public update(player: Player): void {\r\n        if (this.preventControl){\r\n            return;\r\n        }\r\n        \r\n        if(!player.alive){\r\n            return;\r\n        }\r\n\r\n        if(player.isHurt){\r\n            return;\r\n        }\r\n\r\n        if(player.isWarpingIn){\r\n            return;\r\n        }\r\n\r\n        if(player.isDisrupted){\r\n            return;\r\n        }\r\n\r\n        if (Input.leftKey.isDown) {\r\n            player.move(-player.horizontalSpeed, player.targetSpeed.y, -1);\r\n        }\r\n\r\n        if (Input.rightKey.isDown) {\r\n            player.move(player.horizontalSpeed, player.targetSpeed.y, 1);\r\n        }\r\n\r\n        if (!Input.leftKey.isDown && !Input.rightKey.isDown) {\r\n            player.move(0, player.targetSpeed.y, player.getFacingDirection());\r\n        }\r\n\r\n        if (Input.downKey.isDown) {\r\n            player.getOnLadder(false);\r\n            player.moveOnLadder(player.ladderSpeed);\r\n        }\r\n\r\n        if (Input.upKey.isDown) {\r\n            player.getOnLadder(true);\r\n            player.moveOnLadder(-player.ladderSpeed);\r\n        }\r\n\r\n        if (!Input.downKey.isDown && !Input.upKey.isDown) {\r\n            player.moveOnLadder(0);\r\n        }\r\n\r\n        if (Input.dKey.downDuration(1)) {\r\n            player.shoot();\r\n        }\r\n\r\n        if (Input.fKey.justDown) {\r\n            if (Input.downKey.isDown) {\r\n                player.slide();\r\n            }\r\n            else {\r\n                player.jump();\r\n            }\r\n        }\r\n\r\n        if (Input.fKey.justUp) {\r\n            player.jumpReleased();\r\n        }\r\n\r\n        if(Input.commaKey.justDown){\r\n            player.switchWeapon(-1);\r\n        }\r\n\r\n        if(Input.periodKey.justDown){\r\n            player.switchWeapon(1);\r\n        }\r\n    }\r\n}","import { Player } from \"./player\";\r\n\r\nexport class Input {\r\n\r\n    static leftKey: Phaser.Key;\r\n    static rightKey: Phaser.Key;\r\n    static upKey: Phaser.Key;\r\n    static downKey: Phaser.Key;\r\n    static spaceKey: Phaser.Key;\r\n    static eKey: Phaser.Key;\r\n    static oneKey: Phaser.Key;\r\n    static twoKey: Phaser.Key;\r\n    static threeKey: Phaser.Key;\r\n    static fourKey: Phaser.Key;\r\n    static commaKey: Phaser.Key;\r\n    static periodKey: Phaser.Key;\r\n    static wKey: Phaser.Key;\r\n    static aKey: Phaser.Key;\r\n    static sKey: Phaser.Key;\r\n    static dKey: Phaser.Key;\r\n    static fKey: Phaser.Key;\r\n    static pKey: Phaser.Key;\r\n    static qKey: Phaser.Key;\r\n    static rKey: Phaser.Key;\r\n    static zKey: Phaser.Key;\r\n\r\n    public preventControl: boolean = false;\r\n\r\n    constructor(private game: Phaser.Game) {\r\n        Input.leftKey = game.input.keyboard.addKey(Phaser.Keyboard.LEFT);\r\n        Input.rightKey = game.input.keyboard.addKey(Phaser.Keyboard.RIGHT);\r\n        Input.upKey = game.input.keyboard.addKey(Phaser.Keyboard.UP);\r\n        Input.downKey = game.input.keyboard.addKey(Phaser.Keyboard.DOWN);\r\n        Input.spaceKey = game.input.keyboard.addKey(Phaser.Keyboard.SPACEBAR);\r\n        Input.eKey = game.input.keyboard.addKey(Phaser.Keyboard.E);\r\n        Input.commaKey = game.input.keyboard.addKey(Phaser.Keyboard.COMMA);\r\n        Input.periodKey = game.input.keyboard.addKey(Phaser.Keyboard.PERIOD);\r\n        Input.oneKey = game.input.keyboard.addKey(Phaser.Keyboard.ONE);\r\n        Input.twoKey = game.input.keyboard.addKey(Phaser.Keyboard.TWO);\r\n        Input.threeKey = game.input.keyboard.addKey(Phaser.Keyboard.THREE);\r\n        Input.fourKey = game.input.keyboard.addKey(Phaser.Keyboard.FOUR);\r\n        Input.wKey = game.input.keyboard.addKey(Phaser.Keyboard.W);\r\n        Input.aKey = game.input.keyboard.addKey(Phaser.Keyboard.A);\r\n        Input.sKey = game.input.keyboard.addKey(Phaser.Keyboard.S);\r\n        Input.dKey = game.input.keyboard.addKey(Phaser.Keyboard.D);\r\n        Input.fKey = game.input.keyboard.addKey(Phaser.Keyboard.F);\r\n        Input.pKey = game.input.keyboard.addKey(Phaser.Keyboard.P);\r\n        Input.qKey = game.input.keyboard.addKey(Phaser.Keyboard.Q);\r\n        Input.rKey = game.input.keyboard.addKey(Phaser.Keyboard.R);\r\n        Input.zKey = game.input.keyboard.addKey(Phaser.Keyboard.Z);\r\n    }\r\n\r\n    public update(player: Player): void { }\r\n}","import { Graphics } from './graphics'\r\nimport { Player } from './player'\r\nimport { MegaManAnimations } from './player'\r\nimport { WeaponType } from './weapon/weapon'\r\nimport { LemonWeapon } from './weapon/lemonWeapon'\r\n\r\nexport class PlayerGraphics extends Graphics {\r\n\r\n    constructor(game: Phaser.Game) {\r\n        super(game);\r\n    }\r\n\r\n    public update(player: Player): void {\r\n        if (player.isDisrupted) {\r\n            player.animations.play(MegaManAnimations.lose_control);\r\n            return;\r\n        }\r\n\r\n        if (player.isWarpingIn) {\r\n            player.animations.play(MegaManAnimations.unpause_effect);\r\n            return;\r\n        }\r\n\r\n        if (player.isHurt) {\r\n            player.animations.play(MegaManAnimations.hurt);\r\n            return;\r\n        }\r\n\r\n        if (player.isOnLadder) {\r\n            if (player.isShooting) {\r\n                player.animations.play(MegaManAnimations.ladder_shoot);\r\n                return;\r\n            }\r\n\r\n            if (Math.abs(player.targetSpeed.y) > 0) {\r\n                player.animations.play(MegaManAnimations.ladder);\r\n                return;\r\n            }\r\n\r\n            if (player.targetSpeed.y == 0) {\r\n                player.animations.play(MegaManAnimations.ladder_idle);\r\n                return;\r\n            }\r\n        }\r\n\r\n        if (player.isOnGround) {\r\n            if (player.isRunning) {\r\n                if (player.isShooting) {\r\n                    if (player.getCurrentWeapon().type == WeaponType.MegaBuster ||\r\n                        player.getCurrentWeapon().type == WeaponType.IceMan ||\r\n                        player.getCurrentWeapon().type == WeaponType.FireMan ||\r\n                        player.getCurrentWeapon().type == WeaponType.ElecMan) {\r\n                        player.animations.play(MegaManAnimations.run_shoot);\r\n                    }\r\n                    else if (player.getCurrentWeapon().type == WeaponType.CutMan ||\r\n                        player.getCurrentWeapon().type == WeaponType.BombMan) {\r\n                        player.animations.play(MegaManAnimations.throw);\r\n                    }\r\n                }\r\n                else {\r\n                    player.animations.play(MegaManAnimations.run);\r\n                }\r\n            }\r\n\r\n            if (!player.isIdle && player.getVelocity().x == 0 && !player.isJumping && !player.isRunning && !player.isShooting) {\r\n                player.animations.play(MegaManAnimations.idle);\r\n            }\r\n\r\n            if (!player.isIdle && !player.isRunning && player.isShooting && !player.isJumping && player.animations.currentAnim.name != MegaManAnimations.idle_shoot) {\r\n                if (player.getCurrentWeapon().type == WeaponType.MegaBuster ||\r\n                    player.getCurrentWeapon().type == WeaponType.IceMan ||\r\n                    player.getCurrentWeapon().type == WeaponType.FireMan ||\r\n                    player.getCurrentWeapon().type == WeaponType.ElecMan) {\r\n                    player.animations.play(MegaManAnimations.idle_shoot);\r\n                }\r\n                else if (player.getCurrentWeapon().type == WeaponType.CutMan) {\r\n                    player.animations.play(MegaManAnimations.throw);\r\n                }\r\n            }\r\n\r\n            if (player.isIdle && player.animations.currentAnim.name != MegaManAnimations.blink) {\r\n                player.animations.play(MegaManAnimations.blink);\r\n            }\r\n\r\n            if (player.isSliding) {\r\n                player.animations.play(MegaManAnimations.slide);\r\n                return;\r\n            }\r\n\r\n            if (player.isOnMovingPlatform) {\r\n                if (!player.isRunning) {\r\n                    player.animations.play(MegaManAnimations.idle);\r\n                }\r\n\r\n                if (!player.isRunning && player.isShooting) {\r\n                    player.animations.play(MegaManAnimations.idle_shoot);\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            if (player.isJumping && player.isShooting && player.animations.currentAnim.name != MegaManAnimations.jump_shoot) {\r\n                player.animations.play(MegaManAnimations.jump_shoot);\r\n            }\r\n\r\n            if (player.isJumping && !player.isShooting && player.animations.currentAnim.name != MegaManAnimations.jump) {\r\n                player.animations.play(MegaManAnimations.jump);\r\n            }\r\n\r\n            if (player.isFalling && !player.isShooting) {\r\n                player.animations.play(MegaManAnimations.jump);\r\n            }\r\n        }\r\n    }\r\n}","import { Player } from './player'\r\nimport { Konstants } from './konstants'\r\n\r\nexport class Graphics {\r\n\r\n    game: Phaser.Game;\r\n\r\n    constructor(game: Phaser.Game) {\r\n        this.game = game;\r\n    }\r\n\r\n    public update(player: Player): void {\r\n\r\n    }\r\n}","import { Enemy } from './enemy'\r\nimport { World } from '../world'\r\nimport { EntityType, TagType, AudioName } from '../konstants'\r\nimport { Player } from '../player'\r\nimport { Entity } from '../entity'\r\nimport { Helper } from '../helper'\r\nimport { State } from '../fsm/state'\r\nimport { StateMachine } from '../fsm/stateMachine'\r\nimport { KeyedCollection } from '../util/mathutil'\r\nimport { MathUtil } from '../util/mathutil'\r\nimport { Frozen } from '../frozen'\r\nimport { fixedTime, fixedTimeMS } from '../main'\r\n\r\nenum BladerAnimations {\r\n    idle = 'idle',\r\n}\r\n\r\nexport class Blader extends Enemy {\r\n    public horizontalSpeed: number = 50;\r\n    public targetSpeed: Phaser.Point = new Phaser.Point(0, 0);\r\n    public targetPos: Phaser.Point = new Phaser.Point();\r\n    public afterTargetPos: Phaser.Point = new Phaser.Point();\r\n    public attackSpeed: number = 100; // todo: speed too high, blader overshoots the arrival position and jitters forever\r\n    public fsm: StateMachine;\r\n\r\n    constructor(myWorld: World, tag: TagType, myEntityType: EntityType, game: Phaser.Game, x: number, y: number, key: string, frame: string) {\r\n        super(myWorld, tag, myEntityType, game, x, y, key, frame);\r\n\r\n        this.getPosition().x = x;\r\n        this.getPosition().y = y;\r\n        this.position.x = this.getPosition().x;\r\n        this.position.y = this.getPosition().y;\r\n        this.anchor.setTo(0.5, 0.5);\r\n        this.smoothed = false;\r\n        this.setFacingDirection(1);\r\n        this.health = 1;\r\n        this.maxHealth = 1;\r\n\r\n        this.animations.add(BladerAnimations.idle, ['blader_01', 'blader_02'], 7, true, false);\r\n        this.animations.play(BladerAnimations.idle);\r\n\r\n        this.hitbox = new Phaser.Rectangle(this.getPosition().x, this.getPosition().y, 16, 16);\r\n        this.hitboxOffset.x = -this.hitbox.halfWidth;\r\n        this.hitboxOffset.y = -this.hitbox.halfHeight;\r\n        this.updateRect();\r\n\r\n        this.fsm = new StateMachine();\r\n        this.fsm.addState(BladerState.move, new BladerMoveState(this));\r\n        this.fsm.addState(BladerState.attack, new BladerAttackState(this));\r\n        this.fsm.addState(BladerState.goBackUp, new BladerGoBackUpkState(this));\r\n        this.fsm.changeState(BladerState.move);\r\n    }\r\n\r\n    public manualUpdate(): void {\r\n        // this.pGraphicsDebug.clear();\r\n\r\n        if (!this.alive) {\r\n            return;\r\n        }\r\n\r\n        this.frozen.update();\r\n        if (this.frozen.isFrozen) {\r\n            return;\r\n        }\r\n\r\n        this.fsm.currentState.update();\r\n\r\n        this.velocity.x = this.targetSpeed.x;\r\n        this.velocity.y = this.targetSpeed.y;\r\n\r\n        this.getPosition().x += this.velocity.x * fixedTime;\r\n        this.getPosition().y += this.velocity.y * fixedTime;\r\n\r\n        this.position.x = (this.getPosition().x + 0.5) | 0;\r\n        this.position.y = this.getPosition().y;\r\n\r\n        this.updateRect();\r\n    }\r\n\r\n    public takeDamage(damage: number): void {\r\n        if (this.isShielded) {\r\n            this.game.sound.play(AudioName.dink);\r\n            return;\r\n        }\r\n\r\n        if (this.health <= 0) {\r\n            return;\r\n        }\r\n\r\n        this.game.sound.play(AudioName.enemy_damage);\r\n        this.health -= damage;\r\n\r\n        if (this.health <= 0) {\r\n            this.health = 0;\r\n            this.myWorld.dropManager.dropPowerUp(this.getPosition().x, this.getPosition().y);\r\n            this.myWorld.createExplosionEffect(this.getPosition().x, this.getPosition().y);\r\n            this.kill();\r\n        }\r\n    }\r\n}\r\n\r\nenum BladerState {\r\n    move = 'move',\r\n    attack = 'attack',\r\n    goBackUp = 'goBackUp',\r\n}\r\n\r\nclass BladerMoveState implements State {\r\n\r\n    public name: string = BladerState.move;\r\n    public initialized: boolean;\r\n    public actor: Blader;\r\n    private startX: number = 0;\r\n    private startY: number = 0;\r\n    private endX: number = 0;\r\n    private endY: number = 0;\r\n    private player: Player;\r\n\r\n    constructor(actor: Blader) {\r\n        this.actor = actor;\r\n    }\r\n\r\n    enter(): void {\r\n        this.initialized = true;\r\n        this.player = this.actor.myWorld.entityManager.player;\r\n        let dirX: number = MathUtil.sign(this.player.getPosition().x - this.actor.getPosition().x);\r\n        this.actor.targetSpeed.x = this.actor.horizontalSpeed * dirX;\r\n        this.actor.setFacingDirection(-dirX);\r\n    }\r\n\r\n    update(): void {\r\n        if (Math.abs(this.actor.getPosition().x - this.player.getPosition().x) < 25) {\r\n            this.actor.targetPos.x = this.player.getPosition().x;\r\n            this.actor.targetPos.y = this.player.getPosition().y;\r\n            this.actor.afterTargetPos.x = this.player.getPosition().x + 25 * MathUtil.sign(this.actor.targetSpeed.x);\r\n            this.actor.afterTargetPos.y = this.actor.getPosition().y;\r\n            this.actor.fsm.changeState(BladerState.attack);\r\n            return;\r\n        }\r\n    }\r\n\r\n    exit(): void {\r\n        this.initialized = false;\r\n    }\r\n}\r\n\r\nclass BladerAttackState implements State {\r\n\r\n    public name: string = BladerState.attack;\r\n    public initialized: boolean;\r\n    public actor: Blader;\r\n    private startX: number = 0;\r\n    private startY: number = 0;\r\n    private endX: number = 0;\r\n    private endY: number = 0;\r\n    private elapsedTime: number = 0;\r\n    private endTime: number = 500;\r\n\r\n    constructor(actor: Blader) {\r\n        this.actor = actor;\r\n    }\r\n\r\n    enter(): void {\r\n        this.initialized = true;\r\n\r\n        this.startX = this.actor.getPosition().x;\r\n        this.startY = this.actor.getPosition().y;\r\n        this.endX = this.actor.myWorld.entityManager.player.getPosition().x;\r\n        this.endY = this.actor.myWorld.entityManager.player.getPosition().y;\r\n        this.actor.targetSpeed.x = 0;\r\n        this.actor.targetSpeed.y = 0;\r\n    }\r\n\r\n    update(): void {\r\n        this.elapsedTime += fixedTimeMS;\r\n        this.actor.getPosition().x = MathUtil.lerp(this.startX, this.endX, this.elapsedTime / this.endTime);\r\n        this.actor.getPosition().y = MathUtil.lerp(this.startY, this.endY, this.elapsedTime / this.endTime);\r\n\r\n        if (this.elapsedTime >= this.endTime) {\r\n            this.actor.fsm.changeState(BladerState.goBackUp);\r\n            return;\r\n        }\r\n    }\r\n\r\n    exit(): void {\r\n        this.initialized = false;\r\n        this.elapsedTime = 0;\r\n    }\r\n}\r\n\r\nclass BladerGoBackUpkState implements State {\r\n\r\n    name: string = BladerState.goBackUp;\r\n    initialized: boolean;\r\n    actor: Blader;\r\n\r\n    constructor(actor: Blader) {\r\n        this.actor = actor;\r\n    }\r\n\r\n    enter(): void {\r\n        this.initialized = true;\r\n    }\r\n\r\n    update(): void {\r\n        let dx: number = this.actor.afterTargetPos.x - this.actor.getPosition().x;\r\n        let dy: number = this.actor.afterTargetPos.y - this.actor.getPosition().y;\r\n        let distance = Math.sqrt(dx * dx + dy * dy);\r\n        let dirX: number = dx / distance;\r\n        let dirY: number = dy / distance;\r\n        this.actor.targetSpeed.x = dirX * this.actor.attackSpeed;\r\n        this.actor.targetSpeed.y = dirY * this.actor.attackSpeed;\r\n\r\n        if (distance < 1) {\r\n            this.actor.targetSpeed.x = 0;\r\n            this.actor.targetSpeed.y = 0;\r\n            this.actor.fsm.changeState(BladerState.move);\r\n            return;\r\n        }\r\n\r\n    }\r\n\r\n    exit(): void {\r\n        this.initialized = false;\r\n    }\r\n}","import { World } from '../world'\r\nimport { EntityType, TagType } from '../konstants'\r\nimport { Entity } from '../entity'\r\nimport { Frozen } from '../frozen'\r\n\r\nexport class Enemy extends Entity {\r\n    public frozen: Frozen;\r\n\r\n    constructor(myWorld: World, tag: TagType, e: EntityType, game: Phaser.Game, x: number, y: number,\r\n        key: string, frame: string) {\r\n        super(myWorld, tag, e, game, x, y, key, frame);\r\n\r\n        this.frozen = new Frozen(this);\r\n    }\r\n}","import { Entity } from './entity'\r\nimport { AudioName} from './konstants'\r\nimport { fixedTimeMS } from './main'\r\n\r\nexport class Frozen {\r\n    public isFrozen: boolean = false;\r\n    private frozenElapsedTime: number = 0;\r\n    private frozenEndTime: number = 3000;\r\n\r\n    constructor(private owner: Entity) { }\r\n\r\n    public update(): void {\r\n        if (!this.isFrozen) {\r\n            return;\r\n        }\r\n\r\n        this.frozenElapsedTime += fixedTimeMS;\r\n\r\n        if (this.frozenElapsedTime >= this.frozenEndTime) {\r\n            this.frozenElapsedTime = 0;\r\n            this.isFrozen = false;\r\n            this.owner.animations.paused = false;\r\n        }\r\n    }\r\n\r\n    public freeze(): void {\r\n        if(this.isFrozen){\r\n            return;\r\n        }\r\n\r\n        this.owner.game.sound.play(AudioName.enemy_damage);\r\n        this.isFrozen = true;\r\n        this.owner.animations.paused = true;\r\n    }\r\n}","import { State } from './state'\r\nimport { KeyedCollection } from '../util/mathutil'\r\n\r\nexport class StateMachine {\r\n\r\n    public prevState: State = null;\r\n    public currentState: State = null;\r\n    public states: KeyedCollection<State> = new KeyedCollection<State>();\r\n\r\n    public addState(name: string, state: State): void {\r\n        state.name = name;\r\n        this.states.Add(name, state);\r\n    }\r\n\r\n    public changeState(state: string): void {\r\n        if (this.currentState != null || this.currentState != undefined) {\r\n            this.currentState.exit();\r\n        }\r\n\r\n        this.prevState = this.currentState;\r\n        this.currentState = this.states.Item(state);\r\n        this.currentState.enter();\r\n    }\r\n}","const PI = 3.14159265358979323846264;\r\nconst DEG_TO_RAD = Math.PI / 180;\r\nconst RAD_TO_DEG = 180 / Math.PI;\r\n\r\nexport class MathUtil {\r\n\r\n    static sign(s: number): number {\r\n        if (s >= 0) {\r\n            return 1;\r\n        }\r\n        else {\r\n            return -1;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * see: https://stackoverflow.com/questions/1761626/weighted-random-numbers\r\n     * @param choices An array of 'weights' as the percent chance of being chosen\r\n     * @param sumOfWeights \r\n     */\r\n    static weightedRandom(choices: Array<number>, sumOfWeights: number): number {\r\n        var rand = Math.random() * sumOfWeights;\r\n        for (var i = 0; i < choices.length; i++) {\r\n            if (rand < choices[i]) {\r\n                return i;\r\n            }\r\n\r\n            rand -= choices[i];\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Built for KeyedCollection\r\n     * see: http://www.dustinhorne.com/post/2016/06/09/implementing-a-dictionary-in-typescript\r\n     * \r\n     * @param choices \r\n     * @param sumOfWeights \r\n     */\r\n    static weightedRandomKey(choices: KeyedCollection<any>, sumOfWeights: number): string {\r\n        var rand = Math.random() * sumOfWeights;\r\n\r\n        for (var i = 0; i < choices.Count(); i++) {\r\n            var value: number = choices.Item(choices.Keys()[i]);\r\n\r\n            if (rand < value) {\r\n                return choices.Keys()[i];\r\n            }\r\n\r\n            rand -= value;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Clamps a number. Based on Zevan's idea: http://actionsnippet.com/?p=475\r\n     * params: val, min, max\r\n     * Author: Jakub Korzeniowski\r\n     * Agency: Softhis\r\n     * http://www.softhis.com\r\n     */\r\n    // (function () { Math.clamp = function (a, b, c) { return Math.max(b, Math.min(c, a)); } })();\r\n\r\n    /*\r\n        You can simply use Javascript's .toFixed(<number>)\r\n    \r\n        Deprecated.\r\n    */\r\n    // (function () { Math.roundTo2Places = function (a) { return (Math.round(a) * 100) / 100; } })();\r\n\r\n\r\n    // (function () {\r\n    //     Math.distanceSq = function (a, b) {\r\n    //         return (b.x - a.x) * (b.x - a.x) + (b.y - a.y) * (b.y - a.y);\r\n    //     }\r\n    // })();\r\n\r\n    // (function () {\r\n    //     Math.distance = function (a, b) {\r\n    //         return Math.sqrt((b.x - a.x) * (b.x - a.x) + (b.y - a.y) * (b.y - a.y));\r\n    //     }\r\n    // })();\r\n\r\n    /**\r\n     * Get a random floating point number between `min` and `max`.\r\n     * @param {number} min - min number\r\n     * @param {number} max - max number\r\n     * @return {float} a random floating point number\r\n     */\r\n    // (function () {\r\n    //     Math.getRandomFloat = function (min, max) {\r\n    //         return Math.random() * (max - min) + min;\r\n    //     }\r\n    // })();\r\n\r\n    /**\r\n     * Get a random integer between `min` and `max`.\r\n     * @param {number} min - min number\r\n     * @param {number} max - max number\r\n     * @return {int} a random integer\r\n     */\r\n    // (function () {\r\n    //     Math.getRandomInt = function (min, max) {\r\n    //         return Math.floor(Math.random() * (max - min + 1) + min);\r\n    //     }\r\n    // })();\r\n\r\n    /**\r\n     * Swaps two things.\r\n     * @param {*} a - \r\n     * @param {*} b - \r\n     */\r\n    // (function () {\r\n    //     Math.swap = function (a, b) {\r\n    //         var t = a;\r\n    //         a = b;\r\n    //         b = t;\r\n    //     }\r\n    // })();\r\n\r\n    // (function () {\r\n    // \t/**\r\n    // \t * Linearly interpolates between a and b.\r\n    // \t * see: https://en.wikipedia.org/wiki/Linear_interpolation\r\n    // \t * @param {} a - The first value.\r\n    // \t * @param {} b - The second value.\r\n    // \t * @param {} t - Time.\r\n    // \t * @return The linear interpolation between a and b based on t.\r\n    // \t */\r\n    //     Math.lerp = function (a, b, t) {\r\n    //         return (1 - t) * a + t * b;\r\n    //     }\r\n    // })();\r\n\r\n    static lerp(a: number, b: number, t: number) {\r\n        return (1 - t) * a + t * b;\r\n    }\r\n\r\n    // (function () {\r\n    // \t/**\r\n    // \t * Linearly interpolates between a and b.\r\n    // \t * see: https://en.wikipedia.org/wiki/Linear_interpolation\r\n    // \t * @param {} a - The first value.\r\n    // \t * @param {} b - The second value.\r\n    // \t * @param {} t - Time.\r\n    // \t * @return The linear interpolation between a and b based on t.\r\n    // \t */\r\n    //     Math.lerpImprecise = function (a, b, t) {\r\n    //         return a + t * (b - a);\r\n    //     }\r\n    // })();\r\n}\r\n\r\n\r\n/**\r\n * see: http://www.dustinhorne.com/post/2016/06/09/implementing-a-dictionary-in-typescript\r\n */\r\nexport interface IKeyedCollection<T> {\r\n    Add(key: string, value: T): void;\r\n    ContainsKey(key: string): boolean;\r\n    Count(): number;\r\n    Item(key: string): T;\r\n    Keys(): string[];\r\n    Remove(key: string): T;\r\n    Values(): T[];\r\n}\r\n\r\n/**\r\n * see: http://www.dustinhorne.com/post/2016/06/09/implementing-a-dictionary-in-typescript\r\n */\r\nexport class KeyedCollection<T> implements IKeyedCollection<T> {\r\n    private items: { [index: string]: T } = {};\r\n\r\n    private count: number = 0;\r\n\r\n    public ContainsKey(key: string): boolean {\r\n        return this.items.hasOwnProperty(key);\r\n    }\r\n\r\n    public Count(): number {\r\n        return this.count;\r\n    }\r\n\r\n    public Add(key: string, value: T) {\r\n        if (!this.items.hasOwnProperty(key))\r\n            this.count++;\r\n\r\n        this.items[key] = value;\r\n    }\r\n\r\n    public Remove(key: string): T {\r\n        var val = this.items[key];\r\n        delete this.items[key];\r\n        this.count--;\r\n        return val;\r\n    }\r\n\r\n    public Item(key: string): T {\r\n        return this.items[key];\r\n    }\r\n\r\n    public Keys(): string[] {\r\n        var keySet: string[] = [];\r\n\r\n        for (var prop in this.items) {\r\n            if (this.items.hasOwnProperty(prop)) {\r\n                keySet.push(prop);\r\n            }\r\n        }\r\n\r\n        return keySet;\r\n    }\r\n\r\n    public Values(): T[] {\r\n        var values: T[] = [];\r\n\r\n        for (var prop in this.items) {\r\n            if (this.items.hasOwnProperty(prop)) {\r\n                values.push(this.items[prop]);\r\n            }\r\n        }\r\n\r\n        return values;\r\n    }\r\n}","import { Enemy } from './enemy'\r\nimport { World } from '../world'\r\nimport { EntityType, TagType, AudioName } from '../konstants'\r\nimport { Player } from '../player'\r\nimport { Helper } from '../helper'\r\nimport { MathUtil, KeyedCollection } from '../util/mathutil'\r\nimport { Bullet } from '../bullets/bullet'\r\nimport { State } from '../fsm/state'\r\nimport { StateMachine } from '../fsm/stateMachine'\r\nimport { PowerUp } from '../powerups/powerup'\r\nimport { fixedTime, fixedTimeMS } from '../main'\r\n\r\nenum MetAnimations {\r\n    idle = 'idle',\r\n    active = 'active',\r\n}\r\n\r\nexport class Met extends Enemy {\r\n\r\n    public horizontalSpeed: number = 50;\r\n    public targetSpeed: Phaser.Point = new Phaser.Point(0, 0);\r\n    public fsm: StateMachine;\r\n\r\n    constructor(myWorld: World, tag: TagType, e: EntityType, game: Phaser.Game, x: number, y: number, key: string, frame: string) {\r\n        super(myWorld, tag, e, game, x, y, key, frame);\r\n\r\n        this.getPosition().x = x;\r\n        this.getPosition().y = y;\r\n        this.position.x = this.getPosition().x;\r\n        this.position.y = this.getPosition().y;\r\n        this.anchor.setTo(0.5, 1);\r\n        this.smoothed = false;\r\n        this.setFacingDirection(-1);\r\n        this.health = 1;\r\n        this.maxHealth = 1;\r\n        this.isShielded = true;\r\n\r\n        this.fsm = new StateMachine();\r\n        this.fsm.addState(MetState.idle, new MetIdleState(this));\r\n        this.fsm.addState(MetState.active, new MetActiveState(this));\r\n        this.fsm.changeState(MetState.idle);\r\n\r\n        this.animations.add(MetAnimations.idle, ['met_idle'], 10, false, false);\r\n        this.animations.add(MetAnimations.active, ['met_active'], 10, false, false);\r\n        this.animations.play(MetAnimations.idle);\r\n\r\n        this.hitbox = new Phaser.Rectangle(this.getPosition().x, this.getPosition().y, 16, 12);\r\n        this.hitboxOffset.x = -8;\r\n        this.hitboxOffset.y = -6;\r\n        this.updateRect();\r\n    }\r\n\r\n    public manualUpdate(): void {\r\n        // this.pGraphicsDebug.clear();\r\n\r\n        if (!this.alive) {\r\n            return;\r\n        }\r\n\r\n        this.frozen.update();\r\n        if (this.frozen.isFrozen) {\r\n            return;\r\n        }\r\n\r\n        this.fsm.currentState.update();\r\n\r\n        this.velocity.x = this.targetSpeed.x;\r\n        this.velocity.y = this.targetSpeed.y;\r\n\r\n        this.getPosition().x += this.velocity.x * fixedTime;\r\n        this.getPosition().y += this.velocity.y * fixedTime;\r\n\r\n        this.position.x = (this.getPosition().x + 0.5) | 0;\r\n        this.position.y = this.getPosition().y;\r\n\r\n        this.updateRect();\r\n    }\r\n\r\n    public takeDamage(damage: number): void {\r\n        if (this.isShielded) {\r\n            this.game.sound.play(AudioName.dink);\r\n            return;\r\n        }\r\n\r\n        if (this.health <= 0) {\r\n            return;\r\n        }\r\n\r\n        this.game.sound.play(AudioName.enemy_damage);\r\n        this.health -= damage;\r\n\r\n        if (this.health <= 0) {\r\n            this.health = 0;\r\n            this.myWorld.dropManager.dropPowerUp(this.getPosition().x - 8, this.getPosition().y);\r\n            this.myWorld.createExplosionEffect(this.getPosition().x, this.getPosition().y - (<Phaser.Rectangle>this.hitbox).halfHeight);\r\n            this.kill();\r\n        }\r\n        else {\r\n\r\n        }\r\n    }\r\n\r\n    public shoot(): void {\r\n        this.game.sound.play(AudioName.enemy_shoot);\r\n        this.isShielded = false;\r\n        this.animations.play(MetAnimations.active);\r\n\r\n        let bullet: Bullet = this.myWorld.entityManager.createBitmapBullet(this, this.position.x, this.position.y, 6, 6, EntityType.bullet, EntityType.met_bullet);\r\n        bullet.horizontalSpeed = 35;\r\n        bullet.targetSpeed.x = bullet.horizontalSpeed * -this.getFacingDirection();\r\n\r\n        bullet = this.myWorld.entityManager.createBitmapBullet(this, this.position.x, this.position.y, 6, 6, EntityType.bullet, EntityType.met_bullet);\r\n        bullet.horizontalSpeed = 35;\r\n        let cos: number = Math.cos(45 * (Math.PI / 180));\r\n        let sin: number = Math.sin(45 * (Math.PI / 180));\r\n        bullet.targetSpeed.x = bullet.horizontalSpeed * cos * -this.getFacingDirection();\r\n        bullet.targetSpeed.y = bullet.horizontalSpeed * sin * -this.getFacingDirection();\r\n\r\n        bullet = this.myWorld.entityManager.createBitmapBullet(this, this.position.x, this.position.y, 6, 6, EntityType.bullet, EntityType.met_bullet);\r\n        bullet.horizontalSpeed = 35;\r\n        cos = Math.cos(-45 * (Math.PI / 180));\r\n        sin = Math.sin(-45 * (Math.PI / 180));\r\n        bullet.targetSpeed.x = bullet.horizontalSpeed * cos * -this.getFacingDirection();\r\n        bullet.targetSpeed.y = bullet.horizontalSpeed * sin * -this.getFacingDirection();\r\n    }\r\n}\r\n\r\nenum MetState {\r\n    idle = 'idle',\r\n    active = 'active',\r\n}\r\n\r\nclass MetIdleState implements State {\r\n\r\n    public name: string = MetState.idle;\r\n    public initialized: boolean;\r\n    public actor: Met;\r\n    private elapsedTime: number = 0;\r\n    private endTime: number;\r\n    private minIdleTime: number = 500;\r\n    private maxIdleTime: number = 2000;\r\n\r\n    constructor(actor: Met) {\r\n        this.actor = actor;\r\n    }\r\n\r\n    enter(): void {\r\n        this.initialized = true;\r\n        this.actor.animations.play(MetAnimations.idle);\r\n        this.actor.isShielded = true;\r\n        this.endTime = this.minIdleTime + (Math.random() * (this.maxIdleTime - this.minIdleTime))\r\n    }\r\n\r\n    update(): void {\r\n        this.actor.setFacingDirection(\r\n            MathUtil.sign(this.actor.getPosition().x - this.actor.myWorld.entityManager.player.getPosition().x));\r\n\r\n        this.elapsedTime += fixedTimeMS;\r\n\r\n        if (this.elapsedTime > this.endTime) {\r\n            this.elapsedTime = 0;\r\n            this.actor.fsm.changeState(MetAnimations.active);\r\n            return;\r\n        }\r\n    }\r\n\r\n    exit(): void {\r\n        this.initialized = false;\r\n        this.elapsedTime = 0;\r\n    }\r\n}\r\n\r\nclass MetActiveState implements State {\r\n\r\n    public name: string = MetState.active;\r\n    public initialized: boolean;\r\n    public actor: Met;\r\n    private elapsedTime: number = 0;\r\n    private endTime: number = 200;\r\n    private shootDelayElapsedTime: number = 0;\r\n    private shootDelayEndTime: number = 550;\r\n    private hasShot: boolean = false;\r\n\r\n    constructor(actor: Met) {\r\n        this.actor = actor;\r\n    }\r\n\r\n    enter(): void {\r\n        this.initialized = true;\r\n        this.actor.animations.play(MetAnimations.active);\r\n        this.actor.isShielded = false;\r\n\r\n    }\r\n\r\n    update(): void {\r\n        this.checkIfCanShoot();\r\n        this.checkIfCanIdle();\r\n    }\r\n\r\n    exit(): void {\r\n        this.initialized = false;\r\n        this.elapsedTime = 0;\r\n        this.shootDelayElapsedTime = 0;\r\n        this.hasShot = false;\r\n    }\r\n\r\n    private checkIfCanShoot(): void {\r\n        if (this.hasShot) {\r\n            return;\r\n        }\r\n\r\n        this.shootDelayElapsedTime += fixedTimeMS;\r\n\r\n        if (this.shootDelayElapsedTime < this.shootDelayEndTime) {\r\n            return;\r\n        }\r\n\r\n        this.hasShot = true;\r\n        this.actor.shoot();\r\n    }\r\n\r\n    private checkIfCanIdle(): void {\r\n        if (!this.hasShot) {\r\n            return;\r\n        }\r\n\r\n        this.elapsedTime += fixedTimeMS;\r\n\r\n        if (this.elapsedTime > this.endTime) {\r\n            this.elapsedTime = 0;\r\n            this.actor.fsm.changeState(MetState.idle);\r\n            return;\r\n        }\r\n    }\r\n}","import { Enemy } from './enemy'\r\nimport { World } from '../world'\r\nimport { EntityType, TagType, AudioName } from '../konstants'\r\nimport { Player } from '../player'\r\nimport { Entity } from '../entity'\r\nimport { Helper } from '../helper'\r\nimport { MathUtil } from '../util/mathutil'\r\nimport { Bullet } from '../bullets/bullet'\r\nimport { State } from '../fsm/state'\r\nimport { StateMachine } from '../fsm/stateMachine'\r\nimport { KeyedCollection } from '../util/mathutil'\r\nimport { fixedTime, fixedTimeMS } from '../main'\r\n\r\nenum BeakAnimationNames {\r\n    idle = 'idle',\r\n    open = 'open',\r\n    close = 'close',\r\n}\r\n\r\nexport class Beak extends Enemy {\r\n\r\n    public fsm: StateMachine;\r\n    private positionOffset: Phaser.Point = new Phaser.Point();\r\n\r\n    constructor(myWorld: World, tag: TagType, myEntityType: EntityType, game: Phaser.Game, x: number, y: number, key: string, frame: string) {\r\n        super(myWorld, tag, myEntityType, game, x, y, key, frame);\r\n\r\n        this.fsm = new StateMachine();\r\n        this.fsm.addState(BeakState.idle, new BeakIdleState(this));\r\n        this.fsm.addState(BeakState.opening, new BeakOpeningState(this));\r\n        this.fsm.addState(BeakState.closing, new BeakClosingState(this));\r\n        this.fsm.addState(BeakState.shooting, new BeakShootingState(this));\r\n        this.fsm.changeState(BeakState.idle);\r\n\r\n        this.getPosition().x = x;\r\n        this.getPosition().y = y;\r\n        this.position.x = this.getPosition().x;\r\n        this.position.y = this.getPosition().y;\r\n        this.smoothed = false;\r\n        this.health = 1;\r\n        this.maxHealth = 1;\r\n        this.isShielded = true;\r\n\r\n        this.animations.add(BeakAnimationNames.idle, ['beak_01'], 10, false, false);\r\n        this.animations.add(BeakAnimationNames.open, ['beak_02', 'beak_03', 'beak_04'], 7, false, false);\r\n        this.animations.add(BeakAnimationNames.close, ['beak_04', 'beak_03', 'beak_02'], 7, false, false);\r\n        this.animations.play(BeakAnimationNames.idle);\r\n\r\n        this.hitbox = new Phaser.Rectangle(0, 0, 8, 14); // set by setDirectionFromRotation()\r\n        this.hitboxOffset.x = -this.hitbox.halfWidth;\r\n        this.hitboxOffset.y = -this.hitbox.halfHeight;\r\n        this.updateRect();\r\n    }\r\n\r\n    public manualUpdate(): void {\r\n        // this.pGraphicsDebug.clear();\r\n\r\n        if (!this.alive) {\r\n            return;\r\n        }\r\n\r\n        this.frozen.update();\r\n        if (this.frozen.isFrozen) {\r\n            return;\r\n        }\r\n\r\n        this.fsm.currentState.update();\r\n        this.updateRect();\r\n    }\r\n\r\n    public setDirectionFromRotation(rotation: number): void {\r\n        switch (rotation) {\r\n            case 0:\r\n                this.setFacingDirection(1);\r\n\r\n                this.positionOffset.x = -8;\r\n                this.positionOffset.y = -8;\r\n\r\n                this.hitboxOffset.x = 8;\r\n                this.hitboxOffset.y = 1;\r\n\r\n                break;\r\n\r\n            case 180:\r\n                this.setFacingDirection(-1);\r\n\r\n                this.positionOffset.x = -8;\r\n                this.positionOffset.y = 8;\r\n\r\n                this.hitboxOffset.x = -16;\r\n                this.hitboxOffset.y = 0;\r\n\r\n                break;\r\n\r\n            default:\r\n                console.error('Beak: rotation doesnt exist');\r\n                break;\r\n        }\r\n\r\n        this.getPosition().x = this.position.x + this.positionOffset.x;\r\n        this.getPosition().y = this.position.y + this.positionOffset.y;\r\n        this.position.x = this.getPosition().x;\r\n        this.position.y = this.getPosition().y;\r\n    }\r\n\r\n    public takeDamage(damage: number): void {\r\n        if (this.isShielded) {\r\n            this.game.sound.play(AudioName.dink);\r\n            return;\r\n        }\r\n\r\n        if (this.health <= 0) {\r\n            return;\r\n        }\r\n\r\n        this.game.sound.play(AudioName.enemy_damage);\r\n        this.health -= damage;\r\n\r\n        if (this.health <= 0) {\r\n            this.health = 0;\r\n            this.myWorld.dropManager.dropPowerUp(this.getPosition().x + (<Phaser.Rectangle>this.hitbox).halfWidth, this.getPosition().y);\r\n            this.myWorld.createExplosionEffect(this.getPosition().x + (<Phaser.Rectangle>this.hitbox).halfWidth * 3, this.getPosition().y + (<Phaser.Rectangle>this.hitbox).halfHeight);\r\n            this.kill();\r\n        }\r\n        else {\r\n\r\n        }\r\n    }\r\n\r\n    public shoot(angle: number): void {\r\n        this.game.sound.play(AudioName.enemy_shoot);\r\n        this.isShielded = false;\r\n\r\n        let xOffset: number = this.getFacingDirection();\r\n        let bullet: Bullet = this.myWorld.entityManager.createBitmapBullet(this,\r\n            this.position.x - xOffset, this.position.y + 8,\r\n            6, 6,\r\n            EntityType.bullet, EntityType.beak_bullet);\r\n        bullet.horizontalSpeed = 125;\r\n        let cos: number = Math.cos(angle * (Math.PI / 180));\r\n        let sin: number = Math.sin(angle * (Math.PI / 180));\r\n        bullet.targetSpeed.x = bullet.horizontalSpeed * cos * -this.getFacingDirection();\r\n        bullet.targetSpeed.y = bullet.horizontalSpeed * sin * -this.getFacingDirection();\r\n    }\r\n}\r\n\r\nenum BeakState {\r\n    idle = 'idle',\r\n    opening = 'opening',\r\n    closing = 'closing',\r\n    shooting = 'shooting',\r\n}\r\n\r\nclass BeakIdleState implements State {\r\n\r\n    public name: string;\r\n    public initialized: boolean;\r\n    public actor: Beak;\r\n    private elapsedTime: number = 0;\r\n    private endTime: number = 2000;\r\n\r\n    constructor(actor: Beak) {\r\n        this.actor = actor;\r\n    }\r\n\r\n    enter(): void {\r\n        this.initialized = true;\r\n        this.actor.animations.play(BeakAnimationNames.idle);\r\n        this.actor.isShielded = true;\r\n    }\r\n\r\n    update(): void {\r\n        this.elapsedTime += fixedTimeMS;\r\n\r\n        if (this.elapsedTime > this.endTime) {\r\n            this.elapsedTime = 0;\r\n            this.actor.fsm.changeState(BeakState.opening);\r\n            return;\r\n        }\r\n    }\r\n\r\n    exit(): void {\r\n        this.initialized = false;\r\n    }\r\n}\r\n\r\nclass BeakOpeningState implements State {\r\n\r\n    public name: string;\r\n    public initialized: boolean;\r\n    public actor: Beak;\r\n\r\n    constructor(actor: Beak) {\r\n        this.actor = actor;\r\n    }\r\n\r\n    enter(): void {\r\n        this.initialized = true;\r\n        this.actor.animations.play(BeakAnimationNames.open);\r\n        this.actor.isShielded = false;\r\n    }\r\n\r\n    update(): void {\r\n        if (this.actor.animations.currentAnim.isFinished) {\r\n            this.actor.fsm.changeState(BeakState.shooting);\r\n            return;\r\n        }\r\n    }\r\n\r\n    exit(): void {\r\n        this.initialized = false;\r\n    }\r\n}\r\n\r\nclass BeakShootingState implements State {\r\n\r\n    public name: string;\r\n    public initialized: boolean;\r\n    public actor: Beak;\r\n    private elapsedTime: number = 0;\r\n    private shootDelay: number = 450;\r\n    private numBullets: number = 0;\r\n\r\n    constructor(actor: Beak) {\r\n        this.actor = actor;\r\n    }\r\n\r\n    enter(): void {\r\n        this.initialized = true;\r\n        this.elapsedTime = this.shootDelay;\r\n    }\r\n\r\n    update(): void {\r\n        this.elapsedTime += fixedTimeMS;\r\n\r\n        if (this.elapsedTime > this.shootDelay) {\r\n            this.elapsedTime = 0;\r\n            this.numBullets++;\r\n\r\n            switch (this.numBullets) {\r\n                case 1:\r\n                    this.actor.shoot(45);\r\n                    break;\r\n\r\n                case 2:\r\n                    this.actor.shoot(12);\r\n                    break;\r\n\r\n                case 3:\r\n                    this.actor.shoot(-12);\r\n                    break;\r\n\r\n                case 4:\r\n                    this.actor.shoot(-45);\r\n                    this.actor.fsm.changeState(BeakState.closing);\r\n                    return;\r\n            }\r\n        }\r\n    }\r\n\r\n    exit(): void {\r\n        this.initialized = false;\r\n        this.numBullets = 0;\r\n        this.elapsedTime = 0;\r\n    }\r\n}\r\n\r\nclass BeakClosingState implements State {\r\n\r\n    public name: string;\r\n    public initialized: boolean;\r\n    public actor: Beak;\r\n\r\n    constructor(actor: Beak) {\r\n        this.actor = actor;\r\n    }\r\n\r\n    enter(): void {\r\n        this.initialized = true;\r\n        this.actor.animations.play(BeakAnimationNames.close);\r\n        this.actor.isShielded = false;\r\n    }\r\n\r\n    update(): void {\r\n        if (this.actor.animations.currentAnim.isFinished) {\r\n            this.actor.fsm.changeState(BeakState.idle);\r\n            return;\r\n        }\r\n    }\r\n\r\n    exit(): void {\r\n        this.initialized = false;\r\n    }\r\n}","import { World, Surface } from '../world'\r\nimport { Enemy } from '../enemies/enemy'\r\nimport { EntityType, TagType, AudioName, WallContact } from '../konstants'\r\nimport { Player } from '../player'\r\nimport { Entity } from '../entity'\r\nimport { Helper } from '../helper'\r\nimport { MathUtil } from '../util/mathutil'\r\nimport { Bullet } from '../bullets/bullet'\r\nimport { State } from '../fsm/state'\r\nimport { StateMachine } from '../fsm/stateMachine'\r\nimport { KeyedCollection } from '../util/mathutil'\r\nimport { Vector2 } from '../sat2d/vector2'\r\nimport { Ray } from '../sat2d/ray'\r\nimport { RayType } from '../sat2d/ray'\r\nimport { RayIntersection } from '../sat2d/rayIntersection'\r\nimport { SAT2D } from '../sat2d/sat2d'\r\nimport { fixedTime, fixedTimeMS } from '../main'\r\n\r\nenum SniperJoeAnimationNames {\r\n    idle = 'idle',\r\n    pre_shoot = 'pre_shoot',\r\n    jump = 'jump'\r\n}\r\n\r\nexport class SniperJoe extends Enemy {\r\n\r\n    public horizontalSpeed: number = 50;\r\n    public targetSpeed: Phaser.Point = new Phaser.Point(0, 0);\r\n    public isOnGround: boolean = true;\r\n    public useGravity: boolean = true;\r\n    public isJumping: boolean = true;\r\n    public isFalling: boolean = true;\r\n    public fsm: StateMachine;\r\n\r\n    private minJumpHeight: number = 1;\r\n    private maxJumpHeight: number = 44;\r\n    private timeToJumpApex = 0.35;\r\n    private gravityX: number = 0;\r\n    private gravityY: number = 0;\r\n    private maxJumpVelocity = 0;\r\n    private minJumpVelocity = 0;\r\n    midGroundCheck: Ray;\r\n    leftGroundCheck: Ray;\r\n    rightGroundCheck: Ray;\r\n    midCeilCheck: Ray;\r\n    leftCeilCheck: Ray;\r\n    rightCeilCheck: Ray;\r\n    leftCheck1: Ray;\r\n    leftCheck2: Ray;\r\n    rightCheck1: Ray;\r\n    rightCheck2: Ray;\r\n    groundRays: Array<Ray> = new Array<Ray>();\r\n    ceilRays: Array<Ray> = new Array<Ray>();\r\n    leftRays: Array<Ray> = new Array<Ray>();\r\n    rightRays: Array<Ray> = new Array<Ray>();\r\n    skinWidth: number = 5;\r\n    wallContact: WallContact;\r\n\r\n    constructor(myWorld: World, tag: TagType, e: EntityType, game: Phaser.Game, x: number, y: number, key: string, frame: string) {\r\n        super(myWorld, tag, e, game, x, y, key, frame);\r\n\r\n        this.fsm = new StateMachine();\r\n        this.fsm.addState(SniperJoeState.amazing_entrance, new SniperJoeAmazingEntranceState(this));\r\n        this.fsm.addState(SniperJoeState.idle, new SniperJoeIdleState(this));\r\n        this.fsm.addState(SniperJoeState.pre_shoot, new SniperJoePreShootState(this));\r\n        this.fsm.addState(SniperJoeState.shooting, new SniperJoeShootingState(this));\r\n        this.fsm.addState(SniperJoeState.jump, new SniperJoeJumpState(this));\r\n        this.fsm.addState(SniperJoeState.jump_back, new SniperJoeJumpBackState(this));\r\n        this.fsm.changeState(SniperJoeState.amazing_entrance);\r\n\r\n        this.getPosition().x = x + 8;\r\n        this.getPosition().y = y + 16;\r\n        this.smoothed = false;\r\n        this.anchor.setTo(0.5, 1);\r\n        this.health = 10;\r\n        this.maxHealth = 10;\r\n        this.isShielded = true;\r\n\r\n        this.animations.add(SniperJoeAnimationNames.idle, ['sniper_joe_idle'], 10, false, false);\r\n        this.animations.add(SniperJoeAnimationNames.pre_shoot, ['sniper_joe_pre_shoot_01', 'sniper_joe_pre_shoot_02'], 7, false, false);\r\n        this.animations.add(SniperJoeAnimationNames.jump, ['sniper_joe_jump'], 10, false, false);\r\n        this.animations.play(SniperJoeAnimationNames.idle);\r\n\r\n        this.hitbox = new Phaser.Rectangle(this.getPosition().x - 8, this.getPosition().y - 16, 16, 16);\r\n        this.updateRect();\r\n\r\n        this.midGroundCheck = new Ray(new Vector2(), new Vector2(), RayType.not_infinite);\r\n        this.leftGroundCheck = new Ray(new Vector2(), new Vector2(), RayType.not_infinite);\r\n        this.rightGroundCheck = new Ray(new Vector2(), new Vector2(), RayType.not_infinite);\r\n        this.midCeilCheck = new Ray(new Vector2(), new Vector2(), RayType.not_infinite);\r\n        this.leftCeilCheck = new Ray(new Vector2(), new Vector2(), RayType.not_infinite);\r\n        this.rightCeilCheck = new Ray(new Vector2(), new Vector2(), RayType.not_infinite);\r\n        this.leftCheck1 = new Ray(new Vector2(), new Vector2(), RayType.not_infinite);\r\n        this.leftCheck2 = new Ray(new Vector2(), new Vector2(), RayType.not_infinite);\r\n        this.rightCheck1 = new Ray(new Vector2(), new Vector2(), RayType.not_infinite);\r\n        this.rightCheck2 = new Ray(new Vector2(), new Vector2(), RayType.not_infinite);\r\n        this.groundRays.push(this.midGroundCheck);\r\n        this.groundRays.push(this.leftGroundCheck);\r\n        this.groundRays.push(this.rightGroundCheck);\r\n        this.ceilRays.push(this.midCeilCheck);\r\n        this.ceilRays.push(this.leftCeilCheck);\r\n        this.ceilRays.push(this.rightCeilCheck);\r\n        this.leftRays.push(this.leftCheck1);\r\n        this.leftRays.push(this.leftCheck2);\r\n        this.rightRays.push(this.rightCheck1);\r\n        this.rightRays.push(this.rightCheck2);\r\n\r\n        this.wallContact = { left: false, right: false, up: false, down: false };\r\n        this.calculateRegularJumpSettings();\r\n    }\r\n\r\n    public manualUpdate(): void {\r\n        // this.pGraphicsDebug.clear();\r\n\r\n        if (!this.alive) {\r\n            return;\r\n        }\r\n\r\n        this.frozen.update();\r\n        if (this.frozen.isFrozen) {\r\n            return;\r\n        }\r\n\r\n        this.fsm.currentState.update();\r\n\r\n        if (this.useGravity) {\r\n            this.targetSpeed.x += Math.abs(this.gravityX) * fixedTime;\r\n            this.targetSpeed.y += Math.abs(this.gravityY) * fixedTime;\r\n        }\r\n\r\n        if (this.targetSpeed.y >= 300) {\r\n            this.targetSpeed.y = 300;\r\n        }\r\n\r\n        this.velocity.x = this.targetSpeed.x;\r\n        this.velocity.y = this.targetSpeed.y;\r\n\r\n        if (this.isOnGround) {\r\n            this.targetSpeed.x *= 0.75;\r\n        }\r\n\r\n        this.getPosition().x += this.velocity.x * fixedTime;\r\n        this.getPosition().y += this.velocity.y * fixedTime;\r\n\r\n        this.position.x = (this.getPosition().x + 0.5) | 0;\r\n        this.position.y = this.getPosition().y;\r\n\r\n        this.updateRect();\r\n        this.castRays();\r\n    }\r\n\r\n    public checkSurfaceCollisions(surfaces: Array<Surface>): void {\r\n        this.wallContact.left = false;\r\n        this.wallContact.right = false;\r\n        this.wallContact.up = false;\r\n        this.wallContact.down = false;\r\n        this.isOnGround = false;\r\n\r\n        let into: RayIntersection;\r\n\r\n        for (let j = 0; j < surfaces.length; j++) {\r\n            let surface: Surface = surfaces[j];\r\n\r\n            if (!surface.collidable) {\r\n                continue;\r\n            }\r\n\r\n            let nx: number = surface.dir.y;\r\n            let ny: number = -surface.dir.x;\r\n\r\n            // Check floors\r\n            if (ny == -1 && this.getVelocity().y > 0) {\r\n                for (let k = 0; k < this.groundRays.length; k++) {\r\n                    let ray: Ray = this.groundRays[k];\r\n\r\n                    into = SAT2D.testRayVsRay(ray, new Ray(new Vector2(surface.p1.x, surface.p1.y),\r\n                        new Vector2(surface.p2.x, surface.p2.y), RayType.not_infinite), into);\r\n\r\n                    if (into != null) {\r\n\r\n                        let dx: number = into.ray1.end.x - into.ray1.start.x;\r\n                        let dy: number = into.ray1.end.y - into.ray1.start.y;\r\n                        let distance: number = Math.sqrt(dx * dx + dy * dy);\r\n                        let trueDistance: number = distance * into.u1;\r\n\r\n                        let contactX: number = into.ray1.start.x + into.ray1.dir.x * into.u1;\r\n                        let contactY: number = into.ray1.start.y + trueDistance;\r\n\r\n                        // this.pGraphicsDebug.drawCircle(contactX, contactY, 3);\r\n\r\n                        if (trueDistance > this.hitbox.height * 0.5) {\r\n                            continue;\r\n                        }\r\n\r\n                        this.getPosition().y = contactY;\r\n                        this.setVelocity(this.getVelocity().x, 0);\r\n                        this.targetSpeed.y = 0;\r\n                        this.isOnGround = true;\r\n                        this.isJumping = false;\r\n                        this.isFalling = false;\r\n                        this.wallContact.down = true;\r\n                        continue;\r\n                    }\r\n                }\r\n            }\r\n\r\n            // Check ceilings\r\n            if (ny == 1 && this.getVelocity().y < 0) {\r\n                for (let k = 0; k < this.ceilRays.length; k++) {\r\n                    let ray: Ray = this.ceilRays[k];\r\n\r\n                    into = SAT2D.testRayVsRay(ray, new Ray(new Vector2(surface.p1.x, surface.p1.y),\r\n                        new Vector2(surface.p2.x, surface.p2.y), RayType.not_infinite), into);\r\n\r\n                    if (into != null) {\r\n\r\n                        let dx: number = into.ray1.end.x - into.ray1.start.x;\r\n                        let dy: number = into.ray1.end.y - into.ray1.start.y;\r\n                        let distance: number = Math.sqrt(dx * dx + dy * dy);\r\n                        let trueDistance: number = distance * into.u1;\r\n\r\n                        let contactX: number = into.ray1.start.x + into.ray1.dir.x * into.u1;\r\n                        let contactY: number = into.ray1.start.y - trueDistance;\r\n\r\n                        // this.pGraphicsDebug.drawCircle(contactX, contactY, 3);\r\n\r\n                        if (trueDistance > this.hitbox.height * 0.5) {\r\n                            continue;\r\n                        }\r\n\r\n                        this.getPosition().y = contactY + this.hitbox.height;\r\n                        this.setVelocity(this.getVelocity().x, 0);\r\n                        this.targetSpeed.y = 0;\r\n                        this.isFalling = true;\r\n                        this.wallContact.up = true;\r\n                        continue;\r\n                    }\r\n                }\r\n            }\r\n\r\n            // Check right walls\r\n            if (nx == -1 && this.getVelocity().x > 0) {\r\n                for (let k = 0; k < this.rightRays.length; k++) {\r\n                    let ray: Ray = this.rightRays[k];\r\n\r\n                    into = SAT2D.testRayVsRay(ray, new Ray(new Vector2(surface.p1.x, surface.p1.y),\r\n                        new Vector2(surface.p2.x, surface.p2.y), RayType.not_infinite), into);\r\n\r\n                    if (into != null) {\r\n\r\n                        let dx: number = into.ray1.end.x - into.ray1.start.x;\r\n                        let dy: number = into.ray1.end.y - into.ray1.start.y;\r\n                        let distance: number = Math.sqrt(dx * dx + dy * dy);\r\n                        let trueDistance: number = distance * into.u1;\r\n\r\n                        let contactX: number = into.ray1.start.x + trueDistance;\r\n                        let contactY: number = into.ray1.start.y;\r\n\r\n                        // this.pGraphicsDebug.lineStyle(1, 0);\r\n                        // this.pGraphicsDebug.beginFill(0xff0000, 0.5);\r\n                        // this.pGraphicsDebug.drawCircle(contactX, contactY, 5);\r\n\r\n                        if (trueDistance > this.hitbox.width * 0.5) {\r\n                            continue;\r\n                        }\r\n\r\n                        this.getPosition().x = contactX - this.hitbox.width * 0.5;\r\n                        this.wallContact.right = true;\r\n                        continue;\r\n                    }\r\n                }\r\n            }\r\n\r\n            // Check left walls\r\n            if (nx == 1 && this.getVelocity().x < 0) {\r\n                for (let k = 0; k < this.leftRays.length; k++) {\r\n                    let ray: Ray = this.leftRays[k];\r\n\r\n                    into = SAT2D.testRayVsRay(ray, new Ray(new Vector2(surface.p1.x, surface.p1.y),\r\n                        new Vector2(surface.p2.x, surface.p2.y), RayType.not_infinite), into);\r\n\r\n                    if (into != null) {\r\n\r\n                        let dx: number = into.ray1.end.x - into.ray1.start.x;\r\n                        let dy: number = into.ray1.end.y - into.ray1.start.y;\r\n                        let distance: number = Math.sqrt(dx * dx + dy * dy);\r\n                        let trueDistance: number = distance * into.u1;\r\n\r\n                        let contactX: number = into.ray1.start.x - trueDistance;\r\n                        let contactY: number = into.ray1.start.y;\r\n\r\n                        // this.pGraphicsDebug.lineStyle(1, 0);\r\n                        // this.pGraphicsDebug.beginFill(0xff0000, 0.5);\r\n                        // this.pGraphicsDebug.drawCircle(contactX, contactY, 5);\r\n\r\n                        if (trueDistance > this.hitbox.width * 0.5) {\r\n                            continue;\r\n                        }\r\n\r\n                        this.getPosition().x = contactX + this.hitbox.width * 0.5;\r\n                        this.wallContact.left = true;\r\n                        continue;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    public takeDamage(damage: number): void {\r\n        if (this.isShielded) {\r\n            if (this.fsm.currentState.name == SniperJoeState.idle) {\r\n                (<SniperJoeIdleState>this.fsm.currentState).reset();\r\n            }\r\n            return;\r\n        }\r\n\r\n        if (this.health <= 0) {\r\n            return;\r\n        }\r\n\r\n        this.game.sound.play(AudioName.enemy_damage);\r\n        this.health -= damage;\r\n\r\n        if (this.health <= 0) {\r\n            this.health = 0;\r\n            this.myWorld.dropManager.dropPowerUp(this.getPosition().x, this.getPosition().y);\r\n            this.myWorld.createExplosionEffect(this.getPosition().x, this.getPosition().y - (<Phaser.Rectangle>this.hitbox).halfHeight);\r\n            this.kill();\r\n        }\r\n        else {\r\n\r\n        }\r\n    }\r\n\r\n    public shoot(angle: number): void {\r\n        this.game.sound.play(AudioName.enemy_shoot);\r\n        this.isShielded = false;\r\n\r\n        let bullet: Bullet = this.myWorld.entityManager.createBitmapBullet(this, this.position.x - 4, this.position.y - 7, 6, 6, EntityType.bullet, EntityType.met_bullet);\r\n        bullet.horizontalSpeed = 170;\r\n        let cos: number = Math.cos(angle * (Math.PI / 180));\r\n        let sin: number = Math.sin(angle * (Math.PI / 180));\r\n        bullet.targetSpeed.x = bullet.horizontalSpeed * cos * -this.getFacingDirection();\r\n        bullet.targetSpeed.y = bullet.horizontalSpeed * sin * -this.getFacingDirection();\r\n    }\r\n\r\n    public updateRect(): void {\r\n        this.hitbox.x = this.getPosition().x - 8;\r\n        this.hitbox.y = this.getPosition().y - 16;\r\n    }\r\n\r\n    private calculateRegularJumpSettings(): void {\r\n        this.gravityY = -(2 * this.maxJumpHeight) / Math.pow(this.timeToJumpApex, 2);\r\n        this.maxJumpVelocity = Math.abs(this.gravityY) * this.timeToJumpApex;\r\n        this.minJumpVelocity = Math.sqrt(2 * Math.abs(this.gravityY) * this.minJumpHeight);\r\n\r\n        // console.log('gravity: ' + this._gravity);\r\n        // console.log('maxJumpVelocity: ' + this._maxJumpVelocity);\r\n        // console.log('minJumpVelocity: ' + this._minJumpVelocity);\r\n    }\r\n\r\n    /**\r\n     * Using the current position moves the rays a frame even though the player may be running into a wall. By using\r\n     * previous position the rays don't move for that frame. They use the previous frame. Think about it, when the player\r\n     * is running into a wall, its 'bounds' should not move.\r\n     */\r\n    private castRays(): void {\r\n        let centerX: number = this.getPosition().x;\r\n        let centerY: number = this.getPosition().y - this.hitbox.height * 0.5;\r\n\r\n        if (this.wallContact.left || this.wallContact.right) {\r\n            centerX = this.previousPosition.x;\r\n        }\r\n\r\n        // cast ground rays\r\n        this.midGroundCheck.start = new Vector2(centerX, centerY);\r\n        this.midGroundCheck.end = new Vector2(centerX, centerY + this.hitbox.height * 0.5 + this.skinWidth);\r\n        this.leftGroundCheck.start = new Vector2(centerX - this.hitbox.width * 0.5 + 3, centerY);\r\n        this.leftGroundCheck.end = new Vector2(centerX - this.hitbox.width * 0.5 + 3, centerY + this.hitbox.height * 0.5 + this.skinWidth);\r\n        this.rightGroundCheck.start = new Vector2(centerX + this.hitbox.width * 0.5 - 3, centerY);\r\n        this.rightGroundCheck.end = new Vector2(centerX + this.hitbox.width * 0.5 - 3, centerY + this.hitbox.height * 0.5 + this.skinWidth);\r\n\r\n        // cast ceil rays\r\n        this.midCeilCheck.start = new Vector2(centerX, centerY);\r\n        this.midCeilCheck.end = new Vector2(centerX, centerY - this.hitbox.height * 0.5 - this.skinWidth);\r\n        this.leftCeilCheck.start = new Vector2(centerX - this.hitbox.width * 0.5 + 3, centerY);\r\n        this.leftCeilCheck.end = new Vector2(centerX - this.hitbox.width * 0.5 + 3, centerY - this.hitbox.height * 0.5 - this.skinWidth);\r\n        this.rightCeilCheck.start = new Vector2(centerX + this.hitbox.width * 0.5 - 3, centerY);\r\n        this.rightCeilCheck.end = new Vector2(centerX + this.hitbox.width * 0.5 - 3, centerY - this.hitbox.height * 0.5 - this.skinWidth);\r\n\r\n        // cast left rays\r\n        let offsetY: number = 8;\r\n        this.leftCheck1.start = new Vector2(centerX, centerY - offsetY);\r\n        this.leftCheck1.end = new Vector2(centerX - this.hitbox.width * 0.5 - this.skinWidth, centerY - offsetY);\r\n        this.leftCheck2.start = new Vector2(centerX, centerY + offsetY);\r\n        this.leftCheck2.end = new Vector2(centerX - this.hitbox.width * 0.5 - this.skinWidth, centerY + offsetY);\r\n\r\n        // cast right rays\r\n        offsetY = 8;\r\n        this.rightCheck1.start = new Vector2(centerX, centerY - offsetY);\r\n        this.rightCheck1.end = new Vector2(centerX + this.hitbox.width * 0.5 + this.skinWidth, centerY - offsetY);\r\n        this.rightCheck2.start = new Vector2(centerX, centerY + offsetY);\r\n        this.rightCheck2.end = new Vector2(centerX + this.hitbox.width * 0.5 + this.skinWidth, centerY + offsetY);\r\n    }\r\n}\r\n\r\nenum SniperJoeState {\r\n    amazing_entrance = 'amazing_entrance',\r\n    idle = 'idle',\r\n    pre_shoot = 'pre_shoot',\r\n    jump = 'jump',\r\n    jump_back = 'jump_back',\r\n    shooting = 'shooting',\r\n}\r\n\r\nclass SniperJoeAmazingEntranceState implements State {\r\n\r\n    public name: string;\r\n    public initialized: boolean;\r\n    public actor: SniperJoe;\r\n\r\n    constructor(actor: SniperJoe) {\r\n        this.actor = actor;\r\n    }\r\n\r\n    enter(): void {\r\n        this.initialized = true;\r\n        this.actor.animations.play(SniperJoeAnimationNames.jump);\r\n        this.actor.targetSpeed.x = -50;\r\n        this.actor.targetSpeed.y = -50;\r\n    }\r\n\r\n    update(): void {\r\n        if (this.actor.isOnGround) {\r\n            this.actor.fsm.changeState(SniperJoeState.idle);\r\n            return;\r\n        }\r\n    }\r\n\r\n    exit(): void {\r\n        this.initialized = false;\r\n    }\r\n}\r\n\r\nclass SniperJoeIdleState implements State {\r\n\r\n    public name: string;\r\n    public initialized: boolean;\r\n    public actor: SniperJoe;\r\n    private elapsedTime: number = 0;\r\n    private endTime: number = 0;\r\n    private minIdleTime: number = 300;\r\n    private maxIdleTime: number = 800;\r\n\r\n    constructor(actor: SniperJoe) {\r\n        this.actor = actor;\r\n    }\r\n\r\n    enter(): void {\r\n        this.initialized = true;\r\n        this.actor.animations.play(SniperJoeAnimationNames.idle);\r\n        this.actor.isShielded = true;\r\n        this.endTime = this.minIdleTime + Math.random() * (this.maxIdleTime - this.minIdleTime);\r\n    }\r\n\r\n    update(): void {\r\n        if (Helper.directionTo(this.actor, this.actor.myWorld.entityManager.player).x > 0) {\r\n            this.actor.fsm.changeState(SniperJoeState.jump_back);\r\n            return;\r\n        }\r\n\r\n        this.elapsedTime += fixedTimeMS;\r\n\r\n        if (this.elapsedTime > this.endTime) {\r\n            this.elapsedTime = 0;\r\n            Math.random() > 0.4 ? this.actor.fsm.changeState(SniperJoeState.pre_shoot) : this.actor.fsm.changeState(SniperJoeState.jump);\r\n            return;\r\n        }\r\n    }\r\n\r\n    exit(): void {\r\n        this.initialized = false;\r\n    }\r\n\r\n    public reset(): void {\r\n        this.elapsedTime = 0;\r\n    }\r\n}\r\n\r\nclass SniperJoePreShootState implements State {\r\n\r\n    public name: string;\r\n    public initialized: boolean;\r\n    public actor: SniperJoe;\r\n    private numTimesShot: number = 0;\r\n\r\n    constructor(actor: SniperJoe) {\r\n        this.actor = actor;\r\n    }\r\n\r\n    enter(): void {\r\n        this.initialized = true;\r\n        this.actor.animations.play(SniperJoeAnimationNames.pre_shoot);\r\n        this.actor.isShielded = false;\r\n\r\n        if (this.actor.fsm.prevState.name == SniperJoeState.jump) {\r\n            this.numTimesShot = 0;\r\n        }\r\n        else {\r\n            this.numTimesShot++;\r\n        }\r\n    }\r\n\r\n    update(): void {\r\n        if (this.numTimesShot > 3) {\r\n            this.numTimesShot = 0;\r\n            this.actor.fsm.changeState(SniperJoeState.jump);\r\n            return;\r\n        }\r\n\r\n        if (this.actor.animations.currentAnim.isFinished) {\r\n            this.actor.fsm.changeState(SniperJoeState.shooting);\r\n            return;\r\n        }\r\n    }\r\n\r\n    exit(): void {\r\n        this.initialized = false;\r\n    }\r\n}\r\n\r\nclass SniperJoeShootingState implements State {\r\n\r\n    public name: string;\r\n    public initialized: boolean;\r\n    public actor: SniperJoe;\r\n    private elapsedTime: number = 0;\r\n    private shootDelay: number = 400;\r\n    private numBullets: number = 0;\r\n    private waitAfterShootElapsedTime: number = 0;\r\n    private waitAfterShootEndTime: number = 250;\r\n    private hasShot: boolean = false;\r\n\r\n    constructor(actor: SniperJoe) {\r\n        this.actor = actor;\r\n    }\r\n\r\n    enter(): void {\r\n        this.initialized = true;\r\n        this.elapsedTime = this.shootDelay;\r\n        this.actor.isShielded = false;\r\n    }\r\n\r\n    update(): void {\r\n        this.elapsedTime += fixedTimeMS;\r\n\r\n        if (this.elapsedTime > this.shootDelay && !this.hasShot) {\r\n            this.elapsedTime = 0;\r\n            this.numBullets++;\r\n            this.actor.shoot(0);\r\n            this.hasShot = true;\r\n        }\r\n\r\n        if (this.hasShot) {\r\n            this.waitAfterShootElapsedTime += fixedTimeMS;\r\n\r\n            if (this.waitAfterShootElapsedTime > this.waitAfterShootEndTime) {\r\n                this.waitAfterShootElapsedTime = 0;\r\n                this.hasShot = false;\r\n                this.actor.fsm.changeState(SniperJoeState.idle);\r\n                return;\r\n            }\r\n        }\r\n    }\r\n\r\n    exit(): void {\r\n        this.initialized = false;\r\n        this.numBullets = 0;\r\n        this.elapsedTime = 0;\r\n        this.hasShot = false;\r\n        this.waitAfterShootElapsedTime = 0;\r\n    }\r\n}\r\n\r\nclass SniperJoeJumpState implements State {\r\n\r\n    public name: string;\r\n    public initialized: boolean;\r\n    public actor: SniperJoe;\r\n\r\n    constructor(actor: SniperJoe) {\r\n        this.actor = actor;\r\n    }\r\n\r\n    enter(): void {\r\n        this.initialized = true;\r\n        this.actor.animations.play(SniperJoeAnimationNames.jump);\r\n        this.actor.isOnGround = false;\r\n        this.actor.targetSpeed.y = -220;\r\n        this.actor.isShielded = false;\r\n    }\r\n\r\n    update(): void {\r\n        if (this.actor.isOnGround) {\r\n            this.actor.fsm.changeState(SniperJoeState.idle);\r\n        }\r\n    }\r\n\r\n    exit(): void {\r\n        this.initialized = false;\r\n    }\r\n}\r\n\r\nclass SniperJoeJumpBackState implements State {\r\n\r\n    public name: string;\r\n    public initialized: boolean;\r\n    public actor: SniperJoe;\r\n\r\n    constructor(actor: SniperJoe) {\r\n        this.actor = actor;\r\n    }\r\n\r\n    enter(): void {\r\n        this.initialized = true;\r\n        this.actor.animations.play(SniperJoeAnimationNames.jump);\r\n        this.actor.setFacingDirection(-1);\r\n        this.actor.isOnGround = false;\r\n        this.actor.targetSpeed.x = Math.cos(75 * (Math.PI / 180)) * 370;\r\n        this.actor.targetSpeed.y = Math.sin(75 * (Math.PI / 180)) * 300 * -1;\r\n        this.actor.isShielded = false;\r\n    }\r\n\r\n    update(): void {\r\n        if (this.actor.isOnGround) {\r\n            this.actor.targetSpeed.x = 0;\r\n            this.actor.targetSpeed.y = 0;\r\n            this.actor.setFacingDirection(1);\r\n            this.actor.fsm.changeState(SniperJoeState.idle);\r\n        }\r\n    }\r\n\r\n    exit(): void {\r\n        this.initialized = false;\r\n    }\r\n}","import { Enemy } from './enemy'\r\nimport { World } from '../world'\r\nimport { EntityType, TagType, AudioName } from '../konstants'\r\nimport { Player } from '../player'\r\nimport { Entity } from '../entity'\r\nimport { Helper } from '../helper'\r\nimport { MathUtil } from '../util/mathutil'\r\nimport { Bullet } from '../bullets/bullet'\r\nimport { State } from '../fsm/state'\r\nimport { StateMachine } from '../fsm/stateMachine'\r\nimport { KeyedCollection } from '../util/mathutil'\r\nimport { BombombShrapnel } from './bombomb_shrapnel'\r\n\r\nenum BombombAnimationNames {\r\n    idle = 'idle',\r\n}\r\n\r\nexport class Bombomb extends Enemy {\r\n\r\n    public fsm: StateMachine;\r\n    private player: Player;\r\n\r\n    constructor(myWorld: World, tag: TagType, e: EntityType, game: Phaser.Game, x: number, y: number, key: string, frame: string) {\r\n        super(myWorld, tag, e, game, x, y, key, frame);\r\n\r\n        this.player = this.myWorld.entityManager.player;\r\n        this.getPosition().x = x;\r\n        this.getPosition().y = y;\r\n        this.position.x = this.getPosition().x;\r\n        this.position.y = this.getPosition().y;\r\n        this.smoothed = false;\r\n        this.health = 1;\r\n        this.maxHealth = 1;\r\n        this.anchor.setTo(0.5, 0.5);\r\n        this.isShielded = false;\r\n\r\n        this.animations.add(BombombAnimationNames.idle, ['bombomb'], 10, false, false);\r\n        this.animations.play(BombombAnimationNames.idle);\r\n\r\n        this.hitbox = new Phaser.Rectangle(this.getPosition().x, this.getPosition().y, 14, 8);\r\n        this.hitboxOffset.x = -this.hitbox.halfWidth;\r\n        this.hitboxOffset.y = -this.hitbox.halfHeight;\r\n        this.updateRect();\r\n\r\n        this.fsm = new StateMachine();\r\n        this.fsm.addState(BombombState.rising, new BombombRisingState(this));\r\n        this.fsm.changeState(BombombState.rising);\r\n    }\r\n\r\n    public manualUpdate(): void {\r\n        // this.pGraphicsDebug.clear();\r\n\r\n        if (!this.alive) {\r\n            return;\r\n        }\r\n\r\n        this.frozen.update();\r\n        if (this.frozen.isFrozen) {\r\n            return;\r\n        }\r\n\r\n        this.fsm.currentState.update();\r\n        this.updateRect();\r\n    }\r\n\r\n    public takeDamage(damage: number): void {\r\n        if (this.isShielded) {\r\n            this.game.sound.play(AudioName.dink);\r\n            return;\r\n        }\r\n\r\n        if (this.health <= 0) {\r\n            return;\r\n        }\r\n\r\n        this.game.sound.play(AudioName.enemy_damage);\r\n        this.health -= damage;\r\n\r\n        if (this.health <= 0) {\r\n            this.health = 0;\r\n            this.myWorld.dropManager.dropPowerUp(this.getPosition().x - this.hitbox.halfWidth, this.getPosition().y + this.hitbox.halfHeight);\r\n            this.myWorld.createExplosionEffect(this.getPosition().x, this.getPosition().y);\r\n            this.kill();\r\n        }\r\n    }\r\n\r\n    public updateRect(): void {\r\n        this.hitbox.x = this.getPosition().x - 7;\r\n        this.hitbox.y = this.getPosition().y - 4;\r\n    }\r\n}\r\n\r\nenum BombombState {\r\n    rising = 'rising',\r\n    exploding = 'exploding',\r\n}\r\n\r\nclass BombombRisingState implements State {\r\n\r\n    name: string = BombombState.rising;\r\n    initialized: boolean;\r\n    actor: Bombomb;\r\n    elapsedTime: number = 0;\r\n    endTime: number = 700;\r\n    startY: number = 0;\r\n    endY: number = 0;\r\n\r\n    constructor(actor: Bombomb) {\r\n        this.actor = actor;\r\n    }\r\n\r\n    enter(): void {\r\n        this.initialized = true;\r\n        this.startY = this.actor.getPosition().y;\r\n        this.endY = this.startY - 185;\r\n    }\r\n\r\n    update(): void {\r\n        this.elapsedTime += this.actor.game.time.elapsedMS;\r\n        this.actor.getPosition().y = MathUtil.lerp(this.startY, this.endY, this.elapsedTime / this.endTime);\r\n        this.actor.position.y = this.actor.getPosition().y;\r\n\r\n        if (this.elapsedTime >= this.endTime) {\r\n            this.createShrapnel(this.actor.getPosition().x - 4.5, this.actor.getPosition().y, -80, -150);\r\n            this.createShrapnel(this.actor.getPosition().x - 4.5, this.actor.getPosition().y, -60, -130);\r\n            this.createShrapnel(this.actor.getPosition().x - 4.5, this.actor.getPosition().y, 60, -130);\r\n            this.createShrapnel(this.actor.getPosition().x - 4.5, this.actor.getPosition().y, 80, -150);\r\n            this.actor.takeDamage(1);\r\n            return;\r\n        }\r\n    }\r\n\r\n    exit(): void {\r\n        this.initialized = false;\r\n    }\r\n\r\n    private createShrapnel(x: number, y: number, xSpeed: number, ySpeed: number): void {\r\n        let shrap: BombombShrapnel = <BombombShrapnel>this.actor.myWorld.entityManager.createEntity(EntityType.bombomb_shrapnel, x, y);\r\n        shrap.targetSpeed.x = xSpeed;\r\n        shrap.targetSpeed.y = ySpeed;\r\n        this.actor.game.add.existing(shrap);\r\n        this.actor.myWorld.entityManager.addEntity(shrap);\r\n    }\r\n}","import { World } from '../world'\r\nimport { EntityType, TagType, AudioName } from '../konstants'\r\nimport { Player } from '../player'\r\nimport { Entity } from '../entity'\r\nimport { Helper } from '../helper'\r\nimport { MathUtil } from '../util/mathutil'\r\nimport { Bullet } from '../bullets/bullet'\r\nimport { State } from '../fsm/state'\r\nimport { StateMachine } from '../fsm/stateMachine'\r\nimport { KeyedCollection } from '../util/mathutil'\r\n\r\nenum BombombShrapnelAnimationNames {\r\n    idle = 'idle',\r\n}\r\n\r\nexport class BombombShrapnel extends Entity {\r\n\r\n    public horizontalSpeed: number = 35;\r\n    public verticalSpeed: number = 10;\r\n    public targetSpeed: Phaser.Point = new Phaser.Point();\r\n    public fsm: StateMachine;\r\n    private useGravity: boolean = true;\r\n    private gravityX: number = 0;\r\n    private gravityY: number = 450;\r\n\r\n    constructor(myWorld: World, tag: TagType, e: EntityType, game: Phaser.Game, x: number, y: number, key: string, frame: string) {\r\n        super(myWorld, tag, e, game, x, y, key, frame);\r\n\r\n        this.getPosition().x = x;\r\n        this.getPosition().y = y;\r\n        this.position.x = this.getPosition().x;\r\n        this.position.y = this.getPosition().y;\r\n        this.smoothed = false;\r\n        this.health = 1;\r\n        this.maxHealth = 1;\r\n        this.isShielded = false;\r\n        this.anchor.setTo(0.5, 0.5);\r\n\r\n        this.fsm = new StateMachine();\r\n        this.fsm.addState(BombombShrapnelState.idle, new BombombShrapnelIdleState(this));\r\n        this.fsm.changeState(BombombShrapnelState.idle);\r\n\r\n        this.animations.add(BombombShrapnelAnimationNames.idle, ['bombomb_shrapnel'], 10, false, false);\r\n        this.animations.play(BombombShrapnelAnimationNames.idle);\r\n\r\n        this.hitbox = new Phaser.Rectangle(this.getPosition().x, this.getPosition().y, 8, 6);\r\n        this.hitboxOffset.x = -this.hitbox.halfWidth;\r\n        this.hitboxOffset.y = -this.hitbox.halfHeight;\r\n        this.updateRect();\r\n    }\r\n\r\n    public manualUpdate(): void {\r\n        // this.pGraphicsDebug.clear();\r\n\r\n        if (!this.alive) {\r\n            return;\r\n        }\r\n\r\n        if (this.useGravity) {\r\n            this.targetSpeed.x += Math.abs(this.gravityX) * this.game.time.physicsElapsed;\r\n            this.targetSpeed.y += Math.abs(this.gravityY) * this.game.time.physicsElapsed;\r\n        }\r\n\r\n        if (this.targetSpeed.y >= 400) {\r\n            this.targetSpeed.y = 400;\r\n        }\r\n\r\n        this.velocity.x = this.targetSpeed.x;\r\n        this.velocity.y = this.targetSpeed.y;\r\n\r\n        this.getPosition().x += this.velocity.x * this.game.time.physicsElapsed;\r\n        this.getPosition().y += this.velocity.y * this.game.time.physicsElapsed;\r\n\r\n        this.position.x = (this.getPosition().x + 0.5) | 0;\r\n        this.position.y = this.getPosition().y;\r\n\r\n        this.fsm.currentState.update();\r\n        this.updateRect();\r\n    }\r\n\r\n    public takeDamage(damage: number): void {\r\n        if (this.isShielded) {\r\n            return;\r\n        }\r\n\r\n        if (this.health <= 0) {\r\n            return;\r\n        }\r\n\r\n        this.game.sound.play(AudioName.explosion);\r\n        this.health -= damage;\r\n\r\n        if (this.health <= 0) {\r\n            this.health = 0;\r\n            this.myWorld.createExplosionEffect(this.getPosition().x + (<Phaser.Rectangle>this.hitbox).halfWidth, this.getPosition().y + (<Phaser.Rectangle>this.hitbox).halfHeight);\r\n            this.kill();\r\n        }\r\n        else {\r\n\r\n        }\r\n    }\r\n}\r\n\r\nenum BombombShrapnelState {\r\n    idle = 'idle',\r\n}\r\n\r\nclass BombombShrapnelIdleState implements State {\r\n\r\n    name: string = BombombShrapnelState.idle;\r\n    initialized: boolean;\r\n    actor: BombombShrapnel;\r\n    elapsedTime: number = 0;\r\n    endTime: number = 2000;\r\n\r\n    constructor(actor: BombombShrapnel) {\r\n        this.actor = actor;\r\n    }\r\n\r\n    enter(): void {\r\n        this.initialized = true;\r\n    }\r\n\r\n    update(): void {\r\n        this.elapsedTime += this.actor.game.time.elapsedMS;\r\n    }\r\n\r\n    exit(): void {\r\n        this.initialized = false;\r\n    }\r\n}","import { Enemy } from './enemy'\r\nimport { World } from '../world'\r\nimport { Surface } from '../world'\r\nimport { EntityType, TagType, AudioName } from '../konstants'\r\nimport { Player } from '../player'\r\nimport { Entity } from '../entity'\r\nimport { Helper } from '../helper'\r\nimport { MathUtil } from '../util/mathutil'\r\nimport { Bullet } from '../bullets/bullet'\r\nimport { State } from '../fsm/state'\r\nimport { StateMachine } from '../fsm/stateMachine'\r\nimport { KeyedCollection } from '../util/mathutil'\r\nimport { SAT2D } from '../sat2d/sat2d'\r\nimport { Ray } from '../sat2d/ray'\r\nimport { RayIntersection } from '../sat2d/rayIntersection'\r\nimport { RayType } from '../sat2d/ray'\r\nimport { Vector2 } from '../sat2d/vector2'\r\nimport { fixedTime, fixedTimeMS } from '../main'\r\n\r\nenum SpineAnimations {\r\n    blink = 'blink',\r\n    paralyzed = 'paralyzed',\r\n}\r\n\r\nexport class Spine extends Enemy {\r\n    private playerHitBox: Phaser.Rectangle;\r\n    private playerLeftSide: Ray;\r\n    private playerRightSide: Ray;\r\n    private leftRay: Ray;\r\n    private rightRay: Ray;\r\n    private groundRayLeft: Ray;\r\n    private groundRayRight: Ray;\r\n    private skinWidth: number = 5;\r\n    private groundRayLeftHit: boolean = false;\r\n    private groundRayRightHit: boolean = false;\r\n    public playerDetected: boolean = false;\r\n    public player: Player;\r\n    public horizontalSpeed: number = 20;\r\n    public targetSpeed: Phaser.Point = new Phaser.Point(0, 0);\r\n    public fsm: StateMachine;\r\n    public previousTargetSpeedX: number = 0;\r\n\r\n    constructor(myWorld: World, tag: TagType, e: EntityType, game: Phaser.Game, x: number, y: number, key: string, frame: string) {\r\n        super(myWorld, tag, e, game, x, y, key, frame);\r\n\r\n        this.player = this.myWorld.entityManager.player;\r\n        this.playerHitBox = this.player.hitbox;\r\n        this.getPosition().x = x;\r\n        this.getPosition().y = y;\r\n        this.position.x = this.getPosition().x;\r\n        this.position.y = this.getPosition().y;\r\n        this.anchor.setTo(0.5, 1);\r\n        this.smoothed = false;\r\n        this.setFacingDirection(-1);\r\n        this.health = 1;\r\n        this.maxHealth = 1;\r\n        this.isShielded = false;\r\n\r\n        this.fsm = new StateMachine();\r\n        this.fsm.addState(SpineState.idle, new SpineIdleState(this));\r\n        this.fsm.addState(SpineState.active, new SpineActiveState(this));\r\n        this.fsm.addState(SpineState.paralyze, new SpineParalyzeState(this));\r\n        this.fsm.changeState(SpineState.idle);\r\n\r\n        this.animations.add(SpineAnimations.blink, ['spine_01', 'spine_02'], 10, true, false);\r\n        this.animations.add(SpineAnimations.paralyzed, ['spine_01'], 10, false, false);\r\n        this.animations.play(SpineAnimations.blink);\r\n\r\n        this.hitbox = new Phaser.Rectangle(this.getPosition().x, this.getPosition().y, 16, 8);\r\n        this.updateRect();\r\n\r\n        this.leftRay = new Ray(new Vector2(), new Vector2(), RayType.not_infinite);\r\n        this.rightRay = new Ray(new Vector2(), new Vector2(), RayType.not_infinite);\r\n        this.groundRayLeft = new Ray(new Vector2(), new Vector2(), RayType.not_infinite);\r\n        this.groundRayRight = new Ray(new Vector2(), new Vector2(), RayType.not_infinite);\r\n    }\r\n\r\n    public manualUpdate(): void {\r\n        // this.pGraphicsDebug.clear();\r\n\r\n        if (!this.alive) {\r\n            return;\r\n        }\r\n\r\n        this.frozen.update();\r\n        if (this.frozen.isFrozen) {\r\n            return;\r\n        }\r\n\r\n        this.fsm.currentState.update();\r\n\r\n        this.velocity.x = this.targetSpeed.x;\r\n        this.velocity.y = this.targetSpeed.y;\r\n\r\n        this.getPosition().x += this.velocity.x * fixedTime;\r\n        this.getPosition().y += this.velocity.y * fixedTime;\r\n\r\n        this.position.x = (this.getPosition().x + 0.5) | 0;\r\n        this.position.y = this.getPosition().y;\r\n\r\n        this.updateRect();\r\n        this.castRays();\r\n        this.detectPlayer();\r\n        this.showDebugRays();\r\n    }\r\n\r\n    public takeDamage(damage: number): void {\r\n        if (this.isShielded) {\r\n            this.game.sound.play(AudioName.dink);\r\n            return;\r\n        }\r\n\r\n        if (this.health <= 0) {\r\n            return;\r\n        }\r\n\r\n        this.game.sound.play(AudioName.enemy_damage);\r\n        this.health -= damage;\r\n\r\n        if (this.health <= 0) {\r\n            this.health = 0;\r\n            this.myWorld.dropManager.dropPowerUp(this.getPosition().x, this.getPosition().y);\r\n            this.myWorld.createExplosionEffect(this.getPosition().x, this.getPosition().y - (<Phaser.Rectangle>this.hitbox).halfHeight);\r\n            this.kill();\r\n        }\r\n        else {\r\n\r\n        }\r\n    }\r\n\r\n    public updateRect(): void {\r\n        this.hitbox.x = this.getPosition().x - 8;\r\n        this.hitbox.y = this.getPosition().y - 8;\r\n    }\r\n\r\n    public checkSurfaceCollisions(surfaces: Array<Surface>): void {\r\n        this.groundRayLeftHit = false;\r\n        this.groundRayRightHit = false;\r\n        let into: RayIntersection;\r\n        let tempSurface: Surface;\r\n        let surfaceHit: Surface;\r\n        let tempVec1: Vector2 = new Vector2();\r\n        let tempVec2: Vector2 = new Vector2();\r\n\r\n        for (let i = 0; i < surfaces.length; i++) {\r\n            tempSurface = surfaces[i];\r\n            let nx: number = tempSurface.dir.y;\r\n            let ny: number = -tempSurface.dir.x;\r\n\r\n            // Check floors (ny == -1 is a floor)\r\n            if (ny != -1) {\r\n                continue;\r\n            }\r\n\r\n            tempVec1.x = tempSurface.p1.x;\r\n            tempVec1.y = tempSurface.p1.y;\r\n            tempVec2.x = tempSurface.p2.x;\r\n            tempVec2.y = tempSurface.p2.y;\r\n\r\n            into = SAT2D.testRayVsRay(this.groundRayLeft, new Ray(tempVec1, tempVec2, RayType.not_infinite), into);\r\n\r\n            if (into != null) {\r\n                this.groundRayLeftHit = true;\r\n            }\r\n\r\n            into = SAT2D.testRayVsRay(this.groundRayRight, new Ray(tempVec1, tempVec2, RayType.not_infinite), into);\r\n\r\n            if (into != null) {\r\n                this.groundRayRightHit = true;\r\n            }\r\n\r\n            if (this.groundRayLeftHit || this.groundRayRightHit) {\r\n                surfaceHit = tempSurface;\r\n                break;\r\n            }\r\n        }\r\n\r\n        if (!this.groundRayLeftHit) {\r\n            this.targetSpeed.x = Math.abs(this.targetSpeed.x);\r\n            this.getPosition().x = surfaceHit.p1.x + this.hitbox.width * 0.5;\r\n        }\r\n\r\n        if (!this.groundRayRightHit) {\r\n            this.targetSpeed.x = -Math.abs(this.targetSpeed.x);\r\n            this.getPosition().x = surfaceHit.p2.x - this.hitbox.width * 0.5;\r\n        }\r\n    }\r\n\r\n    public paralyze() {\r\n        this.game.sound.play(AudioName.enemy_damage);\r\n        this.fsm.changeState(SpineState.paralyze);\r\n    }\r\n\r\n    private castRays(): void {\r\n        let centerX: number = this.getPosition().x;\r\n        let centerY: number = this.getPosition().y;\r\n\r\n        // cast ground rays\r\n        this.groundRayLeft.start = new Vector2(centerX - this.hitbox.width * 0.5, centerY - 5);\r\n        this.groundRayLeft.end = new Vector2(centerX - this.hitbox.width * 0.5, centerY + this.hitbox.height * 0.5);\r\n        this.groundRayRight.start = new Vector2(centerX + this.hitbox.width * 0.5, centerY - 5);\r\n        this.groundRayRight.end = new Vector2(centerX + this.hitbox.width * 0.5, centerY + this.hitbox.height * 0.5);\r\n\r\n        // cast left rays\r\n        let offsetY: number = 6;\r\n        this.leftRay.start = new Vector2(centerX, centerY - offsetY);\r\n        this.leftRay.end = new Vector2(centerX - 256, centerY - offsetY);\r\n\r\n        // cast right rays\r\n        offsetY = 6;\r\n        this.rightRay.start = new Vector2(centerX, centerY - offsetY);\r\n        this.rightRay.end = new Vector2(centerX + 256, centerY - offsetY);\r\n    }\r\n\r\n    private detectPlayer(): void {\r\n        this.playerDetected = false;\r\n        this.playerLeftSide = new Ray(new Vector2(this.playerHitBox.bottomLeft.x, this.playerHitBox.bottomLeft.y),\r\n            new Vector2(this.playerHitBox.topLeft.x, this.playerHitBox.topLeft.y), RayType.not_infinite);\r\n        this.playerRightSide = new Ray(new Vector2(this.playerHitBox.topRight.x, this.playerHitBox.topRight.y),\r\n            new Vector2(this.playerHitBox.bottomRight.x, this.playerHitBox.bottomRight.y), RayType.not_infinite);\r\n\r\n        let into: RayIntersection;\r\n        into = SAT2D.testRayVsRay(this.leftRay, this.playerRightSide, into);\r\n\r\n        if (into != null) {\r\n            this.playerDetected = true;\r\n            return;\r\n        }\r\n\r\n        into = SAT2D.testRayVsRay(this.rightRay, this.playerRightSide, into);\r\n\r\n        if (into != null) {\r\n            this.playerDetected = true;\r\n            return;\r\n        }\r\n    }\r\n\r\n    private showDebugRays(): void {\r\n        if (!this.myWorld.showDebug) {\r\n            return;\r\n        }\r\n\r\n        // this.pGraphicsDebug.lineStyle(1, 0);\r\n        // this.pGraphicsDebug.moveTo(this.leftRay.start.x, this.leftRay.start.y);\r\n        // this.pGraphicsDebug.lineTo(this.leftRay.end.x, this.leftRay.end.y);\r\n        // this.pGraphicsDebug.moveTo(this.rightRay.start.x, this.rightRay.start.y);\r\n        // this.pGraphicsDebug.lineTo(this.rightRay.end.x, this.rightRay.end.y);\r\n        // this.pGraphicsDebug.moveTo(this.groundRayLeft.start.x, this.groundRayLeft.start.y);\r\n        // this.pGraphicsDebug.lineTo(this.groundRayLeft.end.x, this.groundRayLeft.end.y);\r\n        // this.pGraphicsDebug.moveTo(this.groundRayRight.start.x, this.groundRayRight.start.y);\r\n        // this.pGraphicsDebug.lineTo(this.groundRayRight.end.x, this.groundRayRight.end.y);\r\n    }\r\n}\r\n\r\nenum SpineState {\r\n    idle = 'idle',\r\n    active = 'active',\r\n    paralyze = 'paralyze',\r\n}\r\n\r\nclass SpineIdleState implements State {\r\n\r\n    public name: string = SpineState.idle;\r\n    public initialized: boolean;\r\n    public actor: Spine;\r\n\r\n    constructor(actor: Spine) {\r\n        this.actor = actor;\r\n    }\r\n\r\n    enter(): void {\r\n        this.initialized = true;\r\n        if (this.actor.targetSpeed.x == 0) {\r\n            this.actor.targetSpeed.x = -this.actor.horizontalSpeed;\r\n        }\r\n        else {\r\n            this.actor.targetSpeed.x = this.actor.horizontalSpeed * MathUtil.sign(this.actor.targetSpeed.x);\r\n        }\r\n\r\n        if (this.actor.fsm.prevState != null && this.actor.fsm.prevState.name == SpineState.paralyze) {\r\n            this.actor.targetSpeed.x = this.actor.previousTargetSpeedX;\r\n        }\r\n\r\n        this.actor.animations.play(SpineAnimations.blink);\r\n    }\r\n\r\n    update(): void {\r\n        if (!this.actor.playerDetected) {\r\n            return;\r\n        }\r\n\r\n        if (!this.actor.player.isOnGround) {\r\n            return;\r\n        }\r\n\r\n        this.actor.fsm.changeState(SpineState.active);\r\n    }\r\n\r\n    exit(): void {\r\n        this.initialized = false;\r\n    }\r\n}\r\n\r\nclass SpineActiveState implements State {\r\n\r\n    public name: string = SpineState.active;\r\n    public initialized: boolean;\r\n    public actor: Spine;\r\n\r\n    constructor(actor: Spine) {\r\n        this.actor = actor;\r\n    }\r\n\r\n    enter(): void {\r\n        this.initialized = true;\r\n        this.actor.targetSpeed.x = MathUtil.sign(this.actor.targetSpeed.x) * this.actor.horizontalSpeed * 4;\r\n    }\r\n\r\n    update(): void {\r\n        if (this.actor.playerDetected) {\r\n            return;\r\n        }\r\n\r\n        if (this.actor.player.isOnGround) {\r\n            return;\r\n        }\r\n\r\n        this.actor.fsm.changeState(SpineState.idle);\r\n    }\r\n\r\n    exit(): void {\r\n        this.initialized = false;\r\n    }\r\n}\r\n\r\nclass SpineParalyzeState implements State {\r\n\r\n    public name: string = SpineState.paralyze;\r\n    public initialized: boolean;\r\n    public actor: Spine;\r\n    private elapsedTime: number = 0;\r\n    private endTime: number = 3000;\r\n\r\n    constructor(actor: Spine) {\r\n        this.actor = actor;\r\n    }\r\n\r\n    enter(): void {\r\n        this.initialized = true;\r\n        if (this.actor.fsm.prevState != null && this.actor.fsm.prevState.name != SpineState.paralyze) {\r\n            this.actor.previousTargetSpeedX = this.actor.targetSpeed.x;\r\n            this.actor.targetSpeed.x = 0;\r\n            this.actor.animations.play(SpineAnimations.paralyzed);\r\n        }\r\n    }\r\n\r\n    update(): void {\r\n        this.elapsedTime += fixedTimeMS;\r\n\r\n        if (this.elapsedTime >= this.endTime) {\r\n            this.actor.fsm.changeState(SpineState.idle);\r\n            return;\r\n        }\r\n    }\r\n\r\n    exit(): void {\r\n        this.initialized = false;\r\n        this.elapsedTime = 0;\r\n    }\r\n}","import { Enemy } from './enemy'\r\nimport { World } from '../world'\r\nimport { Surface } from '../world'\r\nimport { EntityType, TagType, AudioName } from '../konstants'\r\nimport { Player } from '../player'\r\nimport { Entity } from '../entity'\r\nimport { Helper } from '../helper'\r\nimport { MathUtil } from '../util/mathutil'\r\nimport { Bullet } from '../bullets/bullet'\r\nimport { State } from '../fsm/state'\r\nimport { StateMachine } from '../fsm/stateMachine'\r\nimport { KeyedCollection } from '../util/mathutil'\r\nimport { PowerUp } from '../powerups/powerup'\r\nimport { SAT2D } from '../sat2d/sat2d'\r\nimport { Ray } from '../sat2d/ray'\r\nimport { RayIntersection } from '../sat2d/rayIntersection'\r\nimport { RayType } from '../sat2d/ray'\r\nimport { Vector2 } from '../sat2d/vector2'\r\nimport { fixedTime, fixedTimeMS } from '../main'\r\n\r\nenum OctopusBatteryAnimations {\r\n    idle = 'idle',\r\n    open_eyes = 'open_eyes',\r\n    reverse_open_eyes = 'reverse_open_eyes',\r\n}\r\n\r\nexport class OctopusBattery extends Enemy {\r\n\r\n    public horizontalSpeed: number = 50;\r\n    public targetSpeed: Phaser.Point = new Phaser.Point(0, 0);\r\n    public prevTargetSpeed: Phaser.Point = new Phaser.Point(0, 0);\r\n    public fsm: StateMachine;\r\n    public speed: number = 0;\r\n    public horizontal: boolean = false;\r\n    public vertical: boolean = false;\r\n    public isFirstRun: boolean = true;\r\n    private leftRay: Ray;\r\n    private rightRay: Ray;\r\n    private upRay: Ray;\r\n    private downRay: Ray;\r\n\r\n    constructor(myWorld: World, tag: TagType, e: EntityType, game: Phaser.Game, x: number, y: number, key: string, frame: string) {\r\n        super(myWorld, tag, e, game, x, y, key, frame);\r\n\r\n        this.getPosition().x = x;\r\n        this.getPosition().y = y;\r\n        this.position.x = (this.getPosition().x + 0.5) | 0;\r\n        this.position.y = this.getPosition().y;\r\n        this.anchor.setTo(0.5, 0.5);\r\n        this.smoothed = false;\r\n        this.setFacingDirection(-1);\r\n        this.health = 5;\r\n        this.maxHealth = 5;\r\n        this.isShielded = false;\r\n\r\n        this.fsm = new StateMachine();\r\n        this.fsm.addState(OctopusBatteryState.idle, new OctopusBatteryIdleState(this));\r\n        this.fsm.addState(OctopusBatteryState.move, new OctopusBatteryMoveState(this));\r\n        this.fsm.changeState(OctopusBatteryState.idle);\r\n\r\n        this.animations.add(OctopusBatteryAnimations.idle, ['octopus_battery_01'], 10, false, false);\r\n        this.animations.add(OctopusBatteryAnimations.open_eyes, ['octopus_battery_01', 'octopus_battery_02', 'octopus_battery_03'], 7, false, false);\r\n        this.animations.add(OctopusBatteryAnimations.reverse_open_eyes, ['octopus_battery_03', 'octopus_battery_02', 'octopus_battery_01'], 7, false, false);\r\n        this.animations.play(OctopusBatteryAnimations.idle);\r\n\r\n        this.hitbox = new Phaser.Rectangle(this.getPosition().x, this.getPosition().y, 16, 16);\r\n        this.hitboxOffset.x = -8;\r\n        this.hitboxOffset.y = -8;\r\n        this.updateRect();\r\n\r\n        this.leftRay = new Ray(new Vector2(), new Vector2(), RayType.not_infinite);\r\n        this.rightRay = new Ray(new Vector2(), new Vector2(), RayType.not_infinite);\r\n        this.upRay = new Ray(new Vector2(), new Vector2(), RayType.not_infinite);\r\n        this.downRay = new Ray(new Vector2(), new Vector2(), RayType.not_infinite);\r\n\r\n        this.isFirstRun = false;\r\n        this.events.onKilled.add(() => {\r\n            this.resetProps();\r\n        });\r\n    }\r\n\r\n    public manualUpdate(): void {\r\n        // this.pGraphicsDebug.clear();\r\n\r\n        if (!this.alive) {\r\n            return;\r\n        }\r\n\r\n        this.frozen.update();\r\n        if (this.frozen.isFrozen) {\r\n            return;\r\n        }\r\n\r\n        this.fsm.currentState.update();\r\n\r\n        this.velocity.x = this.targetSpeed.x;\r\n        this.velocity.y = this.targetSpeed.y;\r\n\r\n        this.getPosition().x += this.velocity.x * fixedTime;\r\n        this.getPosition().y += this.velocity.y * fixedTime;\r\n\r\n        this.position.x = (this.getPosition().x + 0.5) | 0;\r\n        this.position.y = this.getPosition().y;\r\n\r\n        this.updateRect();\r\n        this.castRays();\r\n        this.showDebugRays();\r\n    }\r\n\r\n    public takeDamage(damage: number): void {\r\n        if (this.isShielded) {\r\n            this.game.sound.play(AudioName.dink);\r\n            return;\r\n        }\r\n\r\n        if (this.health <= 0) {\r\n            return;\r\n        }\r\n\r\n        this.game.sound.play(AudioName.enemy_damage);\r\n        this.health -= damage;\r\n\r\n        if (this.health <= 0) {\r\n            this.health = 0;\r\n            this.myWorld.dropManager.dropPowerUp(this.getPosition().x - this.hitbox.halfWidth, this.getPosition().y);\r\n            this.myWorld.createExplosionEffect(this.getPosition().x, this.getPosition().y - (<Phaser.Rectangle>this.hitbox).halfHeight);\r\n            this.kill();\r\n        }\r\n        else {\r\n\r\n        }\r\n    }\r\n\r\n    public checkSurfaceCollisions(surfaces: Array<Surface>): void {\r\n        if (this.horizontal) {\r\n            this.checkHorizontalRaycasts(surfaces);\r\n        }\r\n        else if (this.vertical) {\r\n            this.checkVerticalRaycasts(surfaces);\r\n        }\r\n    }\r\n\r\n    public castRays(): void {\r\n        let centerX: number = this.getPosition().x;\r\n        let centerY: number = this.getPosition().y;\r\n\r\n        if (this.horizontal) {\r\n            // cast left rays\r\n            this.leftRay.start = new Vector2(centerX, centerY);\r\n            this.leftRay.end = new Vector2(centerX - this.hitbox.width, centerY);\r\n\r\n            // cast right rays\r\n            this.rightRay.start = new Vector2(centerX, centerY);\r\n            this.rightRay.end = new Vector2(centerX + this.hitbox.width, centerY);\r\n        }\r\n        else if (this.vertical) {\r\n            // cast up rays\r\n            this.upRay.start = new Vector2(centerX, centerY);\r\n            this.upRay.end = new Vector2(centerX, centerY - this.hitbox.height);\r\n\r\n            // cast down rays\r\n            this.downRay.start = new Vector2(centerX, centerY);\r\n            this.downRay.end = new Vector2(centerX, centerY + this.hitbox.height);\r\n        }\r\n    }\r\n\r\n    private checkHorizontalRaycasts(surfaces: Array<Surface>): void {\r\n        let into: RayIntersection;\r\n\r\n        for (let j = 0; j < surfaces.length; j++) {\r\n            let surface: Surface = surfaces[j];\r\n            let nx: number = surface.dir.y;\r\n            let ny: number = -surface.dir.x;\r\n\r\n            // Check right walls\r\n            if (nx == -1 && this.getVelocity().x > 0) {\r\n                into = SAT2D.testRayVsRay(this.rightRay, new Ray(new Vector2(surface.p1.x, surface.p1.y),\r\n                    new Vector2(surface.p2.x, surface.p2.y), RayType.not_infinite), into);\r\n\r\n                if (into != null) {\r\n\r\n                    let dx: number = into.ray1.end.x - into.ray1.start.x;\r\n                    let dy: number = into.ray1.end.y - into.ray1.start.y;\r\n                    let distance: number = Math.sqrt(dx * dx + dy * dy);\r\n                    let trueDistance: number = distance * into.u1;\r\n\r\n                    let contactX: number = into.ray1.start.x + trueDistance;\r\n                    let contactY: number = into.ray1.start.y;\r\n\r\n                    // this.pGraphicsDebug.lineStyle(1, 0);\r\n                    // this.pGraphicsDebug.beginFill(0xff0000, 0.5);\r\n                    // this.pGraphicsDebug.drawCircle(contactX, contactY, 5);\r\n\r\n                    if (trueDistance > this.hitbox.halfWidth) {\r\n                        continue;\r\n                    }\r\n\r\n                    this.getPosition().x = contactX - this.hitbox.halfWidth;\r\n                    this.fsm.changeState(OctopusBatteryState.idle)\r\n                    return;\r\n                }\r\n            }\r\n\r\n            // Check left walls\r\n            if (nx == 1 && this.getVelocity().x < 0) {\r\n                into = SAT2D.testRayVsRay(this.leftRay, new Ray(new Vector2(surface.p1.x, surface.p1.y),\r\n                    new Vector2(surface.p2.x, surface.p2.y), RayType.not_infinite), into);\r\n\r\n                if (into != null) {\r\n\r\n                    let dx: number = into.ray1.end.x - into.ray1.start.x;\r\n                    let dy: number = into.ray1.end.y - into.ray1.start.y;\r\n                    let distance: number = Math.sqrt(dx * dx + dy * dy);\r\n                    let trueDistance: number = distance * into.u1;\r\n\r\n                    let contactX: number = into.ray1.start.x - trueDistance;\r\n                    let contactY: number = into.ray1.start.y;\r\n\r\n                    // this.pGraphicsDebug.lineStyle(1, 0);\r\n                    // this.pGraphicsDebug.beginFill(0xff0000, 0.5);\r\n                    // this.pGraphicsDebug.drawCircle(contactX, contactY, 5);\r\n\r\n                    if (trueDistance > this.hitbox.halfWidth) {\r\n                        continue;\r\n                    }\r\n\r\n                    this.getPosition().x = contactX + this.hitbox.halfWidth;\r\n                    this.fsm.changeState(OctopusBatteryState.idle)\r\n                    return;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    private checkVerticalRaycasts(surfaces: Array<Surface>): void {\r\n        let into: RayIntersection;\r\n\r\n        for (let j = 0; j < surfaces.length; j++) {\r\n            let surface: Surface = surfaces[j];\r\n            let nx: number = surface.dir.y;\r\n            let ny: number = -surface.dir.x;\r\n\r\n            // Check floors\r\n            if (ny == -1 && this.getVelocity().y > 0) {\r\n                into = SAT2D.testRayVsRay(this.downRay, new Ray(new Vector2(surface.p1.x, surface.p1.y),\r\n                    new Vector2(surface.p2.x, surface.p2.y), RayType.not_infinite), into);\r\n\r\n                if (into != null) {\r\n\r\n                    let dx: number = into.ray1.end.x - into.ray1.start.x;\r\n                    let dy: number = into.ray1.end.y - into.ray1.start.y;\r\n                    let distance: number = Math.sqrt(dx * dx + dy * dy);\r\n                    let trueDistance: number = distance * into.u1;\r\n\r\n                    let contactX: number = into.ray1.start.x + into.ray1.dir.x * into.u1;\r\n                    let contactY: number = into.ray1.start.y + trueDistance;\r\n\r\n                    // this.pGraphicsDebug.drawCircle(contactX, contactY, 3);\r\n\r\n                    if (trueDistance > this.hitbox.halfHeight) {\r\n                        continue;\r\n                    }\r\n\r\n                    this.getPosition().y = contactY - this.hitbox.halfHeight;\r\n                    this.fsm.changeState(OctopusBatteryState.idle)\r\n                    return;\r\n                }\r\n            }\r\n\r\n            // Check ceilings\r\n            if (ny == 1 && this.getVelocity().y < 0) {\r\n                into = SAT2D.testRayVsRay(this.upRay, new Ray(new Vector2(surface.p1.x, surface.p1.y),\r\n                    new Vector2(surface.p2.x, surface.p2.y), RayType.not_infinite), into);\r\n\r\n                if (into != null) {\r\n\r\n                    let dx: number = into.ray1.end.x - into.ray1.start.x;\r\n                    let dy: number = into.ray1.end.y - into.ray1.start.y;\r\n                    let distance: number = Math.sqrt(dx * dx + dy * dy);\r\n                    let trueDistance: number = distance * into.u1;\r\n\r\n                    let contactX: number = into.ray1.start.x + into.ray1.dir.x * into.u1;\r\n                    let contactY: number = into.ray1.start.y - trueDistance;\r\n\r\n                    // this.pGraphicsDebug.drawCircle(contactX, contactY, 3);\r\n\r\n                    if (trueDistance > this.hitbox.halfHeight) {\r\n                        continue;\r\n                    }\r\n\r\n                    this.getPosition().y = contactY + this.hitbox.halfHeight;\r\n                    this.fsm.changeState(OctopusBatteryState.idle)\r\n                    return;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    private resetProps(): void {\r\n        this.isFirstRun = true;\r\n    }\r\n\r\n    private showDebugRays(): void {\r\n        // this.pGraphicsDebug.lineStyle(1, 0);\r\n        // this.pGraphicsDebug.moveTo(this.leftRay.start.x, this.leftRay.start.y);\r\n        // this.pGraphicsDebug.lineTo(this.leftRay.end.x, this.leftRay.end.y);\r\n        // this.pGraphicsDebug.moveTo(this.rightRay.start.x, this.rightRay.start.y);\r\n        // this.pGraphicsDebug.lineTo(this.rightRay.end.x, this.rightRay.end.y);\r\n        // this.pGraphicsDebug.moveTo(this.upRay.start.x, this.upRay.start.y);\r\n        // this.pGraphicsDebug.lineTo(this.upRay.end.x, this.upRay.end.y);\r\n        // this.pGraphicsDebug.moveTo(this.downRay.start.x, this.downRay.start.y);\r\n        // this.pGraphicsDebug.lineTo(this.downRay.end.x, this.downRay.end.y);\r\n    }\r\n}\r\n\r\nenum OctopusBatteryState {\r\n    idle = 'idle',\r\n    move = 'move',\r\n}\r\n\r\nclass OctopusBatteryIdleState implements State {\r\n\r\n    public name: string = OctopusBatteryState.idle;\r\n    public initialized: boolean;\r\n    public actor: OctopusBattery;\r\n    private elapsedTime: number = 0;\r\n    private minEndTime: number = 1000;\r\n    private maxEndTime: number = 2500;\r\n    private endTime: number = 0;\r\n\r\n    constructor(actor: OctopusBattery) {\r\n        this.actor = actor;\r\n    }\r\n\r\n    enter(): void {\r\n        this.initialized = true;\r\n\r\n        if (this.actor.isFirstRun) {\r\n            this.endTime = 0;\r\n        }\r\n        else {\r\n            this.endTime = Math.random() * (this.maxEndTime - this.minEndTime) + this.minEndTime;\r\n        }\r\n    }\r\n\r\n    update(): void {\r\n        if (this.actor.animations.currentAnim.isFinished) {\r\n            this.actor.animations.play(OctopusBatteryAnimations.idle);\r\n        }\r\n\r\n        this.elapsedTime += fixedTimeMS;\r\n\r\n        if (this.elapsedTime >= this.endTime) {\r\n            this.actor.fsm.changeState(OctopusBatteryState.move);\r\n            return;\r\n        }\r\n    }\r\n\r\n    exit(): void {\r\n        this.initialized = false;\r\n        this.elapsedTime = 0;\r\n    }\r\n}\r\n\r\nclass OctopusBatteryMoveState implements State {\r\n\r\n    public name: string = OctopusBatteryState.move;\r\n    public initialized: boolean;\r\n    public actor: OctopusBattery;\r\n\r\n    constructor(actor: OctopusBattery) {\r\n        this.actor = actor;\r\n    }\r\n\r\n    enter(): void {\r\n        this.initialized = true;\r\n\r\n        this.actor.animations.play(OctopusBatteryAnimations.open_eyes);\r\n\r\n        if (this.actor.horizontal) {\r\n            let dir: number = MathUtil.sign(this.actor.prevTargetSpeed.x) * -1;\r\n            this.actor.targetSpeed.x = this.actor.speed * dir;\r\n        }\r\n        else if (this.actor.vertical) {\r\n            let dir: number = MathUtil.sign(this.actor.prevTargetSpeed.y) * -1;\r\n            this.actor.targetSpeed.y = this.actor.speed * dir;\r\n        }\r\n        else {\r\n            console.error('Forgot to set horizontal/vertical!');\r\n        }\r\n    }\r\n\r\n    update(): void {\r\n\r\n    }\r\n\r\n    exit(): void {\r\n        this.initialized = false;\r\n\r\n        this.actor.animations.play(OctopusBatteryAnimations.reverse_open_eyes);\r\n        this.actor.prevTargetSpeed.x = this.actor.targetSpeed.x;\r\n        this.actor.prevTargetSpeed.y = this.actor.targetSpeed.y;\r\n        this.actor.targetSpeed.x = 0;\r\n        this.actor.targetSpeed.y = 0;\r\n    }\r\n}","import { Enemy } from './enemy'\r\nimport { World } from '../world'\r\nimport { EntityType, TagType, AudioName } from '../konstants'\r\nimport { Player } from '../player'\r\nimport { Entity } from '../entity'\r\nimport { Helper } from '../helper'\r\nimport { State } from '../fsm/state'\r\nimport { StateMachine } from '../fsm/stateMachine'\r\nimport { KeyedCollection } from '../util/mathutil'\r\nimport { MathUtil } from '../util/mathutil'\r\nimport { fixedTime, fixedTimeMS } from '../main'\r\n\r\nenum KillerBulletAnimations {\r\n    idle = 'idle'\r\n}\r\nexport class KillerBullet extends Enemy {\r\n\r\n    public horizontalSpeed: number = 50;\r\n    public verticalSpeed: number = 40;\r\n    public initialPos: Phaser.Point = new Phaser.Point(0, 0);\r\n    public fsm: StateMachine;\r\n\r\n    constructor(myWorld: World, tag: TagType, myEntityType: EntityType, game: Phaser.Game, x: number, y: number,\r\n        key: string, frame: string) {\r\n        super(myWorld, tag, myEntityType, game, x, y, key, frame);\r\n\r\n        this.initialPos.x = this.getPosition().x;\r\n        this.initialPos.y = this.myWorld.entityManager.player.getPosition().y;\r\n        this.getPosition().x = x;\r\n        this.getPosition().y = this.initialPos.y;\r\n        this.position.y = this.getPosition().y;\r\n        this.position.x = (this.getPosition().x + 0.5) | 0;\r\n        this.anchor.setTo(0.5, 0.5);\r\n        this.smoothed = false;\r\n        this.setFacingDirection(1);\r\n        this.health = 1;\r\n        this.maxHealth = 1;\r\n\r\n        this.animations.add(KillerBulletAnimations.idle, ['killer_bullet'], 10, false, false);\r\n        this.animations.play(KillerBulletAnimations.idle);\r\n\r\n        this.hitbox = new Phaser.Rectangle(this.getPosition().x, this.getPosition().y, 16, 16);\r\n        this.updateRect();\r\n\r\n        this.fsm = new StateMachine();\r\n        this.fsm.addState(KillerBulletState.move, new KillerBulletMoveState(this));\r\n        this.fsm.addState(KillerBulletState.explode, new KillerBulletExplodeState(this));\r\n        this.fsm.changeState(KillerBulletState.move);\r\n    }\r\n\r\n    public manualUpdate(): void {\r\n        // this.pGraphicsDebug.clear();\r\n\r\n        if (!this.alive) {\r\n            return;\r\n        }\r\n\r\n        this.frozen.update();\r\n        if (this.frozen.isFrozen) {\r\n            return;\r\n        }\r\n\r\n        this.fsm.currentState.update();\r\n        this.updateRect();\r\n    }\r\n\r\n    public takeDamage(damage: number): void {\r\n        if (this.isShielded) {\r\n            this.game.sound.play(AudioName.dink);\r\n            return;\r\n        }\r\n\r\n        if (this.health <= 0) {\r\n            return;\r\n        }\r\n\r\n        this.game.sound.play(AudioName.enemy_damage);\r\n        this.health -= damage;\r\n\r\n        if (this.health <= 0) {\r\n            this.health = 0;\r\n            let entity: Entity = this.myWorld.entityManager.createEntity(EntityType.explosion_from_killer_bullet, this.getPosition().x, this.getPosition().y);\r\n            this.myWorld.entityManager.addEntity(entity);\r\n            this.myWorld.game.add.existing(entity);\r\n            this.myWorld.dropManager.dropPowerUp(this.getPosition().x, this.getPosition().y);\r\n            this.kill();\r\n        }\r\n    }\r\n\r\n    public updateRect(): void {\r\n        this.hitbox.x = this.getPosition().x - this.hitbox.width * 0.5;\r\n        this.hitbox.y = this.getPosition().y - this.hitbox.height * 0.5;\r\n    }\r\n}\r\n\r\nenum KillerBulletState {\r\n    move = 'attack',\r\n    explode = 'goBackUp',\r\n}\r\n\r\nclass KillerBulletMoveState implements State {\r\n\r\n    name: string = KillerBulletState.move;\r\n    initialized: boolean;\r\n    actor: KillerBullet;\r\n    private amplitude: number = 0;\r\n    private count: number = 0;\r\n\r\n    constructor(actor: KillerBullet) {\r\n        this.actor = actor;\r\n    }\r\n\r\n    enter(): void {\r\n        this.initialized = true;\r\n    }\r\n\r\n    update(): void {\r\n        this.count += 2;\r\n        this.actor.getPosition().y = this.actor.verticalSpeed * Math.sin(this.count * fixedTime) + this.actor.initialPos.y;\r\n        this.actor.getPosition().x += -this.actor.horizontalSpeed * fixedTime;\r\n\r\n        this.actor.position.y = this.actor.getPosition().y;\r\n        this.actor.position.x = (this.actor.getPosition().x + 0.5) | 0;\r\n    }\r\n\r\n    exit(): void {\r\n        this.initialized = false;\r\n    }\r\n}\r\n\r\nclass KillerBulletExplodeState implements State {\r\n\r\n    name: string = KillerBulletState.explode;\r\n    initialized: boolean;\r\n    actor: KillerBullet;\r\n\r\n    constructor(actor: KillerBullet) {\r\n        this.actor = actor;\r\n    }\r\n\r\n    enter(): void {\r\n        this.initialized = true;\r\n    }\r\n\r\n    update(): void {\r\n\r\n    }\r\n\r\n    exit(): void {\r\n        this.initialized = false;\r\n    }\r\n}","import { World } from '../world'\r\nimport { EntityType, TagType, AudioName } from '../konstants'\r\nimport { Player } from '../player'\r\nimport { Entity } from '../entity'\r\nimport { Helper } from '../helper'\r\nimport { State } from '../fsm/state'\r\nimport { StateMachine } from '../fsm/stateMachine'\r\nimport { KeyedCollection } from '../util/mathutil'\r\nimport { MathUtil } from '../util/mathutil'\r\n\r\nenum ExplosionAnimations {\r\n    explode = 'explode'\r\n}\r\n\r\nexport class Explosion extends Entity {\r\n    \r\n    constructor(myWorld: World, tag: TagType, myEntityType: EntityType, game: Phaser.Game, x: number, y: number, key: string, frame: string) {\r\n        super(myWorld, tag, myEntityType, game, x, y, key, frame);\r\n\r\n        this.getPosition().x = x;\r\n        this.getPosition().y = y;\r\n        this.position.y = this.getPosition().y;\r\n        this.position.x = (this.getPosition().x + 0.5) | 0;\r\n        this.anchor.setTo(0.5, 0.5);\r\n        this.smoothed = false;\r\n        this.setFacingDirection(1);\r\n        this.health = 1;\r\n        this.maxHealth = 1;\r\n\r\n        this.animations.add(ExplosionAnimations.explode,\r\n            ['explosion_01', 'explosion_02', 'explosion_03', 'explosion_04', 'explosion_05', 'explosion_06', 'explosion_07'\r\n                , 'explosion_08', 'explosion_09', 'explosion_10', 'explosion_11'], 14, false, false);\r\n        this.animations.play(ExplosionAnimations.explode);\r\n\r\n        this.hitbox = new Phaser.Rectangle(this.getPosition().x, this.getPosition().y, 36, 36);\r\n        this.updateRect();\r\n    }\r\n\r\n    public manualUpdate(): void {\r\n        if (!this.alive) {\r\n            return;\r\n        }\r\n\r\n        if (this.animations.currentAnim != null || this.animations.currentAnim != undefined) {\r\n            if (this.animations.currentAnim.isFinished) {\r\n                this.takeDamage(9999);\r\n                return;\r\n            }\r\n        }\r\n\r\n        this.updateRect();\r\n    }\r\n\r\n    public takeDamage(damage: number): void {\r\n        if (this.health <= 0) {\r\n            return;\r\n        }\r\n\r\n        this.health -= damage;\r\n\r\n        if (this.health <= 0) {\r\n            this.health = 0;\r\n            this.kill();\r\n        }\r\n    }\r\n\r\n    public updateRect(): void {\r\n        this.hitbox.x = this.getPosition().x - this.hitbox.width * 0.5;\r\n        this.hitbox.y = this.getPosition().y - this.hitbox.height * 0.5;\r\n    }\r\n}","import { World } from '../world'\r\nimport { Enemy } from '../enemies/enemy'\r\nimport { EntityType, TagType, AudioName } from '../konstants'\r\nimport { Player } from '../player'\r\nimport { Entity } from '../entity'\r\nimport { Helper } from '../helper'\r\nimport { MathUtil } from '../util/mathutil'\r\nimport { Bullet } from '../bullets/bullet'\r\nimport { State } from '../fsm/state'\r\nimport { StateMachine } from '../fsm/stateMachine'\r\nimport { KeyedCollection } from '../util/mathutil'\r\nimport { fixedTime, fixedTimeMS } from '../main'\r\n\r\nexport enum MountType {\r\n    Ceiling = 'Ceiling',\r\n    Floor = 'Floor',\r\n}\r\n\r\nenum ScrewBomberAnimationNames {\r\n    idle = 'idle',\r\n    open = 'open',\r\n    close = 'close',\r\n    spin = 'spin',\r\n}\r\n\r\nexport class ScrewBomber extends Enemy {\r\n\r\n    public fsm: StateMachine;\r\n    private mountType: MountType;\r\n    private bulletYDirection: number = 1;\r\n    private hitBoxOffset: Phaser.Point = new Phaser.Point();\r\n\r\n    constructor(myWorld: World, tag: TagType, myEntityType: EntityType, game: Phaser.Game, x: number, y: number, key: string, frame: string) {\r\n        super(myWorld, tag, myEntityType, game, x, y, key, frame);\r\n\r\n        this.fsm = new StateMachine();\r\n        this.fsm.addState(ScrewBomberState.wait_for_player, new ScrewBomberWaitForPlayerState(this));\r\n        this.fsm.addState(ScrewBomberState.opening, new ScrewBomberOpeningState(this));\r\n        this.fsm.addState(ScrewBomberState.closing, new ScrewBomberClosingState(this));\r\n        this.fsm.addState(ScrewBomberState.wait_to_close, new ScrewBomberWaitToCloseState(this));\r\n        this.fsm.addState(ScrewBomberState.shooting, new ScrewBomberShootingState(this));\r\n        this.fsm.addState(ScrewBomberState.rest_after_shoot, new ScrewBomberRestAfterShootState(this));\r\n        this.fsm.changeState(ScrewBomberState.wait_for_player);\r\n\r\n        this.getPosition().x = x;\r\n        this.getPosition().y = y;\r\n        this.position.x = (this.getPosition().x + 0.5) | 0;\r\n        this.position.y = this.getPosition().y;\r\n        this.smoothed = false;\r\n        this.health = 1;\r\n        this.maxHealth = 1;\r\n        this.isShielded = false;\r\n        this.anchor.setTo(0.5, 0.5);\r\n\r\n        this.animations.add(ScrewBomberAnimationNames.idle, ['screw_bomber_01'], 10, false, false);\r\n        this.animations.add(ScrewBomberAnimationNames.open, ['screw_bomber_01', 'screw_bomber_02'], 5, false, false);\r\n        this.animations.add(ScrewBomberAnimationNames.close, ['screw_bomber_02', 'screw_bomber_01'], 5, false, false);\r\n        this.animations.add(ScrewBomberAnimationNames.spin, ['screw_bomber_02', 'screw_bomber_03', 'screw_bomber_04',], 7, true, false);\r\n        this.animations.play(ScrewBomberAnimationNames.idle);\r\n\r\n        this.hitbox = new Phaser.Rectangle(this.getPosition().x, this.getPosition().y, 16, 8);\r\n        this.updateRect();\r\n    }\r\n\r\n    public manualUpdate(): void {\r\n        // this.pGraphicsDebug.clear();\r\n\r\n        if (!this.alive) {\r\n            return;\r\n        }\r\n\r\n        this.frozen.update();\r\n        if (this.frozen.isFrozen) {\r\n            return;\r\n        }\r\n\r\n        this.fsm.currentState.update();\r\n        this.updateRect();\r\n    }\r\n\r\n    public takeDamage(damage: number): void {\r\n        if (this.isShielded) {\r\n            this.game.sound.play(AudioName.dink);\r\n            return;\r\n        }\r\n\r\n        if (this.health <= 0) {\r\n            return;\r\n        }\r\n\r\n        this.game.sound.play(AudioName.enemy_damage);\r\n        this.health -= damage;\r\n\r\n        if (this.health <= 0) {\r\n            this.health = 0;\r\n            this.myWorld.dropManager.dropPowerUp(this.getPosition().x, this.getPosition().y);\r\n            let y: number = this.mountType == MountType.Floor ? 8 : -8; // offset the y position slightly; aesthetics!\r\n            this.myWorld.createExplosionEffect(this.getPosition().x + (<Phaser.Rectangle>this.hitbox).halfWidth, this.getPosition().y + y);\r\n            this.kill();\r\n        }\r\n    }\r\n\r\n    public shoot(angle: number): void {\r\n        let height: number = 0;\r\n        switch (this.mountType) {\r\n            case MountType.Floor:\r\n                height = -3;\r\n                break;\r\n\r\n            case MountType.Ceiling:\r\n                height = 6;\r\n                break;\r\n        }\r\n\r\n        let bullet: Bullet = this.myWorld.entityManager.createBitmapBullet(this, this.position.x, this.position.y + height, 6, 6, EntityType.bullet, EntityType.screw_bomber_bullet);\r\n        bullet.horizontalSpeed = 125;\r\n        let cos: number = Math.cos(angle * (Math.PI / 180));\r\n        let sin: number = Math.sin(angle * (Math.PI / 180));\r\n        bullet.targetSpeed.x = bullet.horizontalSpeed * cos * -this.getFacingDirection();\r\n        bullet.targetSpeed.y = bullet.horizontalSpeed * sin * -this.getFacingDirection() * -this.bulletYDirection;\r\n    }\r\n\r\n    public updateRect(): void {\r\n        this.hitbox.x = this.getPosition().x + this.hitBoxOffset.x;\r\n        this.hitbox.y = this.getPosition().y + this.hitBoxOffset.y;\r\n    }\r\n\r\n    public setMountByRotation(rotation: number): void {\r\n        switch (rotation) {\r\n            // Mounted to floor\r\n            case 0:\r\n                this.mountType = MountType.Floor;\r\n                this.bulletYDirection = -1;\r\n                this.useIdleHitbox();\r\n                break;\r\n\r\n            // Mounted to ceiling\r\n            case 180:\r\n                this.mountType = MountType.Ceiling;\r\n                this.bulletYDirection = 1;\r\n                this.height = -this.height;\r\n\r\n                this.getPosition().x = this.position.x - 16;\r\n                this.getPosition().y = this.position.y + 16;\r\n                this.position.x = (this.getPosition().x + 0.5) | 0;\r\n                this.position.y = this.getPosition().y;\r\n                this.useIdleHitbox();\r\n                break;\r\n\r\n            default:\r\n                console.error('Screw Bomber: rotation doesnt exist');\r\n                break;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Modifies the hitbox to be larger when shooting.\r\n     */\r\n    public useShootingHitbox(): void {\r\n        switch (this.mountType) {\r\n            case MountType.Floor:\r\n                this.hitBoxOffset.x = -8;\r\n                this.hitBoxOffset.y = -8;\r\n                this.hitbox.width = 16;\r\n                this.hitbox.height = 16;\r\n                break;\r\n\r\n            case MountType.Ceiling:\r\n                this.hitBoxOffset.x = -8;\r\n                this.hitBoxOffset.y = -8;\r\n                this.hitbox.width = 16;\r\n                this.hitbox.height = 16;\r\n                break;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Modifies the hitbox to be smaller when idle.\r\n     */\r\n    public useIdleHitbox(): void {\r\n        switch (this.mountType) {\r\n            case MountType.Floor:\r\n                this.hitBoxOffset.x = -8;\r\n                this.hitBoxOffset.y = 0;\r\n                this.hitbox.width = 16;\r\n                this.hitbox.height = 8;\r\n                break;\r\n\r\n            case MountType.Ceiling:\r\n                this.hitBoxOffset.x = -8;\r\n                this.hitBoxOffset.y = -8;\r\n                this.hitbox.width = 16;\r\n                this.hitbox.height = 8;\r\n                break;\r\n        }\r\n    }\r\n}\r\n\r\nenum ScrewBomberState {\r\n    wait_for_player = 'wait_for_player',\r\n    rest_after_shoot = 'idle',\r\n    opening = 'opening',\r\n    closing = 'closing',\r\n    wait_to_close = 'wait_to_close',\r\n    shooting = 'shooting',\r\n}\r\n\r\nclass ScrewBomberWaitForPlayerState implements State {\r\n\r\n    public name: string = ScrewBomberState.wait_for_player;\r\n    public initialized: boolean;\r\n    public actor: ScrewBomber;\r\n\r\n    constructor(actor: ScrewBomber) {\r\n        this.actor = actor;\r\n    }\r\n\r\n    enter(): void {\r\n        this.initialized = true;\r\n        this.actor.animations.play(ScrewBomberAnimationNames.idle);\r\n    }\r\n\r\n    update(): void {\r\n        let xDist: number = Math.abs(Math.abs(this.actor.getPosition().x) - Math.abs(this.actor.myWorld.entityManager.player.getPosition().x));\r\n        if (xDist > 72) {\r\n            return;\r\n        }\r\n\r\n        this.actor.fsm.changeState(ScrewBomberState.opening);\r\n    }\r\n\r\n    exit(): void {\r\n        this.initialized = false;\r\n    }\r\n}\r\n\r\nclass ScrewBomberOpeningState implements State {\r\n\r\n    public name: string = ScrewBomberState.opening;\r\n    public initialized: boolean;\r\n    public actor: ScrewBomber;\r\n    private elapsedWaitTime: number = 0;\r\n    private waitEndTime: number = 500;\r\n    private isOpening: boolean = false;\r\n\r\n    constructor(actor: ScrewBomber) {\r\n        this.actor = actor;\r\n    }\r\n\r\n    enter(): void {\r\n        this.initialized = true;\r\n        this.actor.animations.play(ScrewBomberAnimationNames.open);\r\n        this.isOpening = true;\r\n    }\r\n\r\n    update(): void {\r\n        if (this.isOpening) {\r\n            if (this.actor.animations.currentAnim.isFinished) {\r\n                this.actor.useShootingHitbox();\r\n                this.isOpening = false;\r\n                this.actor.animations.play(ScrewBomberAnimationNames.spin);\r\n            }\r\n\r\n            return;\r\n        }\r\n\r\n        this.elapsedWaitTime += fixedTimeMS;\r\n\r\n        if (this.elapsedWaitTime >= this.waitEndTime) {\r\n            this.actor.fsm.changeState(ScrewBomberState.shooting);\r\n            return;\r\n        }\r\n    }\r\n\r\n    exit(): void {\r\n        this.initialized = false;\r\n        this.elapsedWaitTime = 0;\r\n        this.isOpening = false;\r\n    }\r\n}\r\n\r\nclass ScrewBomberShootingState implements State {\r\n\r\n    name: string = ScrewBomberState.shooting;\r\n    initialized: boolean;\r\n    actor: ScrewBomber;\r\n    private elapsedTime: number = 0;\r\n    private shootDelay: number = 450;\r\n    private numBullets: number = 0;\r\n\r\n    constructor(actor: ScrewBomber) {\r\n        this.actor = actor;\r\n    }\r\n\r\n    enter(): void {\r\n        this.initialized = true;\r\n        this.elapsedTime = this.shootDelay;\r\n    }\r\n\r\n    update(): void {\r\n        this.elapsedTime += fixedTimeMS;\r\n\r\n        if (this.elapsedTime > this.shootDelay) {\r\n            this.elapsedTime = 0;\r\n            this.numBullets++;\r\n\r\n            switch (this.numBullets) {\r\n                case 1:\r\n                    this.actor.shoot(0);\r\n                    this.actor.shoot(-225);\r\n                    this.actor.shoot(-270);\r\n                    this.actor.shoot(-315);\r\n                    this.actor.shoot(-180);\r\n                    this.actor.game.sound.play(AudioName.enemy_shoot);\r\n                    break;\r\n\r\n                case 2:\r\n                    this.actor.shoot(0);\r\n                    this.actor.shoot(-225);\r\n                    this.actor.shoot(-270);\r\n                    this.actor.shoot(-315);\r\n                    this.actor.shoot(-180);\r\n                    this.actor.game.sound.play(AudioName.enemy_shoot);\r\n                    this.actor.fsm.changeState(ScrewBomberState.wait_to_close);\r\n                    break;\r\n\r\n                default:\r\n                    console.error('Screw Bomber: numBullets incorrect!');\r\n                    break;\r\n            }\r\n        }\r\n    }\r\n\r\n    exit(): void {\r\n        this.initialized = false;\r\n        this.numBullets = 0;\r\n        this.elapsedTime = 0;\r\n    }\r\n}\r\n\r\nclass ScrewBomberWaitToCloseState implements State {\r\n\r\n    public name: string = ScrewBomberState.wait_to_close;\r\n    public initialized: boolean;\r\n    public actor: ScrewBomber;\r\n    private waitElapsedTime: number = 0;\r\n    private waitEndTime: number = 0;\r\n\r\n    constructor(actor: ScrewBomber) {\r\n        this.actor = actor;\r\n    }\r\n\r\n    enter(): void {\r\n        this.initialized = true;\r\n    }\r\n\r\n    update(): void {\r\n        this.waitElapsedTime += fixedTimeMS;\r\n\r\n        if (this.waitElapsedTime > this.waitEndTime) {\r\n            this.actor.fsm.changeState(ScrewBomberState.closing);\r\n        }\r\n    }\r\n\r\n    exit(): void {\r\n        this.initialized = false;\r\n        this.waitElapsedTime = 0;\r\n    }\r\n}\r\n\r\nclass ScrewBomberClosingState implements State {\r\n\r\n    public name: string = ScrewBomberState.closing;\r\n    public initialized: boolean;\r\n    public actor: ScrewBomber;\r\n\r\n    constructor(actor: ScrewBomber) {\r\n        this.actor = actor;\r\n    }\r\n\r\n    enter(): void {\r\n        this.initialized = true;\r\n        this.actor.animations.play(ScrewBomberAnimationNames.close);\r\n        this.actor.useIdleHitbox();\r\n    }\r\n\r\n    update(): void {\r\n        if (this.actor.animations.currentAnim.isFinished) {\r\n            this.actor.fsm.changeState(ScrewBomberState.rest_after_shoot);\r\n            return;\r\n        }\r\n    }\r\n\r\n    exit(): void {\r\n        this.initialized = false;\r\n    }\r\n}\r\n\r\nclass ScrewBomberRestAfterShootState implements State {\r\n\r\n    public name: string = ScrewBomberState.rest_after_shoot;\r\n    public initialized: boolean;\r\n    public actor: ScrewBomber;\r\n    private elapsedIdleTime: number = 0;\r\n    private idleEndTime: number = 2000;\r\n\r\n    constructor(actor: ScrewBomber) {\r\n        this.actor = actor;\r\n    }\r\n\r\n    enter(): void {\r\n        this.initialized = true;\r\n        this.actor.animations.play(ScrewBomberAnimationNames.idle);\r\n    }\r\n\r\n    update(): void {\r\n        this.elapsedIdleTime += fixedTimeMS;\r\n\r\n        if (this.elapsedIdleTime > this.idleEndTime) {\r\n            this.elapsedIdleTime = 0;\r\n            this.actor.fsm.changeState(ScrewBomberState.wait_for_player);\r\n            return;\r\n        }\r\n    }\r\n\r\n    exit(): void {\r\n        this.initialized = false;\r\n        this.elapsedIdleTime = 0;\r\n    }\r\n}","import { Enemy } from './enemy'\r\nimport { World, Surface } from '../world'\r\nimport { EntityType, TagType, AudioName } from '../konstants'\r\nimport { Entity } from '../entity'\r\nimport { Helper } from '../helper'\r\nimport { MathUtil } from '../util/mathutil'\r\nimport { State } from '../fsm/state'\r\nimport { StateMachine } from '../fsm/stateMachine'\r\nimport { KeyedCollection } from '../util/mathutil'\r\nimport { Vector2 } from '../sat2d/vector2'\r\nimport { Ray } from '../sat2d/ray'\r\nimport { RayType } from '../sat2d/ray'\r\nimport { RayIntersection } from '../sat2d/rayIntersection'\r\nimport { SAT2D } from '../sat2d/sat2d'\r\nimport { fixedTime, fixedTimeMS } from '../main'\r\n\r\nenum SuperCutterAnimationNames {\r\n    open_and_close = 'open_and_close',\r\n}\r\n\r\nexport class SuperCutter extends Enemy {\r\n\r\n    public targetSpeed: Phaser.Point = new Phaser.Point(0, 0);\r\n    public useGravity: boolean = true;\r\n    public gravityX: number = 0;\r\n    public gravityY: number = 400;\r\n    public fsm: StateMachine;\r\n\r\n    public projVel: number;\r\n    public vx: number = 0;\r\n    public vy: number = 0;\r\n    public targetDistance: number = 0;\r\n    public flightDuration: number;\r\n    public customAngle: number = 80;\r\n    public elapsedTime: number = 0;\r\n\r\n    constructor(myWorld: World, tag: TagType, e: EntityType, game: Phaser.Game, x: number, y: number, key: string, frame: string) {\r\n        super(myWorld, tag, e, game, x, y, key, frame);\r\n\r\n        this.getPosition().x = x;\r\n        this.getPosition().y = y;\r\n        this.position.x = (this.getPosition().x + 0.5) | 0;\r\n        this.position.y = this.getPosition().y;\r\n        this.smoothed = false;\r\n        this.health = 1;\r\n        this.maxHealth = 1;\r\n        this.isShielded = false;\r\n        this.anchor.setTo(0.5, 0.5);\r\n\r\n        this.fsm = new StateMachine();\r\n        this.fsm.addState(SuperCutterState.active, new SuperCutterActiveState(this));\r\n        this.fsm.changeState(SuperCutterState.active);\r\n\r\n        this.animations.add(SuperCutterAnimationNames.open_and_close, ['super_cutter_01', 'super_cutter_02'], 5, true, false);\r\n        this.animations.play(SuperCutterAnimationNames.open_and_close);\r\n\r\n        this.hitbox = new Phaser.Rectangle(this.getPosition().x, this.getPosition().y, 16, 16);\r\n        this.hitboxOffset.x = -8;\r\n        this.hitboxOffset.y = -8;\r\n        this.updateRect();\r\n        this.calculate();\r\n    }\r\n\r\n    public manualUpdate(): void {\r\n        // this.pGraphicsDebug.clear();\r\n\r\n        if (!this.alive) {\r\n            return;\r\n        }\r\n\r\n        this.frozen.update();\r\n        if (this.frozen.isFrozen) {\r\n            return;\r\n        }\r\n\r\n        this.fsm.currentState.update();\r\n\r\n        this.position.x = (this.getPosition().x + 0.5) | 0;\r\n        this.position.y = this.getPosition().y;\r\n\r\n        this.updateRect();\r\n    }\r\n\r\n    public takeDamage(damage: number): void {\r\n        if (this.isShielded) {\r\n            this.game.sound.play(AudioName.dink);\r\n            return;\r\n        }\r\n\r\n        if (this.health <= 0) {\r\n            return;\r\n        }\r\n\r\n        this.game.sound.play(AudioName.enemy_damage);\r\n        this.health -= damage;\r\n\r\n        if (this.health <= 0) {\r\n            this.health = 0;\r\n            this.myWorld.dropManager.dropPowerUp(this.getPosition().x + this.hitbox.halfWidth * 0.5, this.getPosition().y + (<Phaser.Rectangle>this.hitbox).halfHeight);\r\n            this.myWorld.createExplosionEffect(this.getPosition().x + this.hitbox.halfWidth, this.getPosition().y + (<Phaser.Rectangle>this.hitbox).halfHeight);\r\n            this.kill();\r\n        }\r\n    }\r\n\r\n    public calculate() {\r\n        let dirToPlayer: number = -MathUtil.sign(this.getPosition().x - this.myWorld.entityManager.player.getPosition().x);\r\n        let xDist: number = Math.abs(Math.abs(this.getPosition().x) - Math.abs(this.myWorld.entityManager.player.getPosition().x + (-dirToPlayer * 1)));\r\n        this.targetDistance = xDist;\r\n        let firingAngle: number = this.customAngle * (Math.PI / 180);\r\n        this.projVel = this.targetDistance / (Math.sin(2 * firingAngle) / this.gravityY);\r\n        this.vx = Math.sqrt(this.projVel) * Math.cos(firingAngle) * dirToPlayer;\r\n        this.vy = Math.sqrt(this.projVel) * Math.sin(firingAngle);\r\n        this.flightDuration = this.targetDistance / this.vx;\r\n        this.setFacingDirection(-dirToPlayer);\r\n    }\r\n}\r\n\r\nenum SuperCutterState {\r\n    active = 'active',\r\n}\r\n\r\nclass SuperCutterActiveState implements State {\r\n\r\n    public name: string = SuperCutterState.active;\r\n    public initialized: boolean;\r\n    public actor: SuperCutter;\r\n\r\n    constructor(actor: SuperCutter) {\r\n        this.actor = actor;\r\n    }\r\n\r\n    enter(): void {\r\n        this.initialized = true;\r\n        this.actor.calculate();\r\n    }\r\n\r\n    update(): void {\r\n        this.actor.getPosition().x += this.actor.vx * fixedTime;\r\n        this.actor.getPosition().y -= (this.actor.vy - (this.actor.gravityY * this.actor.elapsedTime)) * fixedTime;\r\n        this.actor.elapsedTime += fixedTime;\r\n    }\r\n\r\n    exit(): void {\r\n        this.initialized = false;\r\n    }\r\n}","import { Enemy } from './enemy'\r\nimport { World } from '../world'\r\nimport { Surface } from '../world'\r\nimport { EntityType, TagType, AudioName } from '../konstants'\r\nimport { Player } from '../player'\r\nimport { Entity } from '../entity'\r\nimport { Helper } from '../helper'\r\nimport { MathUtil } from '../util/mathutil'\r\nimport { Bullet } from '../bullets/bullet'\r\nimport { State } from '../fsm/state'\r\nimport { StateMachine } from '../fsm/stateMachine'\r\nimport { KeyedCollection } from '../util/mathutil'\r\nimport { PowerUp } from '../powerups/powerup'\r\nimport { SAT2D } from '../sat2d/sat2d'\r\nimport { Ray } from '../sat2d/ray'\r\nimport { RayIntersection } from '../sat2d/rayIntersection'\r\nimport { RayType } from '../sat2d/ray'\r\nimport { Vector2 } from '../sat2d/vector2'\r\nimport { fixedTime, fixedTimeMS } from '../main'\r\n\r\nenum WatcherAnimations {\r\n    idle = 'idle',\r\n    shoot = 'shoot',\r\n    reverse_shoot = 'reverse_shoot',\r\n}\r\n\r\nexport class Watcher extends Enemy {\r\n\r\n    public verticalSpeed: number = 50;\r\n    public targetSpeed: Phaser.Point = new Phaser.Point(0, 0);\r\n    public startYDirection: number = 1; // initial y movement direction; based off players position\r\n    public fsm: StateMachine;\r\n    public spawnDelay: number; // value found in Tiled\r\n    public direction: number; // value found in Tiled\r\n    private hitBoxOffset: Phaser.Point = new Phaser.Point();\r\n\r\n    constructor(myWorld: World, tag: TagType, e: EntityType, game: Phaser.Game, x: number, y: number, key: string, frame: string) {\r\n        super(myWorld, tag, e, game, x, y, key, frame);\r\n\r\n        this.getPosition().x = x;\r\n        this.getPosition().y = y;\r\n        this.position.x = (this.getPosition().x + 0.5) | 0;\r\n        this.position.y = this.getPosition().y;\r\n        this.smoothed = false;\r\n        this.anchor.setTo(0.5, 0.5);\r\n        this.setFacingDirection(1);\r\n        this.health = 1;\r\n        this.maxHealth = 1;\r\n        this.isShielded = false;\r\n        this.hitbox = new Phaser.Rectangle(this.getPosition().x, this.getPosition().y, 16, 16);\r\n\r\n        this.animations.add(WatcherAnimations.idle, ['watcher_01'], 10, false, false);\r\n        this.animations.add(WatcherAnimations.shoot, ['watcher_01', 'watcher_02', 'watcher_03'], 7, false, false);\r\n        this.animations.add(WatcherAnimations.reverse_shoot, ['watcher_03', 'watcher_02', 'watcher_01'], 10, false, false);\r\n        this.animations.play(WatcherAnimations.shoot);\r\n\r\n        this.fsm = new StateMachine();\r\n        this.fsm.addState(WatcherState.spawn_delay, new WatcherSpawnDelayState(this));\r\n        this.fsm.addState(WatcherState.move, new WatcherMoveState(this));\r\n        this.fsm.addState(WatcherState.open, new WatcherOpenState(this));\r\n        this.fsm.addState(WatcherState.shoot, new WatcherShootState(this));\r\n        this.fsm.addState(WatcherState.escape, new WatcherEscapeState(this));\r\n        this.fsm.changeState(WatcherState.spawn_delay);\r\n\r\n        this.updateRect();\r\n        this.visible = false;\r\n    }\r\n\r\n    public manualUpdate(): void {\r\n        // this.pGraphicsDebug.clear();\r\n\r\n        if (!this.alive) {\r\n            return;\r\n        }\r\n\r\n        this.frozen.update();\r\n        if (this.frozen.isFrozen) {\r\n            return;\r\n        }\r\n        \r\n        this.fsm.currentState.update();\r\n\r\n        this.velocity.x = this.targetSpeed.x;\r\n        this.velocity.y = this.targetSpeed.y;\r\n\r\n        this.getPosition().x += this.velocity.x * fixedTime;\r\n        this.getPosition().y += this.velocity.y * fixedTime;\r\n\r\n        this.position.x = (this.getPosition().x + 0.5) | 0;\r\n        this.position.y = this.getPosition().y;\r\n\r\n        this.updateRect();\r\n    }\r\n\r\n    public initialize(): void {\r\n        (<WatcherSpawnDelayState>this.fsm.states.Item(WatcherState.spawn_delay)).spawnDelay = this.spawnDelay;\r\n\r\n        switch (this.direction) {\r\n            case -1:\r\n                this.getPosition().y += 25;\r\n                this.position.y = this.getPosition().y;\r\n                break;\r\n\r\n            case 1:\r\n                this.getPosition().y -= 35;\r\n                this.position.y = this.getPosition().y;\r\n                break;\r\n\r\n            default:\r\n                console.error('direction value not set correctly.')\r\n                break;\r\n        }\r\n\r\n        this.startYDirection = this.direction;\r\n    }\r\n\r\n    public takeDamage(damage: number): void {\r\n        if (this.isShielded) {\r\n            this.game.sound.play(AudioName.dink);\r\n            return;\r\n        }\r\n\r\n        if (this.health <= 0) {\r\n            return;\r\n        }\r\n\r\n        this.game.sound.play(AudioName.enemy_damage);\r\n        this.health -= damage;\r\n\r\n        if (this.health <= 0) {\r\n            this.health = 0;\r\n            this.myWorld.dropManager.dropPowerUp(this.getPosition().x, this.getPosition().y);\r\n            this.myWorld.createExplosionEffect(this.getPosition().x, this.getPosition().y - (<Phaser.Rectangle>this.hitbox).halfHeight);\r\n            this.kill();\r\n        }\r\n    }\r\n\r\n    public updateRect(): void {\r\n        this.hitbox.x = this.getPosition().x + this.hitBoxOffset.x;\r\n        this.hitbox.y = this.getPosition().y + this.hitBoxOffset.y;\r\n    }\r\n\r\n    public shoot(x: number, y: number, angle: number): void {\r\n        let bullet: Bullet = this.myWorld.entityManager.createLaserBullet(\r\n            this, x, y,\r\n            24, 4,\r\n            EntityType.laser_beam, EntityType.laser_beam);\r\n        bullet.horizontalSpeed = 160;\r\n        let cos: number = Math.cos(angle * (Math.PI / 180));\r\n        let sin: number = Math.sin(angle * (Math.PI / 180));\r\n        bullet.targetSpeed.x = bullet.horizontalSpeed * cos * -this.getFacingDirection();\r\n        bullet.targetSpeed.y = bullet.horizontalSpeed * sin * -this.getFacingDirection();\r\n    }\r\n\r\n    /**\r\n     * Modifies the hitbox to be larger when shooting.\r\n     */\r\n    public useLargeHitbox(): void {\r\n        this.hitBoxOffset.x = -8;\r\n        this.hitBoxOffset.y = -20.5;\r\n        this.hitbox.width = 16;\r\n        this.hitbox.height = 41;\r\n    }\r\n\r\n    /**\r\n     * Modifies the hitbox to be smaller when idle.\r\n     */\r\n    public useSmallHitbox(): void {\r\n        this.hitBoxOffset.x = -8;\r\n        this.hitBoxOffset.y = -8;\r\n        this.hitbox.width = 16;\r\n        this.hitbox.height = 16;\r\n    }\r\n}\r\n\r\nenum WatcherState {\r\n    spawn_delay = 'spawn_delay',\r\n    move = 'move',\r\n    open = 'open',\r\n    shoot = 'shoot',\r\n    escape = 'escape',\r\n}\r\n\r\nclass WatcherSpawnDelayState implements State {\r\n\r\n    public name: string = WatcherState.spawn_delay;\r\n    public initialized: boolean;\r\n    public actor: Watcher;\r\n    private elapsedTime: number = 0;\r\n    public spawnDelay: number;\r\n\r\n    constructor(actor: Watcher) {\r\n        this.actor = actor;\r\n    }\r\n\r\n    enter(): void {\r\n        this.initialized = true;\r\n    }\r\n\r\n    update(): void {\r\n        this.elapsedTime += fixedTimeMS;\r\n\r\n        if (this.elapsedTime >= this.spawnDelay) {\r\n            this.actor.visible = true;\r\n            this.actor.fsm.changeState(WatcherState.move);\r\n        }\r\n    }\r\n\r\n    exit(): void {\r\n        this.initialized = false;\r\n        this.elapsedTime = 0;\r\n    }\r\n}\r\n\r\n\r\nclass WatcherMoveState implements State {\r\n\r\n    public name: string = WatcherState.move;\r\n    public initialized: boolean;\r\n    public actor: Watcher;\r\n    private elapsedTime: number = 0;\r\n    private endTime: number = 1000;\r\n    private playerHalfHeight: number = 0;\r\n    private additionalHeightOffset: number = 6;\r\n\r\n    constructor(actor: Watcher) {\r\n        this.actor = actor;\r\n    }\r\n\r\n    enter(): void {\r\n        this.initialized = true;\r\n        this.actor.animations.play(WatcherAnimations.idle);\r\n        this.playerHalfHeight = (<Phaser.Rectangle>this.actor.myWorld.entityManager.player.hitbox).halfHeight;\r\n        this.actor.useSmallHitbox();\r\n    }\r\n\r\n    update(): void {\r\n        let yDist: number = this.actor.getPosition().y - (this.actor.myWorld.entityManager.player.getPosition().y - this.playerHalfHeight + this.additionalHeightOffset);\r\n        let yDir: number = -MathUtil.sign(yDist);\r\n        this.actor.targetSpeed.y = yDir * this.actor.verticalSpeed;\r\n\r\n        if (yDist < 36) {\r\n            this.actor.fsm.changeState(WatcherState.open);\r\n        }\r\n    }\r\n\r\n    exit(): void {\r\n        this.initialized = false;\r\n    }\r\n}\r\n\r\nclass WatcherOpenState implements State {\r\n\r\n    public name: string = WatcherState.open;\r\n    public initialized: boolean;\r\n    public actor: Watcher;\r\n    private playerHalfHeight: number = 0;\r\n    private additionalHeightOffset: number = 6;\r\n\r\n    constructor(actor: Watcher) {\r\n        this.actor = actor;\r\n    }\r\n\r\n    enter(): void {\r\n        this.initialized = true;\r\n        this.actor.animations.play(WatcherAnimations.shoot).onComplete.addOnce(() => {\r\n            this.actor.fsm.changeState(WatcherState.shoot);\r\n        }, this);\r\n        this.playerHalfHeight = (<Phaser.Rectangle>this.actor.myWorld.entityManager.player.hitbox).halfHeight;\r\n    }\r\n\r\n    update(): void {\r\n        // Always face the player.\r\n        let dir: number = MathUtil.sign(this.actor.getPosition().x - this.actor.myWorld.entityManager.player.getPosition().x);\r\n        this.actor.setFacingDirection(dir);\r\n\r\n        // If the player is out of range then get out of this state back to move state.\r\n        let yDist: number = Math.abs(this.actor.getPosition().y - (this.actor.myWorld.entityManager.player.getPosition().y - this.playerHalfHeight + this.additionalHeightOffset));\r\n\r\n        if (yDist > 36) {\r\n            this.actor.animations.stop();\r\n            this.actor.fsm.changeState(WatcherState.move);\r\n        }\r\n    }\r\n\r\n    exit(): void {\r\n        this.initialized = false;\r\n    }\r\n}\r\n\r\nclass WatcherShootState implements State {\r\n\r\n    public name: string = WatcherState.shoot;\r\n    public initialized: boolean;\r\n    public actor: Watcher;\r\n\r\n    constructor(actor: Watcher) {\r\n        this.actor = actor;\r\n    }\r\n\r\n    enter(): void {\r\n        this.initialized = true;\r\n        this.actor.shoot(this.actor.position.x + 2, this.actor.position.y - 12, 0);\r\n        this.actor.shoot(this.actor.position.x + 2, this.actor.position.y + 20, 0);\r\n        this.actor.animations.play(WatcherAnimations.reverse_shoot).onComplete.addOnce(() => {\r\n            this.actor.fsm.changeState(WatcherState.escape);\r\n        }, this);\r\n        this.actor.useLargeHitbox();\r\n    }\r\n\r\n    update(): void {\r\n    }\r\n\r\n    exit(): void {\r\n        this.initialized = false;\r\n    }\r\n}\r\n\r\nclass WatcherEscapeState implements State {\r\n\r\n    public name: string = WatcherState.escape;\r\n    public initialized: boolean;\r\n    public actor: Watcher;\r\n\r\n    constructor(actor: Watcher) {\r\n        this.actor = actor;\r\n    }\r\n\r\n    enter(): void {\r\n        this.initialized = true;\r\n        this.actor.animations.play(WatcherAnimations.idle);\r\n        this.actor.targetSpeed.y = -this.actor.startYDirection * this.actor.verticalSpeed;\r\n        this.actor.useSmallHitbox();\r\n    }\r\n\r\n    update(): void {\r\n    }\r\n\r\n    exit(): void {\r\n        this.initialized = false;\r\n    }\r\n}\r\n","import { Enemy } from '../enemies/enemy'\r\nimport { World } from '../world'\r\nimport { EntityType, TagType, AudioName } from '../konstants'\r\nimport { Player } from '../player'\r\nimport { Entity } from '../entity'\r\nimport { Helper } from '../helper'\r\nimport { State } from '../fsm/state'\r\nimport { StateMachine } from '../fsm/stateMachine'\r\nimport { KeyedCollection } from '../util/mathutil'\r\nimport { MathUtil } from '../util/mathutil'\r\nimport { fixedTime, fixedTimeMS } from '../main'\r\n\r\nenum PengAnimations {\r\n    idle = 'idle',\r\n    active = 'active',\r\n}\r\nexport class Peng extends Enemy {\r\n\r\n    public horizontalSpeed: number = 74;\r\n    public verticalSpeed: number = 50;\r\n    public initialPos: Phaser.Point = new Phaser.Point(0, 0);\r\n    public fsm: StateMachine;\r\n\r\n    constructor(myWorld: World, tag: TagType, myEntityType: EntityType, game: Phaser.Game, x: number, y: number, key: string, frame: string) {\r\n        super(myWorld, tag, myEntityType, game, x, y, key, frame);\r\n\r\n        this.getPosition().x = x;\r\n        this.getPosition().y = y;\r\n        this.position.y = this.getPosition().y;\r\n        this.position.x = (this.getPosition().x + 0.5) | 0;\r\n        this.anchor.setTo(0.5, 0.5);\r\n        this.smoothed = false;\r\n        this.setFacingDirection(1);\r\n        this.health = 1;\r\n        this.maxHealth = 1;\r\n\r\n        this.animations.add(PengAnimations.idle, ['peng_01'], 10, false, false);\r\n        this.animations.add(PengAnimations.active, ['peng_01', 'peng_02'], 10, true, false);\r\n        this.animations.play(PengAnimations.active);\r\n\r\n        this.hitbox = new Phaser.Rectangle(this.getPosition().x, this.getPosition().y, 16, 16);\r\n        this.updateRect();\r\n\r\n        this.fsm = new StateMachine();\r\n        this.fsm.addState(PengState.move, new PengMoveState(this));\r\n        this.fsm.changeState(PengState.move);\r\n    }\r\n\r\n    public manualUpdate(): void {\r\n        // this.pGraphicsDebug.clear();\r\n\r\n        if (!this.alive) {\r\n            return;\r\n        }\r\n\r\n        this.frozen.update();\r\n        if (this.frozen.isFrozen) {\r\n            return;\r\n        }\r\n\r\n        this.fsm.currentState.update();\r\n        this.updateRect();\r\n    }\r\n\r\n    public takeDamage(damage: number): void {\r\n        if (this.isShielded) {\r\n            this.game.sound.play(AudioName.dink);\r\n            return;\r\n        }\r\n\r\n        if (this.health <= 0) {\r\n            return;\r\n        }\r\n\r\n        this.game.sound.play(AudioName.enemy_damage);\r\n        this.health -= damage;\r\n\r\n        if (this.health <= 0) {\r\n            this.health = 0;\r\n            this.myWorld.dropManager.dropPowerUp(this.getPosition().x, this.getPosition().y);\r\n            this.kill();\r\n        }\r\n    }\r\n\r\n    public updateRect(): void {\r\n        this.hitbox.x = this.getPosition().x - this.hitbox.width * 0.5;\r\n        this.hitbox.y = this.getPosition().y - this.hitbox.height * 0.5;\r\n    }\r\n}\r\n\r\nenum PengState {\r\n    move = 'move',\r\n}\r\n\r\nclass PengMoveState implements State {\r\n\r\n    name: string = PengState.move;\r\n    initialized: boolean;\r\n    actor: Peng;\r\n    private amplitude: number = 0;\r\n    private count: number = 0;\r\n\r\n    constructor(actor: Peng) {\r\n        this.actor = actor;\r\n    }\r\n\r\n    enter(): void {\r\n        this.initialized = true;\r\n    }\r\n\r\n    update(): void {\r\n        if (this.actor.getPosition().x > this.actor.game.camera.x + this.actor.game.camera.width) {\r\n            this.actor.getPosition().x = this.actor.game.camera.x;\r\n            return;\r\n        }\r\n\r\n        if (this.actor.getPosition().x < this.actor.game.camera.x) {\r\n            this.actor.getPosition().x = this.actor.game.camera.x + this.actor.game.camera.width;\r\n            this.actor.initialPos.y = this.actor.myWorld.entityManager.player.getPosition().y - 20;\r\n            return;\r\n        }\r\n\r\n        this.count += 2;\r\n        this.actor.getPosition().y = this.actor.verticalSpeed * Math.sin(this.count * fixedTime) + this.actor.initialPos.y;\r\n        this.actor.getPosition().x += -this.actor.horizontalSpeed * fixedTime;\r\n\r\n        this.actor.position.y = this.actor.getPosition().y;\r\n        this.actor.position.x = (this.actor.getPosition().x + 0.5) | 0;\r\n    }\r\n\r\n    exit(): void {\r\n        this.initialized = false;\r\n    }\r\n}","import { Enemy } from './enemy'\r\nimport { World, Surface } from '../world'\r\nimport { EntityType, TagType, WallContact, Konstants, AudioName } from '../konstants'\r\nimport { Player } from '../player'\r\nimport { Entity } from '../entity'\r\nimport { Helper } from '../helper'\r\nimport { MathUtil } from '../util/mathutil'\r\nimport { Bullet } from '../bullets/bullet'\r\nimport { State } from '../fsm/state'\r\nimport { StateMachine } from '../fsm/stateMachine'\r\nimport { KeyedCollection } from '../util/mathutil'\r\nimport { Vector2 } from '../sat2d/vector2'\r\nimport { Ray } from '../sat2d/ray'\r\nimport { RayType } from '../sat2d/ray'\r\nimport { RayIntersection } from '../sat2d/rayIntersection'\r\nimport { SAT2D } from '../sat2d/sat2d'\r\nimport { Debug } from '../debug'\r\nimport { fixedTime, fixedTimeMS } from '../main'\r\n\r\nenum BigEyeAnimationNames {\r\n    idle = 'idle',\r\n    pre_shoot = 'pre_shoot',\r\n    jump = 'jump'\r\n}\r\n\r\nexport class BigEye extends Enemy {\r\n\r\n    public normalJumpSpeed: Phaser.Point = new Phaser.Point(50, -200);\r\n    public highJumpSpeed: Phaser.Point = new Phaser.Point(50, -270);\r\n    public isNormalJumping: boolean = false;\r\n    public isHighJumping: boolean = false;\r\n    public standingHeight: number = 48;\r\n    public jumpingHeight: number = 32;\r\n    public horizontalSpeed: number = 50;\r\n    public targetSpeed: Phaser.Point = new Phaser.Point(0, 0);\r\n    public isOnGround: boolean = true;\r\n    public useGravity: boolean = true;\r\n    public isJumping: boolean = true;\r\n    public isFalling: boolean = true;\r\n    public fsm: StateMachine;\r\n\r\n    private minJumpHeight: number = 1;\r\n    private maxJumpHeight: number = 44;\r\n    private timeToJumpApex = 0.35;\r\n    private gravityX: number = 0;\r\n    private gravityY: number = 0;\r\n    private maxJumpVelocity = 0;\r\n    private minJumpVelocity = 0;\r\n    private groundRays: Array<Ray> = new Array<Ray>();\r\n    private ceilRays: Array<Ray> = new Array<Ray>();\r\n    private leftRays: Array<Ray> = new Array<Ray>();\r\n    private rightRays: Array<Ray> = new Array<Ray>();\r\n    private skinWidth: number = 5;\r\n    private wallContact: WallContact;\r\n    private numHorizontalRays: number = 4;\r\n    private numVerticalRays: number = 4;\r\n\r\n    constructor(myWorld: World, tag: TagType, e: EntityType, game: Phaser.Game, x: number, y: number, key: string, frame: string) {\r\n        super(myWorld, tag, e, game, x, y, key, frame);\r\n\r\n        this.getPosition().x = x + 8;\r\n        this.getPosition().y = y + 24;\r\n        this.position.x = (this.getPosition().x + 0.5) | 0;\r\n        this.position.y = this.getPosition().y;\r\n        this.smoothed = false;\r\n        this.anchor.setTo(0.5, 1);\r\n        this.health = 10;\r\n        this.maxHealth = 10;\r\n        this.isShielded = false;\r\n\r\n        this.animations.add(BigEyeAnimationNames.idle, ['big_eye_02'], 10, false, false);\r\n        this.animations.add(BigEyeAnimationNames.jump, ['big_eye_01'], 5, false, false);\r\n        this.animations.play(BigEyeAnimationNames.idle);\r\n\r\n        this.hitbox = new Phaser.Rectangle(this.getPosition().x, this.getPosition().y, 16, 48);\r\n        this.hitboxOffset.x = -this.hitbox.halfWidth;\r\n        this.hitboxOffset.y = -this.hitbox.height;\r\n        this.updateRect();\r\n\r\n        this.fsm = new StateMachine();\r\n        this.fsm.addState(BigEyeState.decide, new BigEyeDecideState(this));\r\n        this.fsm.addState(BigEyeState.jump, new BigEyeJumpState(this));\r\n        this.fsm.changeState(BigEyeState.decide);\r\n\r\n        this.wallContact = { left: false, right: false, up: false, down: false };\r\n        this.calculateRegularJumpSettings();\r\n        this.createRays();\r\n    }\r\n\r\n    public manualUpdate(): void {\r\n        // this.pGraphicsDebug.clear();\r\n\r\n        if (!this.alive) {\r\n            return;\r\n        }\r\n\r\n        this.frozen.update();\r\n        if (this.frozen.isFrozen) {\r\n            return;\r\n        }\r\n\r\n        this.fsm.currentState.update();\r\n\r\n        if (this.useGravity) {\r\n            this.targetSpeed.x += Math.abs(this.gravityX) * fixedTime;\r\n            this.targetSpeed.y += Math.abs(this.gravityY) * fixedTime;\r\n        }\r\n\r\n        if (this.targetSpeed.y >= 300) {\r\n            this.targetSpeed.y = 300;\r\n        }\r\n\r\n        this.velocity.x = this.targetSpeed.x;\r\n        this.velocity.y = this.targetSpeed.y;\r\n\r\n        this.getPosition().x += this.velocity.x * fixedTime;\r\n        this.getPosition().y += this.velocity.y * fixedTime;\r\n\r\n        this.position.x = (this.getPosition().x + 0.5) | 0;\r\n        this.position.y = this.getPosition().y;\r\n\r\n        this.updateRect();\r\n        this.castRays();\r\n        this.showDebugRays();\r\n    }\r\n\r\n    public checkSurfaceCollisions(surfaces: Array<Surface>): void {\r\n        this.wallContact.left = false;\r\n        this.wallContact.right = false;\r\n        this.wallContact.up = false;\r\n        this.wallContact.down = false;\r\n        this.isOnGround = false;\r\n\r\n        let into: RayIntersection;\r\n\r\n        for (let j = 0; j < surfaces.length; j++) {\r\n            let surface: Surface = surfaces[j];\r\n\r\n            if (!surface.collidable) {\r\n                continue;\r\n            }\r\n\r\n            let nx: number = surface.dir.y;\r\n            let ny: number = -surface.dir.x;\r\n\r\n            // Check floors\r\n            if (ny == -1 && this.getVelocity().y > 0) {\r\n                for (let k = 0; k < this.groundRays.length; k++) {\r\n                    let ray: Ray = this.groundRays[k];\r\n\r\n                    into = SAT2D.testRayVsRay(ray, new Ray(new Vector2(surface.p1.x, surface.p1.y),\r\n                        new Vector2(surface.p2.x, surface.p2.y), RayType.not_infinite), into);\r\n\r\n                    if (into != null) {\r\n\r\n                        let dx: number = into.ray1.end.x - into.ray1.start.x;\r\n                        let dy: number = into.ray1.end.y - into.ray1.start.y;\r\n                        let distance: number = Math.sqrt(dx * dx + dy * dy);\r\n                        let trueDistance: number = distance * into.u1;\r\n\r\n                        let contactX: number = into.ray1.start.x + into.ray1.dir.x * into.u1;\r\n                        let contactY: number = into.ray1.start.y + trueDistance;\r\n\r\n                        // this.pGraphicsDebug.drawCircle(contactX, contactY, 3);\r\n\r\n                        if (trueDistance > this.hitbox.height * 0.5) {\r\n                            continue;\r\n                        }\r\n\r\n                        this.getPosition().y = contactY;\r\n                        this.setVelocity(this.getVelocity().x, 0);\r\n                        this.targetSpeed.y = 0;\r\n                        this.isOnGround = true;\r\n                        this.isJumping = false;\r\n                        this.isFalling = false;\r\n                        this.wallContact.down = true;\r\n                        continue;\r\n                    }\r\n                }\r\n            }\r\n\r\n            // Check ceilings\r\n            if (ny == 1 && this.getVelocity().y < 0) {\r\n                for (let k = 0; k < this.ceilRays.length; k++) {\r\n                    let ray: Ray = this.ceilRays[k];\r\n\r\n                    into = SAT2D.testRayVsRay(ray, new Ray(new Vector2(surface.p1.x, surface.p1.y),\r\n                        new Vector2(surface.p2.x, surface.p2.y), RayType.not_infinite), into);\r\n\r\n                    if (into != null) {\r\n\r\n                        let dx: number = into.ray1.end.x - into.ray1.start.x;\r\n                        let dy: number = into.ray1.end.y - into.ray1.start.y;\r\n                        let distance: number = Math.sqrt(dx * dx + dy * dy);\r\n                        let trueDistance: number = distance * into.u1;\r\n\r\n                        let contactX: number = into.ray1.start.x + into.ray1.dir.x * into.u1;\r\n                        let contactY: number = into.ray1.start.y - trueDistance;\r\n\r\n                        // this.pGraphicsDebug.drawCircle(contactX, contactY, 3);\r\n\r\n                        if (trueDistance > this.hitbox.height * 0.5) {\r\n                            continue;\r\n                        }\r\n\r\n                        this.getPosition().y = contactY + this.hitbox.height;\r\n                        this.setVelocity(this.getVelocity().x, 0);\r\n                        this.targetSpeed.y = 0;\r\n                        this.isFalling = true;\r\n                        this.wallContact.up = true;\r\n                        continue;\r\n                    }\r\n                }\r\n            }\r\n\r\n            // Check right walls\r\n            if (nx == -1 && this.getVelocity().x > 0) {\r\n                for (let k = 0; k < this.rightRays.length; k++) {\r\n                    let ray: Ray = this.rightRays[k];\r\n\r\n                    into = SAT2D.testRayVsRay(ray, new Ray(new Vector2(surface.p1.x, surface.p1.y),\r\n                        new Vector2(surface.p2.x, surface.p2.y), RayType.not_infinite), into);\r\n\r\n                    if (into != null) {\r\n\r\n                        let dx: number = into.ray1.end.x - into.ray1.start.x;\r\n                        let dy: number = into.ray1.end.y - into.ray1.start.y;\r\n                        let distance: number = Math.sqrt(dx * dx + dy * dy);\r\n                        let trueDistance: number = distance * into.u1;\r\n\r\n                        let contactX: number = into.ray1.start.x + trueDistance;\r\n                        let contactY: number = into.ray1.start.y;\r\n\r\n                        // this.pGraphicsDebug.lineStyle(1, 0);\r\n                        // this.pGraphicsDebug.beginFill(0xff0000, 0.5);\r\n                        // this.pGraphicsDebug.drawCircle(contactX, contactY, 5);\r\n\r\n                        if (trueDistance > this.hitbox.width * 0.5) {\r\n                            continue;\r\n                        }\r\n\r\n                        this.getPosition().x = contactX - this.hitbox.width * 0.5;\r\n                        this.wallContact.right = true;\r\n                        continue;\r\n                    }\r\n                }\r\n            }\r\n\r\n            // Check left walls\r\n            if (nx == 1 && this.getVelocity().x < 0) {\r\n                for (let k = 0; k < this.leftRays.length; k++) {\r\n                    let ray: Ray = this.leftRays[k];\r\n\r\n                    into = SAT2D.testRayVsRay(ray, new Ray(new Vector2(surface.p1.x, surface.p1.y),\r\n                        new Vector2(surface.p2.x, surface.p2.y), RayType.not_infinite), into);\r\n\r\n                    if (into != null) {\r\n\r\n                        let dx: number = into.ray1.end.x - into.ray1.start.x;\r\n                        let dy: number = into.ray1.end.y - into.ray1.start.y;\r\n                        let distance: number = Math.sqrt(dx * dx + dy * dy);\r\n                        let trueDistance: number = distance * into.u1;\r\n\r\n                        let contactX: number = into.ray1.start.x - trueDistance;\r\n                        let contactY: number = into.ray1.start.y;\r\n\r\n                        // this.pGraphicsDebug.lineStyle(1, 0);\r\n                        // this.pGraphicsDebug.beginFill(0xff0000, 0.5);\r\n                        // this.pGraphicsDebug.drawCircle(contactX, contactY, 5);\r\n\r\n                        if (trueDistance > this.hitbox.width * 0.5) {\r\n                            continue;\r\n                        }\r\n\r\n                        this.getPosition().x = contactX + this.hitbox.width * 0.5;\r\n                        this.wallContact.left = true;\r\n                        continue;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    public takeDamage(damage: number): void {\r\n        if (this.isShielded) {\r\n            this.game.sound.play(AudioName.dink);\r\n            return;\r\n        }\r\n\r\n        if (this.health <= 0) {\r\n            return;\r\n        }\r\n\r\n        this.game.sound.play(AudioName.enemy_damage);\r\n        this.health -= damage;\r\n\r\n        if (this.health <= 0) {\r\n            this.health = 0;\r\n            this.myWorld.dropManager.dropPowerUp(this.getPosition().x, this.getPosition().y);\r\n            this.myWorld.createExplosionEffect(this.getPosition().x, this.getPosition().y - (<Phaser.Rectangle>this.hitbox).halfHeight);\r\n            this.kill();\r\n        }\r\n    }\r\n\r\n    public shoot(angle: number): void {\r\n        let bullet: Bullet = new Bullet(this, this.myWorld, TagType.bullet, EntityType.bullet_lemon, this.game, this.position.x - 4, this.position.y - 7, Konstants.sniper_joe_bullet, '');\r\n        bullet.horizontalSpeed = 170;\r\n        let cos: number = Math.cos(angle * (Math.PI / 180));\r\n        let sin: number = Math.sin(angle * (Math.PI / 180));\r\n        bullet.targetSpeed.x = bullet.horizontalSpeed * cos * -this.getFacingDirection();\r\n        bullet.targetSpeed.y = bullet.horizontalSpeed * sin * -this.getFacingDirection();\r\n        this.game.add.existing(bullet);\r\n        this.myWorld.entityManager.addEntity(bullet);\r\n    }\r\n\r\n    private calculateRegularJumpSettings(): void {\r\n        this.gravityY = -(2 * this.maxJumpHeight) / Math.pow(this.timeToJumpApex, 2);\r\n        this.maxJumpVelocity = Math.abs(this.gravityY) * this.timeToJumpApex;\r\n        this.minJumpVelocity = Math.sqrt(2 * Math.abs(this.gravityY) * this.minJumpHeight);\r\n\r\n        // console.log('gravity: ' + this._gravity);\r\n        // console.log('maxJumpVelocity: ' + this._maxJumpVelocity);\r\n        // console.log('minJumpVelocity: ' + this._minJumpVelocity);\r\n    }\r\n\r\n    private createRays(): void {\r\n        for (let i = 0; i < this.numVerticalRays; i++) {\r\n            this.groundRays.push(new Ray(new Vector2(), new Vector2(), RayType.not_infinite));\r\n        }\r\n\r\n        for (let i = 0; i < this.numVerticalRays; i++) {\r\n            this.ceilRays.push(new Ray(new Vector2(), new Vector2(), RayType.not_infinite));\r\n        }\r\n\r\n        for (let i = 0; i < this.numHorizontalRays; i++) {\r\n            this.leftRays.push(new Ray(new Vector2(), new Vector2(), RayType.not_infinite));\r\n        }\r\n\r\n        for (let i = 0; i < this.numHorizontalRays; i++) {\r\n            this.rightRays.push(new Ray(new Vector2(), new Vector2(), RayType.not_infinite));\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Using the current position moves the rays a frame even though the player may be running into a wall. By using\r\n     * previous position the rays don't move for that frame. They use the previous frame. Think about it, when the player\r\n     * is running into a wall, its 'bounds' should not move.\r\n     */\r\n    private castRays(): void {\r\n        let centerX: number = this.getPosition().x - 4;\r\n        let centerY: number = this.getPosition().y - this.hitbox.height * 0.5;\r\n\r\n        if (this.wallContact.left || this.wallContact.right) {\r\n            centerX = this.previousPosition.x;\r\n        }\r\n\r\n        let width: number = this.hitbox.width;\r\n        let verticalSpacing: number = width / (this.numVerticalRays - 1);\r\n        let startX: number = this.getPosition().x - width * 0.5;\r\n        let endX: number = this.getPosition().x + width * 0.5;\r\n\r\n        for (let i = 0; i < this.groundRays.length; i++) {\r\n            this.groundRays[i].start.x = startX;\r\n            this.groundRays[i].start.y = centerY;\r\n            this.groundRays[i].end.x = startX;\r\n            this.groundRays[i].end.y = centerY + this.hitbox.height * 0.5 + this.skinWidth;\r\n            startX += verticalSpacing;\r\n        }\r\n\r\n        startX = this.getPosition().x - width * 0.5;\r\n\r\n        for (let i = 0; i < this.ceilRays.length; i++) {\r\n            this.ceilRays[i].start.x = startX;\r\n            this.ceilRays[i].start.y = centerY;\r\n            this.ceilRays[i].end.x = startX;\r\n            this.ceilRays[i].end.y = centerY - this.hitbox.height * 0.5 - this.skinWidth;\r\n            startX += verticalSpacing;\r\n        }\r\n\r\n        centerX = this.getPosition().x - 4;\r\n        centerY = this.getPosition().y - this.hitbox.height * 0.5;\r\n        let height: number = this.height;\r\n        let horizontalSpacing: number = height / (this.numHorizontalRays - 1);\r\n        let startY: number = this.getPosition().y - this.height;\r\n        let endY: number = this.getPosition().y;\r\n\r\n        for (let i = 0; i < this.leftRays.length; i++) {\r\n            this.leftRays[i].start.x = centerX;\r\n            this.leftRays[i].start.y = startY;\r\n            this.leftRays[i].end.x = centerX - this.hitbox.width * 0.5 - this.skinWidth;\r\n            this.leftRays[i].end.y = startY;\r\n            startY += horizontalSpacing;\r\n        }\r\n\r\n        centerX = this.getPosition().x + 4;\r\n        startY = this.getPosition().y - this.height;\r\n\r\n        for (let i = 0; i < this.rightRays.length; i++) {\r\n            this.rightRays[i].start.x = centerX;\r\n            this.rightRays[i].start.y = startY;\r\n            this.rightRays[i].end.x = centerX + this.hitbox.width * 0.5 + this.skinWidth;\r\n            this.rightRays[i].end.y = startY;\r\n            startY += horizontalSpacing;\r\n        }\r\n    }\r\n\r\n    private showDebugRays(): void {\r\n        if (!Debug.AllowDrawOutlines) {\r\n            return;\r\n        }\r\n\r\n        // this.pGraphicsDebug.lineStyle(1, 0);\r\n\r\n        // this.groundRays.forEach((ray) => {\r\n        //     this.pGraphicsDebug.moveTo(ray.start.x, ray.start.y);\r\n        //     this.pGraphicsDebug.lineTo(ray.end.x, ray.end.y);\r\n        // });\r\n\r\n        // this.ceilRays.forEach((ray) => {\r\n        //     this.pGraphicsDebug.moveTo(ray.start.x, ray.start.y);\r\n        //     this.pGraphicsDebug.lineTo(ray.end.x, ray.end.y);\r\n        // });\r\n\r\n        // this.leftRays.forEach((ray) => {\r\n        //     this.pGraphicsDebug.moveTo(ray.start.x, ray.start.y);\r\n        //     this.pGraphicsDebug.lineTo(ray.end.x, ray.end.y);\r\n        // });\r\n\r\n        // this.rightRays.forEach((ray) => {\r\n        //     this.pGraphicsDebug.moveTo(ray.start.x, ray.start.y);\r\n        //     this.pGraphicsDebug.lineTo(ray.end.x, ray.end.y);\r\n        // });\r\n    }\r\n}\r\n\r\nenum BigEyeState {\r\n    decide = 'decide',\r\n    jump = 'jump',\r\n}\r\n\r\nclass BigEyeDecideState implements State {\r\n\r\n    public name: string;\r\n    public initialized: boolean;\r\n    public actor: BigEye;\r\n    private rand: number = 0;\r\n    private direction: number = 0;\r\n    private elapsedTime: number = 0;\r\n    private endTime: number = 300;\r\n\r\n    constructor(actor: BigEye) {\r\n        this.actor = actor;\r\n    }\r\n\r\n    enter(): void {\r\n        this.initialized = true;\r\n        this.actor.animations.play(BigEyeAnimationNames.idle);\r\n        this.actor.targetSpeed.x = 0;\r\n        this.actor.targetSpeed.y = 0;\r\n        this.actor.isNormalJumping = false;\r\n        this.actor.isHighJumping = false;\r\n        this.rand = Math.random();\r\n    }\r\n\r\n    update(): void {\r\n        if (!this.actor.isOnGround) {\r\n            return;\r\n        }\r\n\r\n        this.elapsedTime += fixedTimeMS;\r\n\r\n        if (this.elapsedTime < this.endTime) {\r\n            return;\r\n        }\r\n\r\n        this.direction = MathUtil.sign(Helper.directionTo(this.actor, this.actor.myWorld.entityManager.player).x);\r\n        this.actor.setFacingDirection(-this.direction);\r\n\r\n        if (this.actor.myWorld.entityManager.player.isJumping) {\r\n            this.doBigJump();\r\n            return;\r\n        }\r\n\r\n        if (this.rand > 0.65) {\r\n            this.doBigJump();\r\n        }\r\n        else {\r\n            this.doSmallJump();\r\n        }\r\n    }\r\n\r\n    exit(): void {\r\n        this.initialized = false;\r\n        this.elapsedTime = 0;\r\n    }\r\n\r\n    private doBigJump(): void {\r\n        this.actor.targetSpeed.x = this.actor.highJumpSpeed.x * this.direction;\r\n        this.actor.targetSpeed.y = this.actor.highJumpSpeed.y;\r\n        this.actor.isHighJumping = true;\r\n        this.actor.fsm.changeState(BigEyeState.jump);\r\n    }\r\n\r\n    private doSmallJump(): void {\r\n        this.actor.targetSpeed.x = this.actor.normalJumpSpeed.x * this.direction;\r\n        this.actor.targetSpeed.y = this.actor.normalJumpSpeed.y;\r\n        this.actor.isNormalJumping = true;\r\n        this.actor.fsm.changeState(BigEyeState.jump);\r\n    }\r\n}\r\n\r\nclass BigEyeJumpState implements State {\r\n\r\n    public name: string;\r\n    public initialized: boolean;\r\n    public actor: BigEye;\r\n\r\n    constructor(actor: BigEye) {\r\n        this.actor = actor;\r\n    }\r\n\r\n    enter(): void {\r\n        this.initialized = true;\r\n        this.actor.animations.play(BigEyeAnimationNames.jump);\r\n    }\r\n\r\n    update(): void {\r\n        if (this.actor.isOnGround) {\r\n            this.actor.myWorld.game.sound.play(AudioName.big_eye);\r\n            this.actor.fsm.changeState(BigEyeState.decide);\r\n            return;\r\n        }\r\n    }\r\n\r\n    exit(): void {\r\n        this.initialized = false;\r\n    }\r\n}","import { World } from '../world'\r\nimport { EntityType, TagType } from '../konstants'\r\nimport { Entity } from '../entity'\r\nimport { Helper } from '../helper'\r\nimport { MathUtil } from '../util/mathutil'\r\nimport { Blader } from '../enemies/blader'\r\nimport { Met } from '../enemies/met'\r\nimport { Spine } from '../enemies/spine'\r\nimport { Beak } from '../enemies/beak'\r\nimport { SuperCutter } from '../enemies/super_cutter'\r\nimport { CutMan } from '../enemies/bosses/cut_man'\r\nimport { Enemy } from '../enemies/enemy'\r\n\r\nexport class Bullet extends Entity {\r\n\r\n    owner: Entity;\r\n    velocity: Phaser.Point = new Phaser.Point(0, 0);\r\n    horizontalSpeed: number = 160;\r\n    useGravity: boolean = false;\r\n    gravityY: number = 500;\r\n    targetSpeed: Phaser.Point = new Phaser.Point(0, 0);\r\n    canCollideWithOtherBullet: boolean = false;\r\n    isReflected: boolean = false;\r\n\r\n    constructor(owner: Entity, myWorld: World, tag: TagType, e: EntityType, game: Phaser.Game, x: number, y: number, key?: string | Phaser.RenderTexture | Phaser.BitmapData | PIXI.Texture, frame?: string | number) {\r\n        super(myWorld, tag, e, game, x, y, key, frame);\r\n\r\n        this.smoothed = false;\r\n        this.owner = owner;\r\n        this.health = 1;\r\n        this.maxHealth = 1;\r\n        this.getPosition().x = x;\r\n        this.getPosition().y = y;\r\n        this.position.x = (this.getPosition().x + 0.5) | 0;\r\n        this.position.y = this.getPosition().y;\r\n        this.anchor.setTo(0.5, 0.5);\r\n    }\r\n\r\n    public manualUpdate(): void {\r\n        // this.pGraphicsDebug.clear();\r\n\r\n        if (!this.alive) {\r\n            return;\r\n        }\r\n\r\n        if (this.useGravity) {\r\n            this.targetSpeed.y += this.gravityY * this.game.time.physicsElapsed;\r\n        }\r\n\r\n        this.velocity.x = this.targetSpeed.x;\r\n        this.velocity.y = this.targetSpeed.y;\r\n\r\n        this.getPosition().x += this.velocity.x * this.game.time.physicsElapsed;\r\n        this.getPosition().y += this.velocity.y * this.game.time.physicsElapsed;\r\n\r\n        this.position.x = (this.getPosition().x + 0.5) | 0;\r\n        this.position.y = this.getPosition().y;\r\n\r\n        this.updateRect();\r\n    }\r\n\r\n    /**\r\n     * NOTE: The distance check is not particularly great. Some entities have their position as their middle center.\r\n     *         This causes strange behavior when entities have a large hitbox because the position checked will be\r\n     *         its middle center. Intersection may be missed since distance check will show that the bullet is too\r\n     *         far but yet it actually intersects.  Make sure to keep this in mind when creating the hit boxes.\r\n     * @param other {Entity}\r\n     */\r\n    public checkCollideWith(other: Entity): void {\r\n        if (Helper.distanceTo(other, this) > 60) {\r\n            return;\r\n        }\r\n\r\n        // The bullet cannot hit itself.\r\n        if (other == this) {\r\n            return;\r\n        }\r\n\r\n        // The bullet cannot hit other bullets shot by the same owner.\r\n        if (other.tag == TagType.bullet) {\r\n            let bullet: Bullet = <Bullet>other;\r\n            if (this.owner == bullet.owner) {\r\n                return;\r\n            }\r\n        }\r\n        // Go through spike.\r\n        else if (other.myEntityType == EntityType.spike) {\r\n            return;\r\n        }\r\n        // Go through explosions.\r\n        else if (other.myEntityType == EntityType.explosion_from_killer_bullet) {\r\n            return;\r\n        }\r\n\r\n        // Go through power ups.\r\n        if (other.tag == TagType.power_up) {\r\n            return;\r\n        }\r\n\r\n        // The bullet cannot hit the owner who shot it.\r\n        if (this.owner == other) {\r\n            return;\r\n        }\r\n\r\n        if (!this.canCollideWithOtherBullet) {\r\n            if (other.tag == TagType.bullet) {\r\n                let bullet: Bullet = <Bullet>other;\r\n\r\n                // Player bullet cannot collide with enemy bullet.\r\n                if (this.owner.tag == TagType.player && bullet.owner.tag != TagType.player) {\r\n                    return;\r\n                }\r\n\r\n                // Enemy bullet cannot collide with player bullet.\r\n                if (this.owner.tag != TagType.player && bullet.owner.tag == TagType.player) {\r\n                    return;\r\n                }\r\n\r\n                // Enemy bullet cannot collide with enemy bullet.\r\n                if (this.tag == TagType.bullet) {\r\n                    return;\r\n                }\r\n            }\r\n        }\r\n\r\n        // Enemy bullet cannot collide (hurt/kill) with other enemies.\r\n        if (this.owner.tag == TagType.enemy) {\r\n            if (other.tag == TagType.enemy) {\r\n                return;\r\n            }\r\n        }\r\n\r\n        // Enemy bullet cannot collide with platforms (vanishing_block, drop_lift, foot_holder)\r\n        if (other.tag == TagType.platform) {\r\n            return;\r\n        }\r\n\r\n        // ***************************************************\r\n        // In the future bullets will be allowed to hit other bullets since they don't share the same owner.\r\n        // A boolean will keep track of this.\r\n        // this.graphicsDebug.drawRect(this.getPosition().x + this.hitbox.x - this.hitbox.width * 0.5, this.getPosition().y - this.hitbox.height + this.hitbox.y, this.hitbox.width, this.hitbox.height);\r\n\r\n        if (!Phaser.Rectangle.intersects(this.hitbox, other.hitbox)) {\r\n            return;\r\n        }\r\n\r\n        if (this.applyEffect(other)) {\r\n            return;\r\n        }\r\n        \r\n        // This bullets hits enemy 'met'. Reflect this bullet if met is shielded.\r\n        // if (other.myEntityType == EntityType.met) {\r\n        //     let met: Met = <Met>other;\r\n        //     if (met.isShielded) {\r\n        //         this.isReflected = true;\r\n        //         this.reflect();\r\n        //         return;\r\n        //     }\r\n        // }\r\n\r\n        if (other.myEntityType == EntityType.spine) {\r\n            if (this.myEntityType == EntityType.bullet_lemon) {\r\n                (<Spine>other).paralyze();\r\n                this.takeDamage(1);\r\n                return;\r\n            }\r\n        }\r\n\r\n        if (other.myEntityType == EntityType.cut_man) {\r\n            if (this.myEntityType == EntityType.bullet_lemon) {\r\n                if ((<CutMan>other).isInvincible) {\r\n                    return;\r\n                }\r\n            }\r\n        }\r\n\r\n        other.takeDamage(this.contactDamage, Helper.directionTo(this, other));\r\n        this.takeDamage(1);\r\n    }\r\n\r\n    public takeDamage(damage: number): void {\r\n        if (this.health <= 0) {\r\n            return;\r\n        }\r\n\r\n        this.health -= damage;\r\n\r\n        if (this.health == 0) {\r\n            this.destroyed.dispatch();\r\n            this.kill();\r\n        }\r\n    }\r\n\r\n    private reflect(): void {\r\n        let x: number = this.targetSpeed.x > 0 ? 135 : 45;\r\n        this.targetSpeed.x = 200 * Math.cos(MathUtil.sign(this.horizontalSpeed) * x * (Math.PI / 180));\r\n        this.targetSpeed.y = 200 * Math.sin(MathUtil.sign(this.horizontalSpeed) * -45 * (Math.PI / 180));\r\n    }\r\n\r\n    private applyEffect(other: Entity): boolean {\r\n        if (other.tag != TagType.enemy) {\r\n            return false;\r\n        }\r\n\r\n        switch (this.myEntityType) {\r\n            case EntityType.bullet_lemon:\r\n                break;\r\n\r\n            case EntityType.ice_man_bullet:\r\n                ((<Enemy>other)).frozen.freeze();\r\n                return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n}","import { Enemy } from './enemy'\r\nimport { World } from '../world'\r\nimport { Surface } from '../world'\r\nimport { EntityType, TagType, AudioName, WallContact } from '../konstants'\r\nimport { Player } from '../player'\r\nimport { Entity } from '../entity'\r\nimport { Helper } from '../helper'\r\nimport { MathUtil } from '../util/mathutil'\r\nimport { Bullet } from '../bullets/bullet'\r\nimport { State } from '../fsm/state'\r\nimport { StateMachine } from '../fsm/stateMachine'\r\nimport { KeyedCollection } from '../util/mathutil'\r\nimport { Vector2 } from '../sat2d/vector2'\r\nimport { Ray } from '../sat2d/ray'\r\nimport { RayType } from '../sat2d/ray'\r\nimport { RayIntersection } from '../sat2d/rayIntersection'\r\nimport { SAT2D } from '../sat2d/sat2d'\r\nimport { fixedTime, fixedTimeMS } from '../main'\r\n\r\nenum FleaAnimationNames {\r\n    idle = 'idle',\r\n    pre_shoot = 'pre_shoot',\r\n    jump = 'jump'\r\n}\r\n\r\nexport class Flea extends Enemy {\r\n\r\n    public horizontalSpeed: number = 50;\r\n    public targetSpeed: Phaser.Point = new Phaser.Point(0, 0);\r\n    public isOnGround: boolean = true;\r\n    public useGravity: boolean = true;\r\n    public isJumping: boolean = true;\r\n    public isFalling: boolean = true;\r\n    public fsm: StateMachine;\r\n    private minJumpHeight: number = 1;\r\n    private maxJumpHeight: number = 44;\r\n    private timeToJumpApex = 0.35;\r\n    private gravityX: number = 0;\r\n    private gravityY: number = 0;\r\n    private maxJumpVelocity = 0;\r\n    private minJumpVelocity = 0;\r\n    private midGroundCheck: Ray;\r\n    private leftGroundCheck: Ray;\r\n    private rightGroundCheck: Ray;\r\n    private midCeilCheck: Ray;\r\n    private leftCeilCheck: Ray;\r\n    private rightCeilCheck: Ray;\r\n    private leftCheck1: Ray;\r\n    private leftCheck2: Ray;\r\n    private rightCheck1: Ray;\r\n    private rightCheck2: Ray;\r\n    private groundRays: Array<Ray> = new Array<Ray>();\r\n    private ceilRays: Array<Ray> = new Array<Ray>();\r\n    private leftRays: Array<Ray> = new Array<Ray>();\r\n    private rightRays: Array<Ray> = new Array<Ray>();\r\n    private skinWidth: number = 5;\r\n    private wallContact: WallContact;\r\n    private tempInto: RayIntersection;\r\n    private tempRay_1: Ray = new Ray(new Vector2(), new Vector2(), RayType.not_infinite);\r\n    private tempRay_2: Ray = new Ray(new Vector2(), new Vector2(), RayType.not_infinite);\r\n\r\n    constructor(myWorld: World, tag: TagType, e: EntityType, game: Phaser.Game, x: number, y: number, key: string, frame: string) {\r\n        super(myWorld, tag, e, game, x, y, key, frame);\r\n\r\n        this.fsm = new StateMachine();\r\n        this.fsm.addState(FleaState.idle, new FleaIdleState(this));\r\n        this.fsm.addState(FleaState.jump, new FleaJumpState(this));\r\n        this.fsm.changeState(FleaState.idle);\r\n\r\n        this.getPosition().x = x;\r\n        this.getPosition().y = y;\r\n        this.position.x = (this.getPosition().x + 0.5) | 0;\r\n        this.position.y = this.getPosition().y;\r\n        this.smoothed = false;\r\n        this.anchor.setTo(0.5, 0.5);\r\n        this.health = 1;\r\n        this.maxHealth = 1;\r\n        this.isShielded = false;\r\n\r\n        this.animations.add(FleaAnimationNames.idle, ['flea_01'], 10, false, false);\r\n        this.animations.add(FleaAnimationNames.jump, ['flea_02'], 10, false, false);\r\n        this.animations.play(FleaAnimationNames.idle);\r\n\r\n        this.hitbox = new Phaser.Rectangle(this.getPosition().x, this.getPosition().y, 16, 16);\r\n        this.hitboxOffset.x = -this.hitbox.halfWidth;\r\n        this.hitboxOffset.y = -this.hitbox.halfHeight;\r\n        this.updateRect();\r\n\r\n        this.midGroundCheck = new Ray(new Vector2(), new Vector2(), RayType.not_infinite);\r\n        this.leftGroundCheck = new Ray(new Vector2(), new Vector2(), RayType.not_infinite);\r\n        this.rightGroundCheck = new Ray(new Vector2(), new Vector2(), RayType.not_infinite);\r\n        this.midCeilCheck = new Ray(new Vector2(), new Vector2(), RayType.not_infinite);\r\n        this.leftCeilCheck = new Ray(new Vector2(), new Vector2(), RayType.not_infinite);\r\n        this.rightCeilCheck = new Ray(new Vector2(), new Vector2(), RayType.not_infinite);\r\n        this.leftCheck1 = new Ray(new Vector2(), new Vector2(), RayType.not_infinite);\r\n        this.leftCheck2 = new Ray(new Vector2(), new Vector2(), RayType.not_infinite);\r\n        this.rightCheck1 = new Ray(new Vector2(), new Vector2(), RayType.not_infinite);\r\n        this.rightCheck2 = new Ray(new Vector2(), new Vector2(), RayType.not_infinite);\r\n        this.groundRays.push(this.midGroundCheck);\r\n        this.groundRays.push(this.leftGroundCheck);\r\n        this.groundRays.push(this.rightGroundCheck);\r\n        this.ceilRays.push(this.midCeilCheck);\r\n        this.ceilRays.push(this.leftCeilCheck);\r\n        this.ceilRays.push(this.rightCeilCheck);\r\n        this.leftRays.push(this.leftCheck1);\r\n        this.leftRays.push(this.leftCheck2);\r\n        this.rightRays.push(this.rightCheck1);\r\n        this.rightRays.push(this.rightCheck2);\r\n\r\n        this.wallContact = { left: false, right: false, up: false, down: false };\r\n        this.calculateRegularJumpSettings();\r\n    }\r\n\r\n    public manualUpdate(): void {\r\n        // this.pGraphicsDebug.clear();\r\n\r\n        if (!this.alive) {\r\n            return;\r\n        }\r\n\r\n        this.frozen.update();\r\n        if (this.frozen.isFrozen) {\r\n            return;\r\n        }\r\n\r\n        this.fsm.currentState.update();\r\n\r\n        if (this.useGravity) {\r\n            this.targetSpeed.x += Math.abs(this.gravityX) * fixedTime;\r\n            this.targetSpeed.y += Math.abs(this.gravityY) * fixedTime;\r\n        }\r\n\r\n        this.velocity.x = this.targetSpeed.x;\r\n        this.velocity.y = this.targetSpeed.y;\r\n\r\n        if (this.isOnGround) {\r\n            this.targetSpeed.x *= 0.75;\r\n        }\r\n\r\n        this.getPosition().x += this.velocity.x * fixedTime;\r\n        this.getPosition().y += this.velocity.y * fixedTime;\r\n\r\n        this.position.x = (this.getPosition().x + 0.5) | 0;\r\n        this.position.y = this.getPosition().y;\r\n\r\n        this.updateRect();\r\n        this.castRays();\r\n    }\r\n\r\n    public checkSurfaceCollisions(surfaces: Array<Surface>): void {\r\n        this.wallContact.left = false;\r\n        this.wallContact.right = false;\r\n        this.wallContact.up = false;\r\n        this.wallContact.down = false;\r\n        this.isOnGround = false;\r\n\r\n        this.tempInto = null;\r\n\r\n        for (let j = 0; j < surfaces.length; j++) {\r\n            let surface: Surface = surfaces[j];\r\n\r\n            if (!surface.collidable) {\r\n                continue;\r\n            }\r\n\r\n            let nx: number = surface.dir.y;\r\n            let ny: number = -surface.dir.x;\r\n\r\n            // Check floors\r\n            if (ny == -1 && this.getVelocity().y > 0) {\r\n                for (let k = 0; k < this.groundRays.length; k++) {\r\n                    this.tempRay_1 = this.groundRays[k];\r\n\r\n                    this.tempRay_2.start = new Vector2(surface.p1.x, surface.p1.y);\r\n                    this.tempRay_2.end = new Vector2(surface.p2.x, surface.p2.y);\r\n                    this.tempRay_2.recalculateDir();\r\n                    this.tempInto = SAT2D.testRayVsRay(this.tempRay_1, this.tempRay_2, this.tempInto);\r\n\r\n                    if (this.tempInto != null) {\r\n\r\n                        let dx: number = this.tempInto.ray1.end.x - this.tempInto.ray1.start.x;\r\n                        let dy: number = this.tempInto.ray1.end.y - this.tempInto.ray1.start.y;\r\n                        let distance: number = Math.sqrt(dx * dx + dy * dy);\r\n                        let trueDistance: number = distance * this.tempInto.u1;\r\n\r\n                        let contactX: number = this.tempInto.ray1.start.x + this.tempInto.ray1.dir.x * this.tempInto.u1;\r\n                        let contactY: number = this.tempInto.ray1.start.y + trueDistance;\r\n\r\n                        // this.pGraphicsDebug.drawCircle(contactX, contactY, 3);\r\n\r\n                        if (trueDistance > this.hitbox.halfHeight) {\r\n                            continue;\r\n                        }\r\n\r\n                        this.getPosition().y = contactY - this.hitbox.halfHeight;\r\n                        this.setVelocity(this.getVelocity().x, 0);\r\n                        this.targetSpeed.y = 0;\r\n                        this.isOnGround = true;\r\n                        this.isJumping = false;\r\n                        this.isFalling = false;\r\n                        this.wallContact.down = true;\r\n                        continue;\r\n                    }\r\n                }\r\n            }\r\n\r\n            // Check ceilings\r\n            if (ny == 1 && this.getVelocity().y < 0) {\r\n                for (let k = 0; k < this.ceilRays.length; k++) {\r\n                    this.tempRay_1 = this.ceilRays[k];\r\n\r\n                    this.tempRay_2.start = new Vector2(surface.p1.x, surface.p1.y);\r\n                    this.tempRay_2.end = new Vector2(surface.p2.x, surface.p2.y);\r\n                    this.tempRay_2.recalculateDir();\r\n                    this.tempInto = SAT2D.testRayVsRay(this.tempRay_1, this.tempRay_2, this.tempInto);\r\n\r\n                    if (this.tempInto != null) {\r\n\r\n                        let dx: number = this.tempInto.ray1.end.x - this.tempInto.ray1.start.x;\r\n                        let dy: number = this.tempInto.ray1.end.y - this.tempInto.ray1.start.y;\r\n                        let distance: number = Math.sqrt(dx * dx + dy * dy);\r\n                        let trueDistance: number = distance * this.tempInto.u1;\r\n\r\n                        let contactX: number = this.tempInto.ray1.start.x + this.tempInto.ray1.dir.x * this.tempInto.u1;\r\n                        let contactY: number = this.tempInto.ray1.start.y - trueDistance;\r\n\r\n                        // this.pGraphicsDebug.drawCircle(contactX, contactY, 3);\r\n\r\n                        if (trueDistance > this.hitbox.halfHeight) {\r\n                            continue;\r\n                        }\r\n\r\n                        this.getPosition().y = contactY + this.hitbox.halfHeight;\r\n                        this.setVelocity(this.getVelocity().x, 0);\r\n                        this.targetSpeed.y = 0;\r\n                        this.isFalling = true;\r\n                        this.wallContact.up = true;\r\n                        continue;\r\n                    }\r\n                }\r\n            }\r\n\r\n            // Check right walls\r\n            if (nx == -1 && this.getVelocity().x > 0) {\r\n                for (let k = 0; k < this.rightRays.length; k++) {\r\n                    this.tempRay_1 = this.rightRays[k];\r\n\r\n                    this.tempRay_2.start = new Vector2(surface.p1.x, surface.p1.y);\r\n                    this.tempRay_2.end = new Vector2(surface.p2.x, surface.p2.y);\r\n                    this.tempRay_2.recalculateDir();\r\n                    this.tempInto = SAT2D.testRayVsRay(this.tempRay_1, this.tempRay_2, this.tempInto);\r\n\r\n                    if (this.tempInto != null) {\r\n\r\n                        let dx: number = this.tempInto.ray1.end.x - this.tempInto.ray1.start.x;\r\n                        let dy: number = this.tempInto.ray1.end.y - this.tempInto.ray1.start.y;\r\n                        let distance: number = Math.sqrt(dx * dx + dy * dy);\r\n                        let trueDistance: number = distance * this.tempInto.u1;\r\n\r\n                        let contactX: number = this.tempInto.ray1.start.x + trueDistance;\r\n                        let contactY: number = this.tempInto.ray1.start.y;\r\n\r\n                        // this.pGraphicsDebug.lineStyle(1, 0);\r\n                        // this.pGraphicsDebug.beginFill(0xff0000, 0.5);\r\n                        // this.pGraphicsDebug.drawCircle(contactX, contactY, 5);\r\n\r\n                        if (trueDistance > this.hitbox.halfWidth) {\r\n                            continue;\r\n                        }\r\n\r\n                        this.getPosition().x = contactX - this.hitbox.halfWidth;\r\n                        this.wallContact.right = true;\r\n                        continue;\r\n                    }\r\n                }\r\n            }\r\n\r\n            // Check left walls\r\n            if (nx == 1 && this.getVelocity().x < 0) {\r\n                for (let k = 0; k < this.leftRays.length; k++) {\r\n                    this.tempRay_1 = this.leftRays[k];\r\n\r\n                    this.tempRay_2.start = new Vector2(surface.p1.x, surface.p1.y);\r\n                    this.tempRay_2.end = new Vector2(surface.p2.x, surface.p2.y);\r\n                    this.tempRay_2.recalculateDir();\r\n                    this.tempInto = SAT2D.testRayVsRay(this.tempRay_1, this.tempRay_2, this.tempInto);\r\n\r\n                    if (this.tempInto != null) {\r\n\r\n                        let dx: number = this.tempInto.ray1.end.x - this.tempInto.ray1.start.x;\r\n                        let dy: number = this.tempInto.ray1.end.y - this.tempInto.ray1.start.y;\r\n                        let distance: number = Math.sqrt(dx * dx + dy * dy);\r\n                        let trueDistance: number = distance * this.tempInto.u1;\r\n\r\n                        let contactX: number = this.tempInto.ray1.start.x - trueDistance;\r\n                        let contactY: number = this.tempInto.ray1.start.y;\r\n\r\n                        // this.pGraphicsDebug.lineStyle(1, 0);\r\n                        // this.pGraphicsDebug.beginFill(0xff0000, 0.5);\r\n                        // this.pGraphicsDebug.drawCircle(contactX, contactY, 5);\r\n\r\n                        if (trueDistance > this.hitbox.halfWidth) {\r\n                            continue;\r\n                        }\r\n\r\n                        this.getPosition().x = contactX + this.hitbox.halfWidth;\r\n                        this.wallContact.left = true;\r\n                        continue;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    public takeDamage(damage: number): void {\r\n        if (this.isShielded) {\r\n            this.game.sound.play(AudioName.dink);\r\n            return;\r\n        }\r\n\r\n        if (this.health <= 0) {\r\n            return;\r\n        }\r\n\r\n        this.game.sound.play(AudioName.enemy_damage);\r\n        this.health -= damage;\r\n\r\n        if (this.health <= 0) {\r\n            this.health = 0;\r\n            this.myWorld.dropManager.dropPowerUp(this.getPosition().x - (<Phaser.Rectangle>this.hitbox).halfWidth, this.getPosition().y);\r\n            this.myWorld.createExplosionEffect(this.getPosition().x, this.getPosition().y - (<Phaser.Rectangle>this.hitbox).halfHeight);\r\n            this.kill();\r\n        }\r\n    }\r\n\r\n    private calculateRegularJumpSettings(): void {\r\n        this.gravityY = -(2 * this.maxJumpHeight) / Math.pow(this.timeToJumpApex, 2);\r\n        this.maxJumpVelocity = Math.abs(this.gravityY) * this.timeToJumpApex;\r\n        this.minJumpVelocity = Math.sqrt(2 * Math.abs(this.gravityY) * this.minJumpHeight);\r\n\r\n        // console.log('gravity: ' + this._gravity);\r\n        // console.log('maxJumpVelocity: ' + this._maxJumpVelocity);\r\n        // console.log('minJumpVelocity: ' + this._minJumpVelocity);\r\n    }\r\n\r\n    /**\r\n     * Using the current position moves the rays a frame even though the player may be running into a wall. By using\r\n     * previous position the rays don't move for that frame. They use the previous frame. Think about it, when the player\r\n     * is running into a wall, its 'bounds' should not move.\r\n     */\r\n    private castRays(): void {\r\n        let centerX: number = this.getPosition().x;\r\n        let centerY: number = this.getPosition().y;\r\n\r\n        if (this.wallContact.left || this.wallContact.right) {\r\n            centerX = this.previousPosition.x;\r\n        }\r\n\r\n        // cast ground rays\r\n        this.midGroundCheck.start = new Vector2(centerX, centerY);\r\n        this.midGroundCheck.end = new Vector2(centerX, centerY + this.hitbox.height);\r\n        this.leftGroundCheck.start = new Vector2(centerX - this.hitbox.halfWidth, centerY);\r\n        this.leftGroundCheck.end = new Vector2(centerX - this.hitbox.halfWidth, centerY + this.hitbox.height);\r\n        this.rightGroundCheck.start = new Vector2(centerX + this.hitbox.halfWidth, centerY);\r\n        this.rightGroundCheck.end = new Vector2(centerX + this.hitbox.halfWidth, centerY + this.hitbox.height);\r\n\r\n        // cast ceil rays\r\n        this.midCeilCheck.start = new Vector2(centerX, centerY);\r\n        this.midCeilCheck.end = new Vector2(centerX, centerY - this.hitbox.height);\r\n        this.leftCeilCheck.start = new Vector2(centerX - this.hitbox.halfWidth, centerY);\r\n        this.leftCeilCheck.end = new Vector2(centerX - this.hitbox.halfWidth, centerY - this.hitbox.height);\r\n        this.rightCeilCheck.start = new Vector2(centerX + this.hitbox.halfWidth, centerY);\r\n        this.rightCeilCheck.end = new Vector2(centerX + this.hitbox.halfWidth, centerY - this.hitbox.height);\r\n\r\n        // cast left rays\r\n        this.leftCheck1.start = new Vector2(centerX, centerY - this.hitbox.halfHeight);\r\n        this.leftCheck1.end = new Vector2(centerX - this.hitbox.width, centerY);\r\n        this.leftCheck2.start = new Vector2(centerX, centerY + this.hitbox.halfHeight);\r\n        this.leftCheck2.end = new Vector2(centerX - this.hitbox.width, centerY);\r\n\r\n        // // cast right rays\r\n        this.rightCheck1.start = new Vector2(centerX, centerY - this.hitbox.halfHeight);\r\n        this.rightCheck1.end = new Vector2(centerX + this.hitbox.width, centerY);\r\n        this.rightCheck2.start = new Vector2(centerX, centerY + this.hitbox.halfHeight);\r\n        this.rightCheck2.end = new Vector2(centerX + this.hitbox.width, centerY);\r\n    }\r\n}\r\n\r\nenum FleaState {\r\n    idle = 'idle',\r\n    jump = 'jump',\r\n}\r\n\r\nclass FleaIdleState implements State {\r\n\r\n    public name: string = FleaState.idle;\r\n    public initialized: boolean;\r\n    public actor: Flea;\r\n    private waitElapsedTime: number = 0;\r\n    private waitEndTime: number = 500;\r\n\r\n    constructor(actor: Flea) {\r\n        this.actor = actor;\r\n    }\r\n\r\n    enter(): void {\r\n        this.initialized = true;\r\n        this.actor.animations.play(FleaAnimationNames.idle);\r\n    }\r\n\r\n    update(): void {\r\n        this.waitElapsedTime += fixedTimeMS;\r\n\r\n        if (this.waitElapsedTime >= this.waitEndTime) {\r\n            this.actor.fsm.changeState(FleaState.jump);\r\n            return;\r\n        }\r\n    }\r\n\r\n    exit(): void {\r\n        this.initialized = false;\r\n        this.waitElapsedTime = 0;\r\n    }\r\n}\r\n\r\n\r\nclass FleaJumpState implements State {\r\n\r\n    public name: string = FleaState.jump;\r\n    public initialized: boolean;\r\n    public actor: Flea;\r\n\r\n    constructor(actor: Flea) {\r\n        this.actor = actor;\r\n    }\r\n\r\n    enter(): void {\r\n        this.initialized = true;\r\n        this.actor.animations.play(FleaAnimationNames.jump);\r\n        this.actor.setFacingDirection(-1);\r\n        this.actor.isOnGround = false;\r\n        let dirToPlayer: number = -MathUtil.sign(this.actor.getPosition().x - this.actor.myWorld.entityManager.player.getPosition().x);\r\n        let random: number = Math.random();\r\n\r\n        if (random > 0.5) { // low arc, long distance\r\n            this.actor.targetSpeed.x = Math.cos(45 * (Math.PI / 180)) * 200 * dirToPlayer;\r\n            this.actor.targetSpeed.y = Math.sin(45 * (Math.PI / 180)) * 300 * -1;\r\n        }\r\n        else { // high arc, short distance\r\n            this.actor.targetSpeed.x = Math.cos(80 * (Math.PI / 180)) * 290 * dirToPlayer;\r\n            this.actor.targetSpeed.y = Math.sin(80 * (Math.PI / 180)) * 290 * -1;\r\n        }\r\n    }\r\n\r\n    update(): void {\r\n        if (this.actor.isOnGround) {\r\n            this.actor.targetSpeed.x = 0;\r\n            this.actor.targetSpeed.y = 0;\r\n            this.actor.setFacingDirection(1);\r\n            this.actor.fsm.changeState(FleaState.idle);\r\n            return;\r\n        }\r\n    }\r\n\r\n    exit(): void {\r\n        this.initialized = false;\r\n    }\r\n}","import { Enemy } from '../enemies/enemy'\r\nimport { World, Surface } from '../world'\r\nimport { EntityType, TagType, AudioName } from '../konstants'\r\nimport { Player } from '../player'\r\nimport { Helper } from '../helper'\r\nimport { MathUtil } from '../util/mathutil'\r\nimport { Bullet } from '../bullets/bullet'\r\nimport { State } from '../fsm/state'\r\nimport { StateMachine } from '../fsm/stateMachine'\r\nimport { KeyedCollection } from '../util/mathutil'\r\nimport { PowerUp } from '../powerups/powerup'\r\nimport { SAT2D } from '../sat2d/sat2d'\r\nimport { Ray } from '../sat2d/ray'\r\nimport { RayIntersection } from '../sat2d/rayIntersection'\r\nimport { RayType } from '../sat2d/ray'\r\nimport { Vector2 } from '../sat2d/vector2'\r\nimport { fixedTime, fixedTimeMS } from '../main'\r\n\r\nenum FlyingShellAnimations {\r\n    move = 'move',\r\n    shoot = 'shoot',\r\n}\r\n\r\nexport class FlyingShell extends Enemy {\r\n\r\n    public horizontalSpeed: number = 50;\r\n    public targetSpeed: Phaser.Point = new Phaser.Point(0, 0);\r\n    public prevTargetSpeed: Phaser.Point = new Phaser.Point(0, 0);\r\n    public fsm: StateMachine;\r\n\r\n    constructor(myWorld: World, tag: TagType, e: EntityType, game: Phaser.Game, x: number, y: number, key: string, frame: string) {\r\n        super(myWorld, tag, e, game, x, y, key, frame);\r\n\r\n        this.getPosition().x = x;\r\n        this.getPosition().y = y;\r\n        this.position.x = (this.getPosition().x + 0.5) | 0;\r\n        this.position.y = this.getPosition().y;\r\n        this.anchor.setTo(0.5, 0.5);\r\n        this.smoothed = false;\r\n        this.setFacingDirection(1);\r\n        this.health = 1;\r\n        this.maxHealth = 1;\r\n        this.isShielded = false;\r\n\r\n        this.animations.add(FlyingShellAnimations.move, ['flying_shell_01'], 10, false, false);\r\n        this.animations.add(FlyingShellAnimations.shoot, ['flying_shell_01', 'flying_shell_02'], 10, false, false);\r\n        this.animations.play(FlyingShellAnimations.move);\r\n\r\n        this.fsm = new StateMachine();\r\n        this.fsm.addState(FlyingShellState.move, new FlyingShellMoveState(this));\r\n        this.fsm.addState(FlyingShellState.shoot, new FlyingShellShootState(this));\r\n        this.fsm.changeState(FlyingShellState.move);\r\n\r\n        this.hitbox = new Phaser.Rectangle(this.getPosition().x, this.getPosition().y, 16, 16);\r\n        this.hitboxOffset.x = -this.hitbox.halfWidth - 1;\r\n        this.hitboxOffset.y = -this.hitbox.halfHeight + 2;\r\n        this.updateRect();\r\n    }\r\n\r\n    public manualUpdate(): void {\r\n        // this.pGraphicsDebug.clear();\r\n\r\n        if (!this.alive) {\r\n            return;\r\n        }\r\n\r\n        this.frozen.update();\r\n        if (this.frozen.isFrozen) {\r\n            return;\r\n        }\r\n\r\n        this.fsm.currentState.update();\r\n\r\n        this.velocity.x = this.targetSpeed.x;\r\n        this.velocity.y = this.targetSpeed.y;\r\n\r\n        this.getPosition().x += this.velocity.x * fixedTime;\r\n        this.getPosition().y += this.velocity.y * fixedTime;\r\n\r\n        this.position.x = (this.getPosition().x + 0.5) | 0;\r\n        this.position.y = this.getPosition().y;\r\n\r\n        this.updateRect();\r\n    }\r\n\r\n    public takeDamage(damage: number): void {\r\n        if (this.isShielded) {\r\n            this.game.sound.play(AudioName.dink);\r\n            return;\r\n        }\r\n\r\n        if (this.health <= 0) {\r\n            return;\r\n        }\r\n\r\n        this.game.sound.play(AudioName.enemy_damage);\r\n        this.health -= damage;\r\n\r\n        if (this.health <= 0) {\r\n            this.health = 0;\r\n            this.myWorld.dropManager.dropPowerUp(this.getPosition().x, this.getPosition().y);\r\n            this.myWorld.createExplosionEffect(this.getPosition().x, this.getPosition().y - (<Phaser.Rectangle>this.hitbox).halfHeight);\r\n            this.kill();\r\n        }\r\n    }\r\n\r\n    public shoot(angle: number): void {\r\n        let bullet: Bullet = this.myWorld.entityManager.createBitmapBullet(this, this.position.x, this.position.y - 4, 6, 6, EntityType.bullet, EntityType.screw_bomber_bullet);\r\n        bullet.horizontalSpeed = 160;\r\n        let cos: number = Math.cos(angle * (Math.PI / 180));\r\n        let sin: number = Math.sin(angle * (Math.PI / 180));\r\n        bullet.targetSpeed.x = bullet.horizontalSpeed * cos * -this.getFacingDirection();\r\n        bullet.targetSpeed.y = bullet.horizontalSpeed * sin * -this.getFacingDirection();\r\n    }\r\n}\r\n\r\nenum FlyingShellState {\r\n    move = 'move',\r\n    shoot = 'shoot',\r\n}\r\n\r\nclass FlyingShellMoveState implements State {\r\n\r\n    name: string = FlyingShellState.move;\r\n    initialized: boolean;\r\n    actor: FlyingShell;\r\n    private elapsedTime: number = 0;\r\n    private endTime: number = 1000;\r\n\r\n    constructor(actor: FlyingShell) {\r\n        this.actor = actor;\r\n    }\r\n\r\n    enter(): void {\r\n        this.initialized = true;\r\n        this.actor.animations.play(FlyingShellAnimations.move);\r\n        this.actor.targetSpeed.x = -this.actor.horizontalSpeed;\r\n        this.actor.isShielded = true;\r\n    }\r\n\r\n    update(): void {\r\n        this.elapsedTime += fixedTimeMS;\r\n\r\n        if (this.elapsedTime >= this.endTime) {\r\n            this.actor.fsm.changeState(FlyingShellState.shoot);\r\n            return;\r\n        }\r\n    }\r\n\r\n    exit(): void {\r\n        this.initialized = false;\r\n        this.elapsedTime = 0;\r\n    }\r\n}\r\n\r\nclass FlyingShellShootState implements State {\r\n\r\n    name: string = FlyingShellState.shoot;\r\n    initialized: boolean;\r\n    actor: FlyingShell;\r\n    private elapsedTime: number = 0;\r\n    private endTime: number = 500;\r\n\r\n    constructor(actor: FlyingShell) {\r\n        this.actor = actor;\r\n    }\r\n\r\n    enter(): void {\r\n        this.initialized = true;\r\n        this.actor.animations.play(FlyingShellAnimations.shoot);\r\n        this.actor.targetSpeed.x = 0;\r\n        this.actor.shoot(-180);\r\n        this.actor.shoot(-135);\r\n        this.actor.shoot(-90);\r\n        this.actor.shoot(-45);\r\n        this.actor.shoot(-0);\r\n        this.actor.shoot(45);\r\n        this.actor.shoot(90);\r\n        this.actor.shoot(135);\r\n        this.actor.shoot(180);\r\n        this.actor.game.sound.play(AudioName.enemy_shoot);\r\n        this.actor.isShielded = false;\r\n    }\r\n\r\n    update(): void {\r\n        this.elapsedTime += fixedTimeMS;\r\n\r\n        if (this.elapsedTime >= this.endTime) {\r\n            this.actor.fsm.changeState(FlyingShellState.move);\r\n            return;\r\n        }\r\n    }\r\n\r\n    exit(): void {\r\n        this.initialized = false;\r\n        this.elapsedTime = 0;\r\n    }\r\n}","import { World } from './world'\r\nimport * as k from './konstants'\r\nimport { Entity } from './entity'\r\nimport { Helper } from './helper'\r\nimport { MathUtil } from './util/mathutil'\r\n\r\nexport class Spike extends Entity {\r\n\r\n    constructor(world: World, tag: k.TagType, e: k.EntityType, game: Phaser.Game, x: number, y: number, key: string, frame: string) {\r\n        super(world, tag, e, game, x, y, key, frame);\r\n\r\n        this.getPosition().x = x;\r\n        this.getPosition().y = y;\r\n        this.anchor.setTo(0.5, 1);\r\n\r\n        this.hitbox = new Phaser.Polygon(new Phaser.Point(), new Phaser.Point(), new Phaser.Point());\r\n        this.updateRect();\r\n\r\n        // this.pGraphicsDebug = this.game.add.graphics();\r\n        // this.game.add.existing(this.pGraphicsDebug);\r\n    }\r\n\r\n    public manualUpdate(): void {\r\n        // this.pGraphicsDebug.clear();\r\n    }\r\n\r\n    public updateRect(): void {\r\n        this.hitbox.points[0].x = this.getPosition().x - 6;\r\n        this.hitbox.points[0].y = this.getPosition().y;\r\n\r\n        this.hitbox.points[1].x = this.getPosition().x + 6;\r\n        this.hitbox.points[1].y = this.getPosition().y;\r\n\r\n        this.hitbox.points[2].x = this.getPosition().x;\r\n        this.hitbox.points[2].y = this.getPosition().y - 16;\r\n    }\r\n\r\n    public drawHitBox(): void {\r\n        let temp: Phaser.Polygon = this.hitbox;\r\n        let point: Phaser.Point = <Phaser.Point>temp.points[0];\r\n\r\n        // this.pGraphicsDebug.lineStyle(1);\r\n        // this.pGraphicsDebug.beginFill(0x00ff00, 0.5);\r\n        // this.pGraphicsDebug.moveTo(point.x, point.y);\r\n        // this.pGraphicsDebug.lineTo((<Phaser.Point>temp.points[1]).x, (<Phaser.Point>temp.points[1]).y);\r\n        // this.pGraphicsDebug.lineTo((<Phaser.Point>temp.points[2]).x, (<Phaser.Point>temp.points[2]).y);\r\n        // this.pGraphicsDebug.lineTo((<Phaser.Point>temp.points[0]).x, (<Phaser.Point>temp.points[0]).y);\r\n    }\r\n\r\n    public toggleVisibility():void{\r\n        \r\n    }\r\n}","import { World, Surface } from '../../world'\r\nimport { EntityType, TagType, AudioName, Konstants, WallContact } from '../../konstants'\r\nimport { Player } from '../../player'\r\nimport { Entity } from '../../entity'\r\nimport { Helper } from '../../helper'\r\nimport { MathUtil, KeyedCollection } from '../../util/mathutil'\r\nimport { State } from '../../fsm/state'\r\nimport { StateMachine } from '../../fsm/stateMachine'\r\nimport { Meter } from '../../ui/meter'\r\nimport { SAT2D } from '../../sat2d/sat2d'\r\nimport { Ray, RayType } from '../../sat2d/ray'\r\nimport { RayIntersection } from '../../sat2d/rayIntersection'\r\nimport { Vector2 } from '../../sat2d/vector2'\r\nimport { Boss } from './boss'\r\nimport { Bullet } from '../../bullets/bullet'\r\nimport { CutManBullet } from '../../bullets/cutManBullet'\r\nimport { BoomerangBulletMovement } from '../../bullets/boomerangBulletMovement'\r\n\r\nexport enum CutManAnimations {\r\n    idle = 'idle',\r\n    throw_cutter = 'throw_cutter',\r\n    taunt_with_cutter = 'taunt_with_cutter',\r\n    taunt_without_cutter = 'taunt_without_cutter',\r\n    taunt_long = 'taunt_long',\r\n    run_with_cutter = 'run_with_cutter',\r\n    run_without_cutter = 'run_without_cutter',\r\n    hurt_with_cutter = 'hurt_with_cutter',\r\n    hurt_without_cutter = 'hurt_without_cutter',\r\n    jump_with_cutter = 'jump_with_cutter',\r\n    jump_without_cutter = 'jump_without_cutter',\r\n}\r\n\r\nexport class CutMan extends Boss {\r\n\r\n    public hasThrownCutter: boolean = false;\r\n    private bullet: CutManBullet = null;\r\n\r\n    constructor(myWorld: World, tag: TagType, e: EntityType, game: Phaser.Game, x: number, y: number, key: string, frame: string) {\r\n        super(myWorld, tag, e, game, x, y, key, frame);\r\n\r\n        this.fsm = new StateMachine();\r\n        this.fsm.addState(CutManState.idle, new CutManIdleState(this));\r\n        this.fsm.addState(CutManState.throw_cutter, new CutManThrowCutterState(this));\r\n        this.fsm.addState(CutManState.jump_to_player, new CutManJumpToPlayerState(this));\r\n        this.fsm.addState(CutManState.move_to_player, new CutManMoveToPlayerState(this));\r\n        this.fsm.addState(CutManState.hurt, new CutManHurtState(this));\r\n        this.fsm.addState(CutManState.taunt, new CutManTauntState(this));\r\n        this.fsm.changeState(CutManState.idle);\r\n\r\n        this.animations.add(CutManAnimations.idle, ['taunt_with_cutter_01'], 10, false, false);\r\n        this.animations.add(CutManAnimations.throw_cutter, ['throw_01', 'throw_02'], 10, false, false);\r\n        this.animations.add(CutManAnimations.taunt_with_cutter, ['taunt_with_cutter_01', 'taunt_with_cutter_02'], 10, true, false);\r\n        this.animations.add(CutManAnimations.taunt_without_cutter, ['taunt_without_cutter_01', 'taunt_without_cutter_02'], 10, true, false);\r\n        this.animations.add(CutManAnimations.taunt_long, ['taunt_with_cutter_01', 'taunt_with_cutter_02', 'taunt_with_cutter_01', 'taunt_with_cutter_02', 'taunt_with_cutter_01', 'taunt_with_cutter_02', 'taunt_with_cutter_01', 'taunt_with_cutter_02', 'taunt_with_cutter_01', 'taunt_with_cutter_02'], 5, false, false);\r\n        this.animations.add(CutManAnimations.run_without_cutter, ['run_without_cutter_01', 'run_without_cutter_02', 'run_without_cutter_03', 'run_without_cutter_04'], 10, false, false);\r\n        this.animations.add(CutManAnimations.run_with_cutter, ['run_with_cutter_01', 'run_with_cutter_02', 'run_with_cutter_03', 'run_with_cutter_04'], 10, false, false);\r\n        this.animations.add(CutManAnimations.jump_with_cutter, ['jump_with_cutter'], 10, false, false);\r\n        this.animations.add(CutManAnimations.jump_without_cutter, ['jump_without_cutter'], 10, false, false);\r\n\r\n        this.hitbox = new Phaser.Rectangle(this.getPosition().x, this.getPosition().y, 16, 20);\r\n        this.hitboxOffset.x = -8;\r\n        this.hitboxOffset.y = -20;\r\n        this.updateRect();\r\n\r\n        this.healthMeter = new Meter(this.game, 40, 15);\r\n        this.healthMeter.setEnergy(0);\r\n        this.health = this.healthMeter.totalEnergy;\r\n        this.maxHealth = this.healthMeter.totalEnergy;\r\n\r\n        this.position.x = (this.getPosition().x + 0.5) | 0;\r\n        this.position.y = this.getPosition().y;\r\n\r\n        this.leftGroundCheck = new Ray(new Vector2(), new Vector2(), RayType.not_infinite);\r\n        this.rightGroundCheck = new Ray(new Vector2(), new Vector2(), RayType.not_infinite);\r\n        this.leftCeilCheck = new Ray(new Vector2(), new Vector2(), RayType.not_infinite);\r\n        this.rightCeilCheck = new Ray(new Vector2(), new Vector2(), RayType.not_infinite);\r\n        this.leftCheck1 = new Ray(new Vector2(), new Vector2(), RayType.not_infinite);\r\n        this.leftCheck2 = new Ray(new Vector2(), new Vector2(), RayType.not_infinite);\r\n        this.rightCheck1 = new Ray(new Vector2(), new Vector2(), RayType.not_infinite);\r\n        this.rightCheck2 = new Ray(new Vector2(), new Vector2(), RayType.not_infinite);\r\n        this.groundRays.push(this.leftGroundCheck);\r\n        this.groundRays.push(this.rightGroundCheck);\r\n        this.ceilRays.push(this.leftCeilCheck);\r\n        this.ceilRays.push(this.rightCeilCheck);\r\n        this.leftRays.push(this.leftCheck1);\r\n        this.leftRays.push(this.leftCheck2);\r\n        this.rightRays.push(this.rightCheck1);\r\n        this.rightRays.push(this.rightCheck2);\r\n\r\n        this.wallContact = { left: false, right: false, up: false, down: false };\r\n        this.calculateRegularJumpSettings();\r\n\r\n        this.whiteEffect = this.game.add.sprite(0, 0, Konstants.mega_man, 'white_effect.png');\r\n        this.whiteEffect.alpha = 0.5;\r\n        this.whiteEffect.visible = false;\r\n        this.addChild(this.whiteEffect);\r\n\r\n        this.weights.Add(CutManState.throw_cutter, 10);\r\n        this.weights.Add(CutManState.jump_to_player, 7);\r\n        this.weights.Add(CutManState.move_to_player, 10);\r\n        this.weights.Add(CutManState.taunt, 10);\r\n        this.weights.Keys().forEach(element => {\r\n            this.sumOfWeights += this.weights.Item(element);\r\n        });\r\n    }\r\n\r\n    public show(): void {\r\n        this.visible = true;\r\n        this.animations.play(CutManAnimations.taunt_long);\r\n    }\r\n\r\n    public performTaunt(): void {\r\n        this.animations.play(CutManAnimations.taunt_long);\r\n    }\r\n\r\n    public shoot(): boolean {\r\n        this.hasThrownCutter = true;\r\n        let xPos: number = this.getPosition().x + this.getFacingDirection();\r\n        let yPos: number = this.getPosition().y - 10;\r\n\r\n        this.bullet = new CutManBullet(this, this.player.myWorld, TagType.bullet, EntityType.bullet_cut_man, this.player.game, xPos, yPos, Konstants.rolling_cutter, '');\r\n        this.bullet.bulletMovement = new BoomerangBulletMovement(\r\n            this, new Phaser.Point(xPos, yPos), new Phaser.Point(this.player.getPosition().x, this.player.getPosition().y - 10), 120);\r\n\r\n        this.bullet.bulletMovement.destroyed.addOnce(() => {\r\n            this.hasThrownCutter = false;\r\n            this.bullet.destroyed.dispatch();\r\n            this.bullet.kill();\r\n        }, this);\r\n\r\n        this.player.game.add.existing(this.bullet);\r\n        this.player.myWorld.entityManager.addEntity(this.bullet);\r\n        this.player.game.sound.play(AudioName.rolling_cutter);\r\n\r\n        return true;\r\n    }\r\n\r\n    public takeDamage(damage: number, damageDir: Phaser.Point = new Phaser.Point(0, 0)): void {\r\n        if (this.isShielded) {\r\n            this.game.sound.play(AudioName.dink);\r\n            return;\r\n        }\r\n\r\n        if (this.health <= 0) {\r\n            return;\r\n        }\r\n\r\n        if (this.isInvincible) {\r\n            return;\r\n        }\r\n\r\n        this.healthMeter.takeEnergy(damage);\r\n        this.health -= damage;\r\n        this.targetSpeed.x = 30 * damageDir.x;\r\n        this.targetSpeed.y = 0;\r\n\r\n        if (this.health <= 0) {\r\n            this.game.sound.play(AudioName.explosion);\r\n\r\n            let speed: number = 24;\r\n            this.addDeathEffect(0, -speed); // top\r\n            this.addDeathEffect(speed, 0);  // right\r\n            this.addDeathEffect(0, speed);  // bottom\r\n            this.addDeathEffect(-speed, 0); // left\r\n\r\n            speed = 40;\r\n            this.addDeathEffect(0, -speed); // top\r\n            this.addDeathEffect(Math.cos(45 * (Math.PI / 180)) * speed, Math.sin(-45 * (Math.PI / 180)) * speed); // top-right\r\n            this.addDeathEffect(speed, 0);  // right\r\n            this.addDeathEffect(Math.cos(45 * (Math.PI / 180)) * speed, Math.sin(45 * (Math.PI / 180)) * speed); // bottom-right\r\n            this.addDeathEffect(0, speed);  // bottom\r\n            this.addDeathEffect(Math.cos(135 * (Math.PI / 180)) * speed, Math.sin(45 * (Math.PI / 180)) * speed); // bottom-left\r\n            this.addDeathEffect(-speed, 0);  // left\r\n            this.addDeathEffect(Math.cos(135 * (Math.PI / 180)) * speed, Math.sin(-45 * (Math.PI / 180)) * speed); // top-left\r\n\r\n            this.health = 0;\r\n            this.myWorld.dropManager.dropBossItem(EntityType.cut_man_boss_item, this.bossData.bossItemSpawnPosition.x * 16, this.bossData.bossItemSpawnPosition.y * 16);\r\n            this.myWorld.createExplosionEffect(this.getPosition().x, this.getPosition().y - (<Phaser.Rectangle>this.hitbox).halfHeight);\r\n            this.destroyed.dispatch(this);\r\n            this.kill();\r\n        }\r\n        else {\r\n            this.game.sound.play(AudioName.enemy_damage);\r\n            this.isHurt = true;\r\n            this.isInvincible = true;\r\n            this.isBlinking = true;\r\n            this.myWorld.createHurtDust(this.getPosition().x - 2, this.getPosition().y - 40);\r\n            this.myWorld.createHurtDust(this.getPosition().x - 12, this.getPosition().y - 36);\r\n            this.myWorld.createHurtDust(this.getPosition().x + 8, this.getPosition().y - 36);\r\n            this.whiteEffect.visible = true;\r\n            this.whiteEffect.position.x = -12;\r\n            this.whiteEffect.position.y = -24;\r\n            this.fsm.changeState(CutManState.hurt);\r\n        }\r\n    }\r\n}\r\n\r\nenum CutManState {\r\n    idle = 'idle',\r\n    throw_cutter = 'active',\r\n    jump_to_player = 'jump_to_player',\r\n    move_to_player = 'move_to_player',\r\n    hurt = 'hurt',\r\n    taunt = 'taunt',\r\n}\r\n\r\nclass CutManIdleState implements State {\r\n\r\n    name: string = CutManState.idle;\r\n    initialized: boolean;\r\n    actor: CutMan;\r\n    elapsedTime: number = 0;\r\n    endTime: number = 3000;\r\n\r\n    constructor(actor: CutMan) {\r\n        this.actor = actor;\r\n    }\r\n\r\n    enter(): void {\r\n        // console.log('CutManIdleState');\r\n        this.initialized = true;\r\n        this.actor.animations.play(CutManAnimations.idle);\r\n    }\r\n\r\n    update(): void {\r\n        let choice: string = MathUtil.weightedRandomKey(this.actor.weights, this.actor.sumOfWeights);\r\n\r\n        switch (choice) {\r\n            case CutManState.throw_cutter:\r\n                if (this.actor.hasThrownCutter) {\r\n                    break;\r\n                }\r\n                this.actor.fsm.changeState(CutManState.throw_cutter);\r\n                return;\r\n\r\n            case CutManState.jump_to_player:\r\n                this.actor.fsm.changeState(CutManState.jump_to_player);\r\n                break;\r\n\r\n            case CutManState.move_to_player:\r\n                this.actor.fsm.changeState(CutManState.move_to_player);\r\n                break;\r\n\r\n            case CutManState.taunt:\r\n                if (this.actor.isOnGround) {\r\n                    this.actor.fsm.changeState(CutManState.taunt);\r\n                }\r\n                break;\r\n        }\r\n    }\r\n\r\n    exit(): void {\r\n        this.initialized = false;\r\n        this.elapsedTime = 0;\r\n    }\r\n}\r\n\r\nclass CutManThrowCutterState implements State {\r\n\r\n    name: string = CutManState.throw_cutter;\r\n    initialized: boolean;\r\n    actor: CutMan;\r\n    elapsedTime: number = 0;\r\n    endTime: number = 1000;\r\n\r\n    constructor(actor: CutMan) {\r\n        this.actor = actor;\r\n    }\r\n\r\n    enter(): void {\r\n        // console.log('CutManThrowCutterState');\r\n        this.initialized = true;\r\n        if (this.actor.isOnGround) {\r\n            this.actor.targetSpeed.x = 0;\r\n        }\r\n        this.actor.animations.play(CutManAnimations.throw_cutter);\r\n    }\r\n\r\n    update(): void {\r\n        if (this.actor.animations.currentAnim.isFinished) {\r\n            this.actor.shoot();\r\n            this.actor.fsm.changeState(CutManState.idle);\r\n            return;\r\n        }\r\n    }\r\n\r\n    exit(): void {\r\n        this.initialized = false;\r\n        this.elapsedTime = 0;\r\n    }\r\n}\r\n\r\nclass CutManJumpToPlayerState implements State {\r\n\r\n    name: string = CutManState.jump_to_player;\r\n    initialized: boolean;\r\n    actor: CutMan;\r\n\r\n    constructor(actor: CutMan) {\r\n        this.actor = actor;\r\n    }\r\n\r\n    enter(): void {\r\n        // console.log('CutManJumpToPlayerState');\r\n        this.initialized = true;\r\n        let jumpVerticalSpeed: number = (Math.random() * (this.actor.maxJumpSpeed - this.actor.minJumpSpeed)) + this.actor.minJumpSpeed;\r\n        let dirX: number = MathUtil.sign(this.actor.player.getPosition().x - this.actor.getPosition().x);\r\n        this.actor.targetSpeed.y = -jumpVerticalSpeed;\r\n        this.actor.targetSpeed.x = this.actor.jumpHorizontalSpeed * dirX;\r\n\r\n        if (this.actor.hasThrownCutter) {\r\n            this.actor.animations.play(CutManAnimations.jump_without_cutter);\r\n        }\r\n        else {\r\n            this.actor.animations.play(CutManAnimations.jump_with_cutter);\r\n        }\r\n    }\r\n\r\n    update(): void {\r\n        if (this.actor.isOnGround) {\r\n            this.actor.fsm.changeState(CutManState.idle);\r\n            return;\r\n        }\r\n    }\r\n\r\n    exit(): void {\r\n        this.initialized = false;\r\n    }\r\n}\r\n\r\nclass CutManMoveToPlayerState implements State {\r\n\r\n    name: string = CutManState.move_to_player;\r\n    initialized: boolean;\r\n    actor: CutMan;\r\n    private dirToPlayer: Phaser.Point = new Phaser.Point();\r\n\r\n    constructor(actor: CutMan) {\r\n        this.actor = actor;\r\n    }\r\n\r\n    enter(): void {\r\n        // console.log('CutManMoveToPlayerState');\r\n        this.initialized = true;\r\n    }\r\n\r\n    update(): void {\r\n        if (this.actor.hasThrownCutter) {\r\n            this.actor.animations.play(CutManAnimations.run_without_cutter);\r\n        }\r\n        else {\r\n            this.actor.animations.play(CutManAnimations.run_with_cutter);\r\n        }\r\n\r\n        if (this.actor.wallContact.left) {\r\n            this.actor.fsm.changeState(CutManState.jump_to_player);\r\n            return;\r\n        }\r\n\r\n        this.dirToPlayer = Helper.directionTo2(this.actor.getPosition(), this.actor.player.getPosition());\r\n        this.actor.targetSpeed.x = MathUtil.sign(this.dirToPlayer.x) * this.actor.horizontalSpeed;\r\n        let distance: number = Helper.distanceTo2(this.actor.getPosition(), this.actor.player.getPosition());\r\n\r\n        if (distance < 5) {\r\n            this.actor.fsm.changeState(CutManState.idle);\r\n            return;\r\n        }\r\n    }\r\n\r\n    exit(): void {\r\n        this.initialized = false;\r\n    }\r\n}\r\n\r\nclass CutManHurtState implements State {\r\n\r\n    name: string = CutManState.hurt;\r\n    initialized: boolean;\r\n    actor: CutMan;\r\n\r\n    constructor(actor: CutMan) {\r\n        this.actor = actor;\r\n    }\r\n\r\n    enter(): void {\r\n        // console.log('CutManHurtState');\r\n        this.initialized = true;\r\n\r\n        if (this.actor.hasThrownCutter) {\r\n            this.actor.animations.play(CutManAnimations.hurt_without_cutter);\r\n        }\r\n        else {\r\n            this.actor.animations.play(CutManAnimations.hurt_with_cutter);\r\n        }\r\n    }\r\n\r\n    update(): void {\r\n\r\n        if (!this.actor.isHurt) {\r\n            this.actor.targetSpeed.x = 0;\r\n            this.actor.targetSpeed.y = 0;\r\n            this.actor.fsm.changeState(CutManState.idle);\r\n            return;\r\n        }\r\n    }\r\n\r\n    exit(): void {\r\n        this.initialized = false;\r\n    }\r\n}\r\n\r\nclass CutManTauntState implements State {\r\n\r\n    name: string = CutManState.taunt;\r\n    initialized: boolean;\r\n    actor: CutMan;\r\n\r\n    constructor(actor: CutMan) {\r\n        this.actor = actor;\r\n    }\r\n\r\n    enter(): void {\r\n        // console.log('CutManTauntState');\r\n        this.initialized = true;\r\n\r\n        if (this.actor.hasThrownCutter) {\r\n            this.actor.animations.play(CutManAnimations.taunt_without_cutter);\r\n        }\r\n        else {\r\n            this.actor.animations.play(CutManAnimations.taunt_with_cutter);\r\n        }\r\n\r\n        this.actor.targetSpeed.x = 0;\r\n\r\n        if (Math.random() > 0.75) {\r\n            this.actor.game.sound.play(AudioName.beam);\r\n        }\r\n    }\r\n\r\n    update(): void {\r\n        if (this.actor.animations.currentAnim.loopCount == 3) {\r\n            if (this.actor.hasThrownCutter) {\r\n                this.actor.fsm.changeState(CutManState.idle);\r\n            }\r\n            else {\r\n                this.actor.fsm.changeState(CutManState.throw_cutter);\r\n            }\r\n        }\r\n    }\r\n\r\n    exit(): void {\r\n        this.initialized = false;\r\n        this.actor.animations.stop();\r\n    }\r\n}\r\n","import { World, Surface } from '../../world'\r\nimport { EntityType, TagType, AudioName, Konstants, WallContact } from '../../konstants'\r\nimport { Player } from '../../player'\r\nimport { Entity } from '../../entity'\r\nimport { Helper } from '../../helper'\r\nimport { MathUtil, KeyedCollection } from '../../util/mathutil'\r\nimport { State } from '../../fsm/state'\r\nimport { StateMachine } from '../../fsm/stateMachine'\r\nimport { PowerUp } from '../../powerups/powerup'\r\nimport { Meter } from '../../ui/meter'\r\nimport { SAT2D } from '../../sat2d/sat2d'\r\nimport { Ray, RayType } from '../../sat2d/ray'\r\nimport { RayIntersection } from '../../sat2d/rayIntersection'\r\nimport { Vector2 } from '../../sat2d/vector2'\r\nimport { GameData, BossData } from '../../gameData'\r\n\r\nexport class Boss extends Entity {\r\n\r\n    public player: Player;\r\n    public horizontalSpeed: number = 65;\r\n    public targetSpeed: Phaser.Point = new Phaser.Point(0, 0);\r\n    public fsm: StateMachine;\r\n    public healthMeter: Meter;\r\n    public disableLogic: boolean = true;\r\n    public weights: KeyedCollection<number> = new KeyedCollection<number>();\r\n    public sumOfWeights: number = 0;\r\n    public isRunning: boolean = false;\r\n    public idleElapsedTime: number = 0;\r\n    public blinkStartTime: number = 2500;         // After some time player will play idle animation after (ms) passed.\r\n    public isIdle: boolean = false;               // The player has not moved for some time.\r\n    public isJumping: boolean = false;\r\n    public canJumpInAir: boolean = true;\r\n    public jumpInAirElapsedTime: number = 0;\r\n    public jumpInAirEndTime: number = 500;\r\n    public airJumpWindow: boolean = false;\r\n    public isFalling: boolean = false;\r\n    public useGravity: boolean = true;\r\n    public minJumpSpeed: number = 250;\r\n    public maxJumpSpeed: number = 300;\r\n    public isOnGround: boolean = false;\r\n    public jumpHorizontalSpeed: number = 60;\r\n\r\n    public isHurt: boolean = false;\r\n    public hurtElapsedTime: number = 0;\r\n    public hurtEndTime: number = 500;\r\n    public damageDir: Phaser.Point = new Phaser.Point;\r\n    public isInvincible: boolean = false;\r\n    public invincibleElapsedTime: number = 0;\r\n    public invincibleEndTime: number = 900;\r\n    public isBlinking: boolean = false;\r\n    public blinkingElapsedTime: number = 0;\r\n    public blinkingEndTime: number = 900;\r\n    public blinkRate: number = 2;\r\n    public blinkCounter: number = 0;\r\n    public whiteEffect: Phaser.Sprite;\r\n    public whiteEffectMaxCounter: number = 12;\r\n    public deathEffects: Array<Phaser.Sprite> = new Array<Phaser.Sprite>();\r\n    public wallContact: WallContact;\r\n    public bossData: BossData;\r\n\r\n    protected leftGroundCheck: Ray;\r\n    protected rightGroundCheck: Ray;\r\n    protected leftCeilCheck: Ray;\r\n    protected rightCeilCheck: Ray;\r\n    protected leftCheck1: Ray;\r\n    protected leftCheck2: Ray;\r\n    protected rightCheck1: Ray;\r\n    protected rightCheck2: Ray;\r\n    protected groundRays: Array<Ray> = new Array<Ray>();\r\n    protected ceilRays: Array<Ray> = new Array<Ray>();\r\n    protected leftRays: Array<Ray> = new Array<Ray>();\r\n    protected rightRays: Array<Ray> = new Array<Ray>();\r\n    protected skinWidth: number = 5;\r\n\r\n    protected minJumpHeight: number = 1;\r\n    protected maxJumpHeight: number = 44;\r\n    protected timeToJumpApex = 0.35;\r\n    protected gravityX: number = 0;\r\n    protected gravityY: number = 0;\r\n    protected maxJumpVelocity = 0;\r\n    protected minJumpVelocity = 0;\r\n\r\n    constructor(myWorld: World, tag: TagType, e: EntityType, game: Phaser.Game, x: number, y: number, key: string, frame: string) {\r\n        super(myWorld, tag, e, game, x, y, key, frame);\r\n\r\n        this.player = this.myWorld.entityManager.player;\r\n        this.getPosition().x = x;\r\n        this.getPosition().y = y;\r\n        this.anchor.setTo(0.5, 1);\r\n        this.smoothed = true;\r\n        this.setFacingDirection(1);\r\n        this.isShielded = false;\r\n        this.visible = false;\r\n    }\r\n\r\n    public manualUpdate(): void {\r\n        // this.pGraphicsDebug.clear();\r\n\r\n        if (!this.alive) {\r\n            return;\r\n        }\r\n\r\n        if (this.disableLogic) {\r\n            return;\r\n        }\r\n\r\n        let dirX: number = MathUtil.sign(this.player.getPosition().x - this.getPosition().x);\r\n        this.setFacingDirection(-MathUtil.sign(dirX));\r\n\r\n        this.fsm.currentState.update();\r\n\r\n        if (this.useGravity) {\r\n            this.targetSpeed.x += Math.abs(this.gravityX) * this.game.time.physicsElapsed;\r\n            this.targetSpeed.y += Math.abs(this.gravityY) * this.game.time.physicsElapsed;\r\n        }\r\n\r\n        this.velocity.x = this.targetSpeed.x;\r\n        this.velocity.y = this.targetSpeed.y;\r\n\r\n        this.getPosition().x += this.velocity.x * this.game.time.physicsElapsed;\r\n        this.getPosition().y += this.velocity.y * this.game.time.physicsElapsed;\r\n\r\n        this.position.x = (this.getPosition().x + 0.5) | 0;\r\n        this.position.y = this.getPosition().y;\r\n\r\n        this.checkBlink();\r\n        this.checkInvincible();\r\n        this.checkHurt();\r\n        this.checkIdle();\r\n        this.checkFalling();\r\n        this.updateRect();\r\n        this.castRays();\r\n        this.showDebugRays();\r\n    }\r\n\r\n    public show(): void {\r\n        this.visible = true;\r\n    }\r\n\r\n    /**\r\n     * Primarily used on the bosses initial spawn.\r\n     */\r\n    public performTaunt(): void {\r\n\r\n    }\r\n\r\n    public checkSurfaceCollisions(surfaces: Array<Surface>): void {\r\n        this.wallContact.left = false;\r\n        this.wallContact.right = false;\r\n        this.wallContact.up = false;\r\n        this.wallContact.down = false;\r\n        this.isOnGround = false;\r\n\r\n        let into: RayIntersection;\r\n\r\n        for (let j = 0; j < surfaces.length; j++) {\r\n            let surface: Surface = surfaces[j];\r\n\r\n            if (!surface.collidable) {\r\n                continue;\r\n            }\r\n\r\n            let nx: number = surface.dir.y;\r\n            let ny: number = -surface.dir.x;\r\n\r\n            // Check floors\r\n            if (ny == -1 && this.getVelocity().y > 0) {\r\n                for (let k = 0; k < this.groundRays.length; k++) {\r\n                    let ray: Ray = this.groundRays[k];\r\n\r\n                    into = SAT2D.testRayVsRay(ray, new Ray(new Vector2(surface.p1.x, surface.p1.y),\r\n                        new Vector2(surface.p2.x, surface.p2.y), RayType.not_infinite), into);\r\n\r\n                    if (into != null) {\r\n\r\n                        let dx: number = into.ray1.end.x - into.ray1.start.x;\r\n                        let dy: number = into.ray1.end.y - into.ray1.start.y;\r\n                        let distance: number = Math.sqrt(dx * dx + dy * dy);\r\n                        let trueDistance: number = distance * into.u1;\r\n\r\n                        let contactX: number = into.ray1.start.x + into.ray1.dir.x * into.u1;\r\n                        let contactY: number = into.ray1.start.y + trueDistance;\r\n\r\n                        // this.pGraphicsDebug.drawCircle(contactX, contactY, 3);\r\n\r\n                        if (trueDistance > this.hitbox.height * 0.5) {\r\n                            continue;\r\n                        }\r\n\r\n                        this.getPosition().y = contactY;\r\n                        this.setVelocity(this.getVelocity().x, 0);\r\n                        this.targetSpeed.y = 0;\r\n                        this.isOnGround = true;\r\n                        this.isJumping = false;\r\n                        this.isFalling = false;\r\n                        this.airJumpWindow = false;\r\n                        this.jumpInAirElapsedTime = 0;\r\n                        this.wallContact.down = true;\r\n                        continue;\r\n                    }\r\n                }\r\n            }\r\n\r\n            // Check ceilings\r\n            if (ny == 1 && this.getVelocity().y < 0) {\r\n                for (let k = 0; k < this.ceilRays.length; k++) {\r\n                    let ray: Ray = this.ceilRays[k];\r\n\r\n                    into = SAT2D.testRayVsRay(ray, new Ray(new Vector2(surface.p1.x, surface.p1.y),\r\n                        new Vector2(surface.p2.x, surface.p2.y), RayType.not_infinite), into);\r\n\r\n                    if (into != null) {\r\n\r\n                        let dx: number = into.ray1.end.x - into.ray1.start.x;\r\n                        let dy: number = into.ray1.end.y - into.ray1.start.y;\r\n                        let distance: number = Math.sqrt(dx * dx + dy * dy);\r\n                        let trueDistance: number = distance * into.u1;\r\n\r\n                        let contactX: number = into.ray1.start.x + into.ray1.dir.x * into.u1;\r\n                        let contactY: number = into.ray1.start.y - trueDistance;\r\n\r\n                        // this.pGraphicsDebug.drawCircle(contactX, contactY, 3);\r\n\r\n                        if (trueDistance > this.hitbox.height * 0.5) {\r\n                            continue;\r\n                        }\r\n\r\n                        this.getPosition().y = contactY + this.hitbox.height;\r\n                        this.setVelocity(this.getVelocity().x, 0);\r\n                        this.targetSpeed.y = 0;\r\n                        this.isFalling = true;\r\n                        this.wallContact.up = true;\r\n                        continue;\r\n                    }\r\n                }\r\n            }\r\n\r\n            // Check right walls\r\n            if (nx == -1 && this.getVelocity().x > 0) {\r\n                for (let k = 0; k < this.rightRays.length; k++) {\r\n                    let ray: Ray = this.rightRays[k];\r\n\r\n                    into = SAT2D.testRayVsRay(ray, new Ray(new Vector2(surface.p1.x, surface.p1.y),\r\n                        new Vector2(surface.p2.x, surface.p2.y), RayType.not_infinite), into);\r\n\r\n                    if (into != null) {\r\n\r\n                        let dx: number = into.ray1.end.x - into.ray1.start.x;\r\n                        let dy: number = into.ray1.end.y - into.ray1.start.y;\r\n                        let distance: number = Math.sqrt(dx * dx + dy * dy);\r\n                        let trueDistance: number = distance * into.u1;\r\n\r\n                        let contactX: number = into.ray1.start.x + trueDistance;\r\n                        let contactY: number = into.ray1.start.y;\r\n\r\n                        // this.pGraphicsDebug.lineStyle(1, 0);\r\n                        // this.pGraphicsDebug.beginFill(0xff0000, 0.5);\r\n                        // this.pGraphicsDebug.drawCircle(contactX, contactY, 5);\r\n\r\n                        if (trueDistance > this.hitbox.width * 0.5) {\r\n                            continue;\r\n                        }\r\n\r\n                        this.getPosition().x = contactX - this.hitbox.width * 0.5;\r\n                        this.wallContact.right = true;\r\n                        continue;\r\n                    }\r\n                }\r\n            }\r\n\r\n            // Check left walls\r\n            if (nx == 1 && this.getVelocity().x < 0) {\r\n                for (let k = 0; k < this.leftRays.length; k++) {\r\n                    let ray: Ray = this.leftRays[k];\r\n\r\n                    into = SAT2D.testRayVsRay(ray, new Ray(new Vector2(surface.p1.x, surface.p1.y),\r\n                        new Vector2(surface.p2.x, surface.p2.y), RayType.not_infinite), into);\r\n\r\n                    if (into != null) {\r\n\r\n                        let dx: number = into.ray1.end.x - into.ray1.start.x;\r\n                        let dy: number = into.ray1.end.y - into.ray1.start.y;\r\n                        let distance: number = Math.sqrt(dx * dx + dy * dy);\r\n                        let trueDistance: number = distance * into.u1;\r\n\r\n                        let contactX: number = into.ray1.start.x - trueDistance;\r\n                        let contactY: number = into.ray1.start.y;\r\n\r\n                        // this.pGraphicsDebug.lineStyle(1, 0);\r\n                        // this.pGraphicsDebug.beginFill(0xff0000, 0.5);\r\n                        // this.pGraphicsDebug.drawCircle(contactX, contactY, 5);\r\n\r\n                        if (trueDistance > this.hitbox.width * 0.5) {\r\n                            continue;\r\n                        }\r\n\r\n                        this.getPosition().x = contactX + this.hitbox.width * 0.5;\r\n                        this.wallContact.left = true;\r\n                        continue;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    public takeDamage(damage: number, damageDir: Phaser.Point = new Phaser.Point(0, 0)): void {\r\n        if (this.isShielded) {\r\n            this.game.sound.play(AudioName.dink);\r\n            return;\r\n        }\r\n\r\n        if (this.health <= 0) {\r\n            return;\r\n        }\r\n\r\n        if (this.isInvincible) {\r\n            return;\r\n        }\r\n\r\n        this.healthMeter.takeEnergy(damage);\r\n        this.health -= damage;\r\n        this.targetSpeed.x = 30 * damageDir.x;\r\n        this.targetSpeed.y = 0;\r\n\r\n        if (this.health <= 0) {\r\n            this.game.sound.play(AudioName.explosion);\r\n\r\n            let speed: number = 24;\r\n            this.addDeathEffect(0, -speed); // top\r\n            this.addDeathEffect(speed, 0);  // right\r\n            this.addDeathEffect(0, speed);  // bottom\r\n            this.addDeathEffect(-speed, 0); // left\r\n\r\n            speed = 40;\r\n            this.addDeathEffect(0, -speed); // top\r\n            this.addDeathEffect(Math.cos(45 * (Math.PI / 180)) * speed, Math.sin(-45 * (Math.PI / 180)) * speed); // top-right\r\n            this.addDeathEffect(speed, 0);  // right\r\n            this.addDeathEffect(Math.cos(45 * (Math.PI / 180)) * speed, Math.sin(45 * (Math.PI / 180)) * speed); // bottom-right\r\n            this.addDeathEffect(0, speed);  // bottom\r\n            this.addDeathEffect(Math.cos(135 * (Math.PI / 180)) * speed, Math.sin(45 * (Math.PI / 180)) * speed); // bottom-left\r\n            this.addDeathEffect(-speed, 0);  // left\r\n            this.addDeathEffect(Math.cos(135 * (Math.PI / 180)) * speed, Math.sin(-45 * (Math.PI / 180)) * speed); // top-left\r\n\r\n            this.health = 0;\r\n            this.myWorld.dropManager.dropBossItem(EntityType.cut_man_boss_item, 201.5 * 16, 78 * 16);\r\n            this.myWorld.createExplosionEffect(this.getPosition().x, this.getPosition().y - (<Phaser.Rectangle>this.hitbox).halfHeight);\r\n            this.destroyed.dispatch(this);\r\n            this.kill();\r\n        }\r\n        else {\r\n            this.game.sound.play(AudioName.enemy_damage);\r\n            this.isHurt = true;\r\n            this.isInvincible = true;\r\n            this.isBlinking = true;\r\n            this.myWorld.createHurtDust(this.getPosition().x - 2, this.getPosition().y - 40);\r\n            this.myWorld.createHurtDust(this.getPosition().x - 12, this.getPosition().y - 36);\r\n            this.myWorld.createHurtDust(this.getPosition().x + 8, this.getPosition().y - 36);\r\n            this.whiteEffect.visible = true;\r\n            this.whiteEffect.position.x = -12;\r\n            this.whiteEffect.position.y = -24;\r\n        }\r\n    }\r\n\r\n    public jump(): void {\r\n        if (this.isHurt) {\r\n            return;\r\n        }\r\n\r\n        if (this.isOnGround) {\r\n            this.jumpOnGround();\r\n        }\r\n    }\r\n\r\n    protected jumpOnGround(): void {\r\n        this.targetSpeed.y = -this.maxJumpVelocity;\r\n        this.isOnGround = false;\r\n        this.isJumping = true;\r\n        this.isFalling = false;\r\n    }\r\n\r\n    protected calculateRegularJumpSettings(): void {\r\n        this.gravityY = -(2 * this.maxJumpHeight) / Math.pow(this.timeToJumpApex, 2);\r\n        this.maxJumpVelocity = Math.abs(this.gravityY) * this.timeToJumpApex;\r\n        this.minJumpVelocity = Math.sqrt(2 * Math.abs(this.gravityY) * this.minJumpHeight);\r\n\r\n        // console.log('gravity: ' + this._gravity);\r\n        // console.log('maxJumpVelocity: ' + this._maxJumpVelocity);\r\n        // console.log('minJumpVelocity: ' + this._minJumpVelocity);\r\n    }\r\n\r\n    protected addDeathEffect(vx: number, vy: number): void {\r\n        let s: Phaser.Sprite = this.myWorld.createMegaManDeathEffect(this.getPosition().x, this.getPosition().y - 12);\r\n        s.body.velocity.x = vx;\r\n        s.body.velocity.y = vy;\r\n        this.deathEffects.push(s);\r\n    }\r\n\r\n    protected checkBlink(): void {\r\n        if (!this.isBlinking) {\r\n            return;\r\n        }\r\n\r\n        this.blinkCounter++;\r\n\r\n        if (this.blinkCounter % this.blinkRate == 0) {\r\n            this.alpha == 1 ? this.alpha = 0 : this.alpha = 1;\r\n        }\r\n\r\n        if (this.blinkCounter > this.whiteEffectMaxCounter) {\r\n            this.whiteEffect.visible = false;\r\n        }\r\n\r\n        this.blinkingElapsedTime += this.game.time.elapsedMS;\r\n\r\n        if (this.blinkingElapsedTime > this.blinkingEndTime) {\r\n            this.blinkingElapsedTime = 0;\r\n            this.isBlinking = false;\r\n            this.alpha = 1;\r\n            this.blinkCounter = 0;\r\n        }\r\n    }\r\n\r\n    protected checkInvincible(): void {\r\n        if (!this.isInvincible) {\r\n            return;\r\n        }\r\n\r\n        this.invincibleElapsedTime += this.game.time.elapsedMS;\r\n\r\n        if (this.invincibleElapsedTime > this.invincibleEndTime) {\r\n            this.invincibleElapsedTime = 0;\r\n            this.isInvincible = false;\r\n        }\r\n    }\r\n\r\n    protected checkHurt(): void {\r\n        if (!this.isHurt) {\r\n            return;\r\n        }\r\n\r\n        this.hurtElapsedTime += this.game.time.elapsedMS;\r\n\r\n        if (this.hurtElapsedTime > this.hurtEndTime) {\r\n            this.hurtElapsedTime = 0;\r\n            this.isHurt = false;\r\n        }\r\n    }\r\n\r\n    protected checkIdle(): void {\r\n        if (this.isOnGround && this.velocity.x == 0) {\r\n            this.idleElapsedTime += this.game.time.elapsedMS;\r\n\r\n            if (this.idleElapsedTime > this.blinkStartTime) {\r\n                this.isIdle = true;\r\n            }\r\n        }\r\n        else {\r\n            this.isIdle = false;\r\n            this.idleElapsedTime = 0;\r\n        }\r\n    }\r\n\r\n    protected checkFalling(): void {\r\n        if (!this.isOnGround && this.velocity.y > 0) {\r\n            this.isFalling = true;\r\n\r\n            // When falling we give the player some time to jump again; after that time jumping isnt possible while in air.\r\n            this.airJumpWindow = true;\r\n            this.jumpInAirElapsedTime += this.game.time.elapsedMS;\r\n\r\n            if (this.jumpInAirElapsedTime > this.jumpInAirEndTime) {\r\n                this.airJumpWindow = false;\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Using the current position moves the rays a frame even though the player may be running into a wall. By using\r\n     * previous position the rays don't move for that frame. They use the previous frame. Think about it, when the player\r\n     * is running into a wall, its 'bounds' should not move.\r\n     */\r\n    protected castRays(): void {\r\n        let centerX: number = this.getPosition().x;\r\n        let centerY: number = this.getPosition().y - this.hitbox.height * 0.5;\r\n\r\n        if (this.wallContact.left || this.wallContact.right) {\r\n            centerX = this.previousPosition.x;\r\n        }\r\n\r\n        // cast ground rays\r\n        this.leftGroundCheck.start = new Vector2(centerX - this.hitbox.width * 0.5 + 3, centerY);\r\n        this.leftGroundCheck.end = new Vector2(centerX - this.hitbox.width * 0.5 + 3, centerY + this.hitbox.height * 0.5 + this.skinWidth);\r\n        this.rightGroundCheck.start = new Vector2(centerX + this.hitbox.width * 0.5 - 3, centerY);\r\n        this.rightGroundCheck.end = new Vector2(centerX + this.hitbox.width * 0.5 - 3, centerY + this.hitbox.height * 0.5 + this.skinWidth);\r\n\r\n        // cast ceil rays\r\n        this.leftCeilCheck.start = new Vector2(centerX - this.hitbox.width * 0.5 + 3, centerY);\r\n        this.leftCeilCheck.end = new Vector2(centerX - this.hitbox.width * 0.5 + 3, centerY - this.hitbox.height * 0.5 - this.skinWidth);\r\n        this.rightCeilCheck.start = new Vector2(centerX + this.hitbox.width * 0.5 - 3, centerY);\r\n        this.rightCeilCheck.end = new Vector2(centerX + this.hitbox.width * 0.5 - 3, centerY - this.hitbox.height * 0.5 - this.skinWidth);\r\n\r\n        // cast left rays\r\n        let offsetY: number = 8;\r\n        this.leftCheck1.start = new Vector2(centerX, centerY - offsetY);\r\n        this.leftCheck1.end = new Vector2(centerX - this.hitbox.width * 0.5 - this.skinWidth, centerY - offsetY);\r\n        this.leftCheck2.start = new Vector2(centerX, centerY + offsetY);\r\n        this.leftCheck2.end = new Vector2(centerX - this.hitbox.width * 0.5 - this.skinWidth, centerY + offsetY);\r\n\r\n        // cast right rays\r\n        offsetY = 8;\r\n        this.rightCheck1.start = new Vector2(centerX, centerY - offsetY);\r\n        this.rightCheck1.end = new Vector2(centerX + this.hitbox.width * 0.5 + this.skinWidth, centerY - offsetY);\r\n        this.rightCheck2.start = new Vector2(centerX, centerY + offsetY);\r\n        this.rightCheck2.end = new Vector2(centerX + this.hitbox.width * 0.5 + this.skinWidth, centerY + offsetY);\r\n    }\r\n\r\n    protected showDebugRays(): void {\r\n        // this.pGraphicsDebug.lineStyle(1, 0);\r\n\r\n        // this.groundRays.forEach((ray) => {\r\n        //     this.pGraphicsDebug.moveTo(ray.start.x, ray.start.y);\r\n        //     this.pGraphicsDebug.lineTo(ray.end.x, ray.end.y);\r\n        // });\r\n\r\n        // this.ceilRays.forEach((ray) => {\r\n        //     this.pGraphicsDebug.moveTo(ray.start.x, ray.start.y);\r\n        //     this.pGraphicsDebug.lineTo(ray.end.x, ray.end.y);\r\n        // });\r\n\r\n        // this.leftRays.forEach((ray) => {\r\n        //     this.pGraphicsDebug.moveTo(ray.start.x, ray.start.y);\r\n        //     this.pGraphicsDebug.lineTo(ray.end.x, ray.end.y);\r\n        // });\r\n\r\n        // this.rightRays.forEach((ray) => {\r\n        //     this.pGraphicsDebug.moveTo(ray.start.x, ray.start.y);\r\n        //     this.pGraphicsDebug.lineTo(ray.end.x, ray.end.y);\r\n        // });\r\n    }\r\n}","import { Bullet } from './bullet'\r\nimport { World } from '../world'\r\nimport { TagType } from '../konstants'\r\nimport { EntityType } from '../konstants'\r\nimport { Entity } from '../entity'\r\nimport { Helper } from '../helper'\r\nimport { MathUtil } from '../util/mathutil'\r\nimport { Blader } from '../enemies/blader'\r\nimport { Met } from '../enemies/met'\r\nimport { v2 } from '../util/v2'\r\nimport { Catmull } from '../catmull/catmull'\r\nimport { State } from '../fsm/state'\r\nimport { StateMachine } from '../fsm/stateMachine'\r\nimport { BulletMovement } from '../bullets/bulletMovement'\r\n\r\nexport class CutManBullet extends Entity {\r\n\r\n    owner: Entity;\r\n    velocity: Phaser.Point = new Phaser.Point(0, 0);\r\n    horizontalSpeed: number = 160;\r\n    useGravity: boolean = false;\r\n    gravityY: number = 500;\r\n    targetSpeed: Phaser.Point = new Phaser.Point(0, 0);\r\n    canCollideWithOtherBullet: boolean = false;\r\n    // pGraphicsDebug: Phaser.Graphics;\r\n    startPos: Phaser.Point = new Phaser.Point();\r\n    catmull: Catmull;\r\n    points: Array<v2> = new Array<v2>();\r\n    marker: number = 0;\r\n    fsm: StateMachine;\r\n    public bulletMovement: BulletMovement = null;\r\n    private rotationAmount: number = 15 * (Math.PI / 180);\r\n\r\n    constructor(owner: Entity, world: World, tag: TagType, e: EntityType, game: Phaser.Game, x: number, y: number, key?: string | Phaser.RenderTexture | Phaser.BitmapData | PIXI.Texture, frame?: string | number) {\r\n        super(world, tag, e, game, x, y, key, frame);\r\n\r\n        this.smoothed = false;\r\n        this.owner = owner;\r\n        this.health = 1;\r\n        this.maxHealth = 1;\r\n        this.getPosition().x = x;\r\n        this.getPosition().y = y;\r\n        this.anchor.setTo(0.5, 0.5);\r\n\r\n        this.hitbox = new Phaser.Rectangle(this.getPosition().x, this.getPosition().y, 8, 6);\r\n        this.hitboxOffset.x = -4;\r\n        this.hitboxOffset.y = -3;\r\n        this.updateRect();\r\n\r\n        this.startPos.x = this.getPosition().x;\r\n        this.startPos.y = this.getPosition().y;\r\n\r\n        this.catmull = new Catmull(this.points);\r\n        this.points.push(new v2(this.startPos.x, this.startPos.y));\r\n        this.points.push(new v2(this.startPos.x + 50 * this.owner.getFacingDirection(), this.startPos.y - 20));\r\n        this.points.push(new v2(this.startPos.x + 90 * this.owner.getFacingDirection(), this.startPos.y));\r\n        this.points.push(new v2(this.startPos.x + 80 * this.owner.getFacingDirection(), this.startPos.y + 20));\r\n\r\n        // this.fsm = new StateMachine();\r\n        // this.fsm.addState(CutManBulletState.catmullPathing, new CutManBulletCatmullPathingState(this));\r\n        // this.fsm.addState(CutManBulletState.returning, new CutManBulletReturningState(this));\r\n        // this.fsm.changeState(CutManBulletState.catmullPathing);\r\n    }\r\n\r\n    public manualUpdate(): void {\r\n        // this.pGraphicsDebug.clear();\r\n\r\n        if (!this.alive) {\r\n            return;\r\n        }\r\n\r\n        // this.fsm.currentState.update();\r\n        this.bulletMovement.move();\r\n        this.getPosition().x = this.bulletMovement.position.x;\r\n        this.getPosition().y = this.bulletMovement.position.y;\r\n        this.position.x = (this.getPosition().x + 0.5) | 0;\r\n        this.position.y = this.getPosition().y;\r\n        this.rotation += this.rotationAmount;\r\n        this.updateRect();\r\n    }\r\n\r\n    public checkCollideWith(other: Entity): void {\r\n        if (Helper.distanceTo(other, this) > 21) {\r\n            return;\r\n        }\r\n\r\n        // The bullet cannot hit itself.\r\n        if (other == this) {\r\n            return;\r\n        }\r\n\r\n        // The bullet cannot hit other bullets shot by the same owner.\r\n        if (other.tag == TagType.bullet) {\r\n            let bullet: Bullet = <Bullet>other;\r\n            if (this.owner == bullet.owner) {\r\n                return;\r\n            }\r\n        }\r\n        // Go through spike.\r\n        else if (other.myEntityType == EntityType.spike) {\r\n            return;\r\n        }\r\n        // Go through explosions.\r\n        else if (other.myEntityType == EntityType.explosion_from_killer_bullet) {\r\n            return;\r\n        }\r\n\r\n        // The bullet cannot hit the owner who shot it.\r\n        if (this.owner == other) {\r\n            return;\r\n        }\r\n\r\n        if (!this.canCollideWithOtherBullet) {\r\n            if (other.tag == TagType.bullet) {\r\n                let bullet: Bullet = <Bullet>other;\r\n\r\n                // Player bullet cannot collide with enemy bullet.\r\n                if (this.owner.tag == TagType.player && bullet.owner.tag != TagType.player) {\r\n                    return;\r\n                }\r\n\r\n                // Enemy bullet cannot collide with player bullet.\r\n                if (this.owner.tag != TagType.player && bullet.owner.tag == TagType.player) {\r\n                    return;\r\n                }\r\n            }\r\n        }\r\n\r\n        // Enemy bullet cannot collide (hurt/kill) with other enemies.\r\n        if (this.owner.tag != TagType.player) {\r\n            if (other.tag != TagType.player) {\r\n                return;\r\n            }\r\n        }\r\n\r\n        // ***************************************************\r\n        // In the future bullets will be allowed to hit other bullets since they don't share the same owner.\r\n        // A boolean will keep track of this.\r\n        // this.graphicsDebug.drawRect(this.getPosition().x + this.hitbox.x - this.hitbox.width * 0.5, this.getPosition().y - this.hitbox.height + this.hitbox.y, this.hitbox.width, this.hitbox.height);\r\n\r\n        if (!Phaser.Rectangle.intersects(this.hitbox, other.hitbox)) {\r\n            return;\r\n        }\r\n\r\n        // This bullets hits enemy 'met'. Reflect this bullet if met is shielded.\r\n        // if (other.myEntityType == EntityType.met) {\r\n        //     let met: Met = <Met>other;\r\n        //     if (met.isShielded) {\r\n        //         this.reflect();\r\n        //         return;\r\n        //     }\r\n        // }\r\n\r\n        other.takeDamage(this.contactDamage, Helper.directionTo(this, other));\r\n        // this.takeDamage(1);\r\n    }\r\n\r\n    public takeDamage(damage: number): void {\r\n        if (this.health <= 0) {\r\n            return;\r\n        }\r\n\r\n        this.health -= damage;\r\n\r\n        if (this.health == 0) {\r\n            this.destroyed.dispatch();\r\n            this.kill();\r\n        }\r\n    }\r\n\r\n    private reflect(): void {\r\n        let x: number = this.targetSpeed.x > 0 ? 135 : 45;\r\n        this.targetSpeed.x = 200 * Math.cos(MathUtil.sign(this.horizontalSpeed) * x * (Math.PI / 180));\r\n        this.targetSpeed.y = 200 * Math.sin(MathUtil.sign(this.horizontalSpeed) * -45 * (Math.PI / 180));\r\n    }\r\n}","import { Entity } from '../entity'\r\nimport { Helper } from '../helper'\r\nimport { v2 } from '../util/v2'\r\nimport { Catmull } from '../catmull/catmull'\r\nimport { State } from '../fsm/state'\r\nimport { StateMachine } from '../fsm/stateMachine'\r\nimport { BulletMovement } from './bulletMovement'\r\n\r\nexport class BoomerangBulletMovement implements BulletMovement {\r\n    public destroyed: Phaser.Signal = new Phaser.Signal();\r\n    public position: Phaser.Point = new Phaser.Point();\r\n    public targetSpeed: Phaser.Point = new Phaser.Point();\r\n    public velocity: Phaser.Point = new Phaser.Point();\r\n    public fsm: StateMachine;\r\n    public targetPosition:Phaser.Point = new Phaser.Point();\r\n\r\n    constructor(public owner: Entity, public initialPosition: Phaser.Point, target: Phaser.Point, public speed:number) {\r\n        this.position.x = initialPosition.x;\r\n        this.position.y = initialPosition.y;\r\n        this.targetPosition.x=target.x;\r\n        this.targetPosition.y=target.y;\r\n        this.fsm = new StateMachine();\r\n        this.fsm.addState(BoomerangBulletState.forward, new BoomerangBulletForwardState(this));\r\n        this.fsm.addState(BoomerangBulletState.backward, new BoomerangBulletBackwardState(this));\r\n        this.fsm.changeState(BoomerangBulletState.forward);\r\n    }\r\n\r\n    public move(): void {\r\n        this.fsm.currentState.update();\r\n    }\r\n}\r\n\r\nenum BoomerangBulletState {\r\n    forward = 'forward',\r\n    backward = 'backward',\r\n}\r\n\r\nclass BoomerangBulletForwardState implements State {\r\n    name: string = BoomerangBulletState.forward;\r\n    initialized: boolean;\r\n    actor: BoomerangBulletMovement;\r\n    private dirToTarget: Phaser.Point;\r\n\r\n    constructor(actor: BoomerangBulletMovement) {\r\n        this.actor = actor;\r\n    }\r\n\r\n    enter(): void {\r\n        this.initialized = true;\r\n        this.dirToTarget = Helper.directionTo2(this.actor.position, this.actor.targetPosition);\r\n        this.actor.targetSpeed.x = this.dirToTarget.x * this.actor.speed;\r\n        this.actor.targetSpeed.y = this.dirToTarget.y * this.actor.speed;\r\n    }\r\n\r\n    update(): void {\r\n        this.actor.velocity.x = this.actor.targetSpeed.x;\r\n        this.actor.velocity.y = this.actor.targetSpeed.y;\r\n\r\n        this.actor.position.x += this.actor.velocity.x * this.actor.owner.game.time.physicsElapsed;\r\n        this.actor.position.y += this.actor.velocity.y * this.actor.owner.game.time.physicsElapsed;\r\n\r\n        if (Helper.distanceTo2(this.actor.position, this.actor.targetPosition) < 2) {\r\n            this.actor.fsm.changeState(BoomerangBulletState.backward);\r\n            return;\r\n        }\r\n    }\r\n\r\n    exit(): void {\r\n        this.initialized = false;\r\n    }\r\n}\r\n\r\nclass BoomerangBulletBackwardState implements State {\r\n    name: string = BoomerangBulletState.backward;\r\n    initialized: boolean;\r\n    actor: BoomerangBulletMovement;\r\n    private dir: Phaser.Point;\r\n    private posDiff: Phaser.Point = new Phaser.Point(0, -10);\r\n    private tempPos: Phaser.Point;\r\n\r\n    constructor(actor: BoomerangBulletMovement) {\r\n        this.actor = actor;\r\n    }\r\n\r\n    enter(): void {\r\n        this.initialized = true;\r\n    }\r\n\r\n    update(): void {\r\n        this.tempPos = this.actor.owner.getPosition().clone().add(this.posDiff.x, this.posDiff.y);\r\n\r\n        if (Helper.distanceTo2(this.actor.position, this.tempPos) < 5) {\r\n            this.actor.destroyed.dispatch();\r\n            return;\r\n        }\r\n\r\n        this.dir = Helper.directionTo2(this.actor.position, this.tempPos);\r\n\r\n        this.actor.targetSpeed.x = this.actor.speed * 1.2 * this.dir.x;\r\n        this.actor.targetSpeed.y = this.actor.speed * 1.2 * this.dir.y;\r\n\r\n        this.actor.velocity.x = this.actor.targetSpeed.x;\r\n        this.actor.velocity.y = this.actor.targetSpeed.y;\r\n\r\n        this.actor.position.x += this.actor.velocity.x * this.actor.owner.game.time.physicsElapsed;\r\n        this.actor.position.y += this.actor.velocity.y * this.actor.owner.game.time.physicsElapsed;\r\n    }\r\n\r\n    exit(): void {\r\n        this.initialized = false;\r\n    }\r\n}","import { World, Surface } from '../../world'\r\nimport { EntityType, TagType, AudioName, Konstants, WallContact } from '../../konstants'\r\nimport { Player } from '../../player'\r\nimport { Entity } from '../../entity'\r\nimport { Helper } from '../../helper'\r\nimport { MathUtil, KeyedCollection } from '../../util/mathutil'\r\nimport { State } from '../../fsm/state'\r\nimport { StateMachine } from '../../fsm/stateMachine'\r\nimport { Meter } from '../../ui/meter'\r\nimport { SAT2D } from '../../sat2d/sat2d'\r\nimport { Ray, RayType } from '../../sat2d/ray'\r\nimport { RayIntersection } from '../../sat2d/rayIntersection'\r\nimport { Vector2 } from '../../sat2d/vector2'\r\nimport { Boss } from './boss'\r\nimport { ThrowableObject } from '../../bullets/throwableObject'\r\n\r\nexport enum GutsManAnimations {\r\n    idle = 'idle',\r\n    hurt = 'hurt',\r\n    taunt = 'taunt',\r\n    jump = 'jump',\r\n    lift = 'lift',\r\n    crouch_lift = 'crouch_lift',\r\n    throw = 'throw',\r\n    open_mouth = 'open_mouth',\r\n}\r\n\r\nenum GutsManWeights {\r\n    jump_up = 'jump_up',\r\n    jump_towards_player = 'jump_towards_player',\r\n    jump_away_from_player = 'jump_away_from_player',\r\n}\r\n\r\n\r\nexport class GutsMan extends Boss {\r\n\r\n    public slamGround: Phaser.Signal = new Phaser.Signal();\r\n    public choice: GutsManWeights;\r\n    public tempThrowableObject: ThrowableObject;\r\n\r\n    constructor(myWorld: World, tag: TagType, e: EntityType, game: Phaser.Game, x: number, y: number, key: string, frame: string) {\r\n        super(myWorld, tag, e, game, x, y, key, frame);\r\n\r\n        this.fsm = new StateMachine();\r\n        this.fsm.addState(GutsManState.idle, new GutsManIdleState(this));\r\n        this.fsm.addState(GutsManState.jump, new GutsManJumpState(this));\r\n        this.fsm.addState(GutsManState.in_air, new GutsManInAirState(this));\r\n        this.fsm.addState(GutsManState.wait_for_throwable, new GutsManWaitForThrowableState(this));\r\n        this.fsm.addState(GutsManState.receive, new GutsManReceiveState(this));\r\n        this.fsm.addState(GutsManState.throw, new GutsManThrowState(this));\r\n        this.fsm.changeState(GutsManState.jump);\r\n\r\n        this.animations.add(GutsManAnimations.idle, ['stand'], 10, false, false);\r\n        this.animations.add(GutsManAnimations.taunt, ['crouch', 'stand'], 5, false, false);\r\n        this.animations.add(GutsManAnimations.jump, ['crouch', 'stand'], 5, false, false);\r\n        this.animations.add(GutsManAnimations.lift, ['lift'], 10, false, false);\r\n        this.animations.add(GutsManAnimations.crouch_lift, ['crouch_lift'], 10, false, false);\r\n        this.animations.add(GutsManAnimations.throw, ['throw'], 10, false, false);\r\n        this.animations.add(GutsManAnimations.open_mouth, ['stand', 'stand', 'taunt'], 10, false, false);\r\n\r\n        this.hitbox = new Phaser.Rectangle(this.getPosition().x, this.getPosition().y, 36, 30);\r\n        this.hitboxOffset.x = -18;\r\n        this.hitboxOffset.y = -30;\r\n        this.updateRect();\r\n\r\n        this.healthMeter = new Meter(this.game, 40, 15);\r\n        this.healthMeter.setEnergy(0);\r\n        this.health = this.healthMeter.totalEnergy;\r\n        this.maxHealth = this.healthMeter.totalEnergy;\r\n\r\n        this.position.x = (this.getPosition().x + 0.5) | 0;\r\n        this.position.y = this.getPosition().y;\r\n\r\n        this.leftGroundCheck = new Ray(new Vector2(), new Vector2(), RayType.not_infinite);\r\n        this.rightGroundCheck = new Ray(new Vector2(), new Vector2(), RayType.not_infinite);\r\n        this.leftCeilCheck = new Ray(new Vector2(), new Vector2(), RayType.not_infinite);\r\n        this.rightCeilCheck = new Ray(new Vector2(), new Vector2(), RayType.not_infinite);\r\n        this.leftCheck1 = new Ray(new Vector2(), new Vector2(), RayType.not_infinite);\r\n        this.leftCheck2 = new Ray(new Vector2(), new Vector2(), RayType.not_infinite);\r\n        this.rightCheck1 = new Ray(new Vector2(), new Vector2(), RayType.not_infinite);\r\n        this.rightCheck2 = new Ray(new Vector2(), new Vector2(), RayType.not_infinite);\r\n        this.groundRays.push(this.leftGroundCheck);\r\n        this.groundRays.push(this.rightGroundCheck);\r\n        this.ceilRays.push(this.leftCeilCheck);\r\n        this.ceilRays.push(this.rightCeilCheck);\r\n        this.leftRays.push(this.leftCheck1);\r\n        this.leftRays.push(this.leftCheck2);\r\n        this.rightRays.push(this.rightCheck1);\r\n        this.rightRays.push(this.rightCheck2);\r\n\r\n        this.wallContact = { left: false, right: false, up: false, down: false };\r\n        this.calculateRegularJumpSettings();\r\n\r\n        this.whiteEffect = this.game.add.sprite(0, 0, Konstants.mega_man, 'white_effect.png');\r\n        this.whiteEffect.alpha = 0.5;\r\n        this.whiteEffect.visible = false;\r\n        this.addChild(this.whiteEffect);\r\n\r\n        this.weights.Add(GutsManWeights.jump_up, 36);\r\n        this.weights.Add(GutsManWeights.jump_towards_player, 50);\r\n        this.weights.Add(GutsManWeights.jump_away_from_player, 40);\r\n        this.weights.Keys().forEach(element => {\r\n            this.sumOfWeights += this.weights.Item(element);\r\n        });\r\n    }\r\n\r\n    public show(): void {\r\n        this.visible = true;\r\n        this.animations.play(GutsManAnimations.taunt);\r\n    }\r\n\r\n    public performTaunt(): void {\r\n        this.animations.play(GutsManAnimations.taunt);\r\n    }\r\n\r\n    public shoot(): boolean {\r\n        return true;\r\n    }\r\n\r\n    public takeDamage(damage: number, damageDir: Phaser.Point = new Phaser.Point(0, 0)): void {\r\n        if (this.isShielded) {\r\n            this.game.sound.play(AudioName.dink);\r\n            return;\r\n        }\r\n\r\n        if (this.health <= 0) {\r\n            return;\r\n        }\r\n\r\n        if (this.isInvincible) {\r\n            return;\r\n        }\r\n\r\n        this.healthMeter.takeEnergy(damage);\r\n        this.health -= damage;\r\n        this.targetSpeed.x = 30 * damageDir.x;\r\n        this.targetSpeed.y = 0;\r\n\r\n        if (this.health <= 0) {\r\n            this.fsm.changeState(GutsManState.idle);\r\n            if (this.tempThrowableObject != undefined) {\r\n                this.tempThrowableObject.kill();\r\n            }\r\n\r\n            this.game.sound.play(AudioName.explosion);\r\n\r\n            let speed: number = 24;\r\n            this.addDeathEffect(0, -speed); // top\r\n            this.addDeathEffect(speed, 0);  // right\r\n            this.addDeathEffect(0, speed);  // bottom\r\n            this.addDeathEffect(-speed, 0); // left\r\n\r\n            speed = 40;\r\n            this.addDeathEffect(0, -speed); // top\r\n            this.addDeathEffect(Math.cos(45 * (Math.PI / 180)) * speed, Math.sin(-45 * (Math.PI / 180)) * speed); // top-right\r\n            this.addDeathEffect(speed, 0);  // right\r\n            this.addDeathEffect(Math.cos(45 * (Math.PI / 180)) * speed, Math.sin(45 * (Math.PI / 180)) * speed); // bottom-right\r\n            this.addDeathEffect(0, speed);  // bottom\r\n            this.addDeathEffect(Math.cos(135 * (Math.PI / 180)) * speed, Math.sin(45 * (Math.PI / 180)) * speed); // bottom-left\r\n            this.addDeathEffect(-speed, 0);  // left\r\n            this.addDeathEffect(Math.cos(135 * (Math.PI / 180)) * speed, Math.sin(-45 * (Math.PI / 180)) * speed); // top-left\r\n\r\n            this.health = 0;\r\n            this.myWorld.dropManager.dropBossItem(EntityType.guts_man_boss_item, this.bossData.bossItemSpawnPosition.x * 16, this.bossData.bossItemSpawnPosition.y * 16);\r\n            this.myWorld.createExplosionEffect(this.getPosition().x, this.getPosition().y - (<Phaser.Rectangle>this.hitbox).halfHeight);\r\n            this.destroyed.dispatch(this);\r\n            this.kill();\r\n        }\r\n        else {\r\n            this.game.sound.play(AudioName.enemy_damage);\r\n            this.isHurt = true;\r\n            this.isInvincible = true;\r\n            this.isBlinking = true;\r\n            this.myWorld.createHurtDust(this.getPosition().x - 2, this.getPosition().y - 40);\r\n            this.myWorld.createHurtDust(this.getPosition().x - 12, this.getPosition().y - 36);\r\n            this.myWorld.createHurtDust(this.getPosition().x + 8, this.getPosition().y - 36);\r\n            this.whiteEffect.visible = true;\r\n            this.whiteEffect.position.x = -12;\r\n            this.whiteEffect.position.y = -24;\r\n        }\r\n    }\r\n}\r\n\r\nenum GutsManState {\r\n    idle = 'idle',\r\n    jump = 'jump',\r\n    in_air = 'in_air',\r\n    wait_for_throwable = 'wait_for_throwable',\r\n    receive = 'receive',\r\n    throw = 'throw',\r\n}\r\n\r\nclass GutsManIdleState implements State {\r\n\r\n    name: string = GutsManState.idle;\r\n    initialized: boolean;\r\n    actor: GutsMan;\r\n    elapsedTime: number = 0;\r\n    endTime: number = 500;\r\n\r\n    constructor(actor: GutsMan) {\r\n        this.actor = actor;\r\n    }\r\n\r\n    enter(): void {\r\n        // console.log('GutsManIdleState');\r\n        this.initialized = true;\r\n        this.actor.animations.play(GutsManAnimations.open_mouth);\r\n    }\r\n\r\n    update(): void {\r\n        this.elapsedTime += this.actor.game.time.elapsedMS;\r\n\r\n        if (this.elapsedTime >= this.endTime) {\r\n            this.actor.fsm.changeState(GutsManState.jump);\r\n            return;\r\n        }\r\n    }\r\n\r\n    exit(): void {\r\n        this.initialized = false;\r\n        this.elapsedTime = 0;\r\n    }\r\n}\r\n\r\nclass GutsManJumpState implements State {\r\n\r\n    name: string = GutsManState.jump;\r\n    initialized: boolean;\r\n    actor: GutsMan;\r\n    waitForAnimElapsedTime: number = 0;\r\n    waitForAnimEndTime: number = 300;\r\n\r\n    constructor(actor: GutsMan) {\r\n        this.actor = actor;\r\n    }\r\n\r\n    enter(): void {\r\n        // console.log('GutsManJumpState');\r\n        this.initialized = true;\r\n        this.actor.animations.play(GutsManAnimations.jump);\r\n    }\r\n\r\n    update(): void {\r\n        this.waitForAnimElapsedTime += this.actor.game.time.elapsedMS;\r\n\r\n        if (this.waitForAnimElapsedTime < this.waitForAnimEndTime) {\r\n            return;\r\n        }\r\n\r\n        let choice: string = MathUtil.weightedRandomKey(this.actor.weights, this.actor.sumOfWeights);\r\n        let jumpVerticalSpeed: number = (Math.random() * (this.actor.maxJumpSpeed - this.actor.minJumpSpeed)) + this.actor.minJumpSpeed;\r\n        let dirX: number = 0;\r\n        this.actor.choice = <GutsManWeights>choice;\r\n\r\n        switch (choice) {\r\n            case GutsManWeights.jump_up:\r\n                dirX = 0;\r\n                break;\r\n\r\n            case GutsManWeights.jump_towards_player:\r\n                dirX = MathUtil.sign(this.actor.player.getPosition().x - this.actor.getPosition().x);\r\n                break;\r\n\r\n            case GutsManWeights.jump_away_from_player:\r\n                dirX = -MathUtil.sign(this.actor.player.getPosition().x - this.actor.getPosition().x);\r\n                break;\r\n        }\r\n\r\n        this.actor.targetSpeed.y = -jumpVerticalSpeed;\r\n        this.actor.targetSpeed.x = this.actor.jumpHorizontalSpeed * dirX;\r\n        this.actor.isOnGround = false;\r\n        this.actor.fsm.changeState(GutsManState.in_air);\r\n    }\r\n\r\n    exit(): void {\r\n        this.initialized = false;\r\n        this.waitForAnimElapsedTime = 0;\r\n    }\r\n}\r\n\r\nclass GutsManInAirState implements State {\r\n\r\n    name: string = GutsManState.in_air;\r\n    initialized: boolean;\r\n    actor: GutsMan;\r\n    private tauntElapsedTime: number = 0;\r\n    private tauntEndTime: number = 250;\r\n\r\n    constructor(actor: GutsMan) {\r\n        this.actor = actor;\r\n    }\r\n\r\n    enter(): void {\r\n        // console.log('GutsManInAirState');\r\n        this.initialized = true;\r\n    }\r\n\r\n    update(): void {\r\n        if (!this.actor.isOnGround) {\r\n            return;\r\n        }\r\n\r\n        this.actor.slamGround.dispatch(this);\r\n        this.actor.targetSpeed.x = this.actor.targetSpeed.y = 0;\r\n        this.actor.game.sound.play(AudioName.guts_quake);\r\n\r\n        if (this.actor.choice == GutsManWeights.jump_up) {\r\n            this.actor.fsm.changeState(GutsManState.wait_for_throwable);\r\n            return;\r\n        }\r\n        else {\r\n            this.actor.fsm.changeState(GutsManState.idle);\r\n            return;\r\n        }\r\n    }\r\n\r\n    exit(): void {\r\n        this.initialized = false;\r\n        this.tauntElapsedTime = 0;\r\n    }\r\n}\r\n\r\nclass GutsManWaitForThrowableState implements State {\r\n\r\n    name: string = GutsManState.wait_for_throwable;\r\n    initialized: boolean;\r\n    actor: GutsMan;\r\n    private startY: number = 0;\r\n    private endY: number = 0;\r\n    private lerpElapsedTime: number = 0;\r\n    private lerpEndTime: number = 350;\r\n\r\n    constructor(actor: GutsMan) {\r\n        this.actor = actor;\r\n    }\r\n\r\n    enter(): void {\r\n        // console.log('GutsManWaitForThrowableState');\r\n        this.initialized = true;\r\n        this.actor.animations.play(GutsManAnimations.lift);\r\n\r\n        let x = this.actor.getPosition().x + (this.actor.getFacingDirection() * 11);\r\n        let y = this.actor.myWorld.camera.currentRoom.bounds.y + 30;\r\n        this.actor.tempThrowableObject = this.actor.myWorld.entityManager.createThrowableObject(\r\n            this.actor, x, y, 36, 34, -18, -17,\r\n            EntityType.guts_man, 'big_rock',\r\n            EntityType.guts_man, 'small_rock',\r\n            EntityType.throwable_object\r\n        );\r\n        this.actor.tempThrowableObject.canCollideWithWalls = false;\r\n\r\n        this.startY = y;\r\n        // 12 for the height of big_rock\r\n        // 34 for guts_man crouch height\r\n        this.endY = this.actor.getPosition().y - 34 - 9;\r\n    }\r\n\r\n    update(): void {\r\n        this.lerpElapsedTime += this.actor.game.time.elapsedMS;\r\n        this.actor.tempThrowableObject.getPosition().y = MathUtil.lerp(this.startY, this.endY, this.lerpElapsedTime / this.lerpEndTime);\r\n        this.actor.tempThrowableObject.position.y = this.actor.tempThrowableObject.getPosition().y;\r\n\r\n        if (this.lerpElapsedTime >= this.lerpEndTime) {\r\n            this.actor.tempThrowableObject.getPosition().y = this.actor.getPosition().y - 34 - 9;\r\n            this.actor.tempThrowableObject.position.y = this.actor.tempThrowableObject.getPosition().y;\r\n            this.actor.fsm.changeState(GutsManState.receive);\r\n            return;\r\n        }\r\n    }\r\n\r\n    exit(): void {\r\n        this.initialized = false;\r\n        this.lerpElapsedTime = 0;\r\n    }\r\n}\r\n\r\nclass GutsManReceiveState implements State {\r\n\r\n    name: string = GutsManState.receive;\r\n    initialized: boolean;\r\n    actor: GutsMan;\r\n    private crouchElapsedTime: number = 0;\r\n    private crouchEndTime: number = 300;\r\n\r\n    constructor(actor: GutsMan) {\r\n        this.actor = actor;\r\n    }\r\n\r\n    enter(): void {\r\n        // console.log('GutsManReceiveState');\r\n        this.initialized = true;\r\n        this.actor.animations.play(GutsManAnimations.crouch_lift);\r\n    }\r\n\r\n    update(): void {\r\n        this.crouchElapsedTime += this.actor.game.time.elapsedMS;\r\n\r\n        if (this.crouchElapsedTime < this.crouchEndTime) {\r\n            return;\r\n        }\r\n\r\n        this.crouchElapsedTime += this.actor.game.time.elapsedMS;\r\n\r\n        if (this.crouchElapsedTime >= this.crouchEndTime) {\r\n            this.actor.fsm.changeState(GutsManState.throw);\r\n            return;\r\n        }\r\n    }\r\n\r\n    exit(): void {\r\n        this.initialized = false;\r\n        this.crouchElapsedTime = 0;\r\n    }\r\n}\r\n\r\nclass GutsManThrowState implements State {\r\n\r\n    name: string = GutsManState.throw;\r\n    initialized: boolean;\r\n    actor: GutsMan;\r\n    private throwElapsedTime: number = 0;\r\n    private throwEndTime: number = 500;\r\n    private idleElapsedTime: number = 0;\r\n    private idleEndTime: number = 500;\r\n    private hasThrown: boolean = false;\r\n    private canGoToJumpState: boolean = false;\r\n\r\n    constructor(actor: GutsMan) {\r\n        this.actor = actor;\r\n    }\r\n\r\n    enter(): void {\r\n        // console.log('GutsManThrowState');\r\n        this.initialized = true;\r\n    }\r\n\r\n    update(): void {\r\n        this.checkCanThrow();\r\n        this.checkCanGoToJumpState();\r\n    }\r\n\r\n    exit(): void {\r\n        this.initialized = false;\r\n        this.throwElapsedTime = 0;\r\n        this.idleElapsedTime = 0;\r\n        this.hasThrown = false;\r\n    }\r\n\r\n    private checkCanThrow(): void {\r\n        if (this.hasThrown) {\r\n            return;\r\n        }\r\n\r\n        this.throwElapsedTime += this.actor.game.time.elapsedMS;\r\n\r\n        if (this.throwElapsedTime >= this.throwEndTime) {\r\n            this.actor.animations.play(GutsManAnimations.throw);\r\n            let direction: Phaser.Point = Helper.directionTo2(this.actor.tempThrowableObject.getPosition(), this.actor.myWorld.entityManager.player.getPosition().clone().subtract(0, 10));\r\n            this.actor.tempThrowableObject.setParameters(direction, 210);\r\n            this.actor.tempThrowableObject.getPosition().x += direction.x * 20;\r\n            this.actor.tempThrowableObject.position.x = this.actor.tempThrowableObject.getPosition().x;\r\n            this.actor.tempThrowableObject.canCollideWithWalls = true;\r\n            this.hasThrown = true;\r\n        }\r\n    }\r\n\r\n    private checkCanGoToJumpState(): void {\r\n        if (!this.hasThrown) {\r\n            return;\r\n        }\r\n\r\n        this.idleElapsedTime += this.actor.game.time.elapsedMS;\r\n\r\n        if (this.idleElapsedTime >= this.idleEndTime) {\r\n            this.actor.fsm.changeState(GutsManState.jump);\r\n            return;\r\n        }\r\n    }\r\n}\r\n","import { World, Surface } from '../../world'\r\nimport { EntityType, TagType, AudioName, Konstants, WallContact } from '../../konstants'\r\nimport { Player } from '../../player'\r\nimport { Entity } from '../../entity'\r\nimport { Helper } from '../../helper'\r\nimport { MathUtil, KeyedCollection } from '../../util/mathutil'\r\nimport { State } from '../../fsm/state'\r\nimport { StateMachine } from '../../fsm/stateMachine'\r\nimport { Meter } from '../../ui/meter'\r\nimport { SAT2D } from '../../sat2d/sat2d'\r\nimport { Ray, RayType } from '../../sat2d/ray'\r\nimport { RayIntersection } from '../../sat2d/rayIntersection'\r\nimport { Vector2 } from '../../sat2d/vector2'\r\nimport { Boss } from './boss'\r\nimport { Bullet } from '../../bullets/bullet'\r\n\r\nexport enum IceManAnimations {\r\n    idle = 'idle',\r\n    taunt = 'taunt',\r\n    attack = 'attack',\r\n    run = 'run',\r\n    jump = 'jump',\r\n}\r\n\r\nexport class IceMan extends Boss {\r\n    public bossPos: Array<{ x: number, y: number }> = new Array<{ x: number, y: number }>();\r\n    public currentPosIdx: number = 1;\r\n    public maxIdx: number = 3;\r\n    public posDirection: number = 1;\r\n    private combatSpeed: number;\r\n    private defaultCombatSpeed: number = 1050;\r\n    private combatSpeedInterval: number = 50;\r\n    private minCombatSpeed: number = 500;\r\n    private bulletSpeed: number;\r\n    private defaultBulletSpeed: number = 100;\r\n    private bulletSpeedIncrement: number = 5;\r\n    private maxBulletSpeed: number = 140;\r\n\r\n    constructor(myWorld: World, tag: TagType, e: EntityType, game: Phaser.Game, x: number, y: number, key: string, frame: string) {\r\n        super(myWorld, tag, e, game, x, y, key, frame);\r\n\r\n        this.fsm = new StateMachine();\r\n        this.fsm.addState(IceManState.idle, new IceManIdleState(this));\r\n        this.fsm.addState(IceManState.choose_next_position, new IceManChooseNextPositionState(this));\r\n        this.fsm.addState(IceManState.jump, new IceManJumpState(this));\r\n        this.fsm.addState(IceManState.shoot_going_down, new IceManShootGoingDownState(this));\r\n        this.fsm.addState(IceManState.shoot_going_up, new IceManShootGoingUpState(this));\r\n        this.fsm.addState(IceManState.change_combat_speed, new IceManChangeCombatSpeedState(this));\r\n        this.fsm.addState(IceManState.small_jump, new IceManSmallJumpState(this));\r\n        this.fsm.changeState(IceManState.idle);\r\n\r\n        this.animations.add(IceManAnimations.idle, ['stand'], 10, false, false);\r\n        this.animations.add(IceManAnimations.taunt, ['taunt_01', 'taunt_02'], 10, false, false);\r\n        this.animations.add(IceManAnimations.attack, ['attack_01', 'attack_02'], 10, false, false);\r\n        this.animations.add(IceManAnimations.run, ['run_01', 'run_02'], 10, true, false);\r\n        this.animations.add(IceManAnimations.jump, ['jump'], 10, false, false);\r\n\r\n        this.hitbox = new Phaser.Rectangle(this.getPosition().x, this.getPosition().y, 16, 20);\r\n        this.hitboxOffset.x = -8;\r\n        this.hitboxOffset.y = -20;\r\n        this.updateRect();\r\n\r\n        this.healthMeter = new Meter(this.game, 40, 15);\r\n        this.healthMeter.setEnergy(0);\r\n        this.health = this.healthMeter.totalEnergy;\r\n        this.maxHealth = this.healthMeter.totalEnergy;\r\n\r\n        this.position.x = (this.getPosition().x + 0.5) | 0;\r\n        this.position.y = this.getPosition().y;\r\n\r\n        this.leftGroundCheck = new Ray(new Vector2(), new Vector2(), RayType.not_infinite);\r\n        this.rightGroundCheck = new Ray(new Vector2(), new Vector2(), RayType.not_infinite);\r\n        this.leftCeilCheck = new Ray(new Vector2(), new Vector2(), RayType.not_infinite);\r\n        this.rightCeilCheck = new Ray(new Vector2(), new Vector2(), RayType.not_infinite);\r\n        this.leftCheck1 = new Ray(new Vector2(), new Vector2(), RayType.not_infinite);\r\n        this.leftCheck2 = new Ray(new Vector2(), new Vector2(), RayType.not_infinite);\r\n        this.rightCheck1 = new Ray(new Vector2(), new Vector2(), RayType.not_infinite);\r\n        this.rightCheck2 = new Ray(new Vector2(), new Vector2(), RayType.not_infinite);\r\n        this.groundRays.push(this.leftGroundCheck);\r\n        this.groundRays.push(this.rightGroundCheck);\r\n        this.ceilRays.push(this.leftCeilCheck);\r\n        this.ceilRays.push(this.rightCeilCheck);\r\n        this.leftRays.push(this.leftCheck1);\r\n        this.leftRays.push(this.leftCheck2);\r\n        this.rightRays.push(this.rightCheck1);\r\n        this.rightRays.push(this.rightCheck2);\r\n\r\n        this.wallContact = { left: false, right: false, up: false, down: false };\r\n        this.calculateRegularJumpSettings();\r\n\r\n        this.whiteEffect = this.game.add.sprite(0, 0, Konstants.mega_man, 'white_effect.png');\r\n        this.whiteEffect.alpha = 0.5;\r\n        this.whiteEffect.visible = false;\r\n        this.addChild(this.whiteEffect);\r\n\r\n        this.bossPos.push({\r\n            x: 311.5,\r\n            y: 73,\r\n        });\r\n\r\n        this.bossPos.push({\r\n            x: 314.5,\r\n            y: 73,\r\n        });\r\n\r\n        this.bossPos.push({\r\n            x: 317.5,\r\n            y: 73,\r\n        });\r\n\r\n        this.setCombatSpeed(this.defaultCombatSpeed);\r\n        this.bulletSpeed = this.defaultBulletSpeed;\r\n    }\r\n\r\n    public getCombatSpeed(): number {\r\n        return this.combatSpeed;\r\n    }\r\n\r\n    public setCombatSpeed(speed: number): void {\r\n        this.combatSpeed = speed;\r\n    }\r\n\r\n    public getCombatSpeedInterval(): number {\r\n        return this.combatSpeedInterval;\r\n    }\r\n\r\n    public getMinCombatSpeed(): number {\r\n        return this.minCombatSpeed;\r\n    }\r\n\r\n    public incrementBulletSpeed(): void {\r\n        this.bulletSpeed = this.bulletSpeed + this.bulletSpeedIncrement;\r\n\r\n        if (this.bulletSpeed > this.maxBulletSpeed) {\r\n            this.bulletSpeed = this.maxBulletSpeed;\r\n        }\r\n    }\r\n\r\n    public show(): void {\r\n        this.visible = true;\r\n        this.animations.play(IceManAnimations.taunt);\r\n    }\r\n\r\n    public performTaunt(): void {\r\n        this.animations.play(IceManAnimations.taunt);\r\n    }\r\n\r\n\r\n    public shoot(): void {\r\n        this.game.sound.play(AudioName.ice_slasher);\r\n        this.isShielded = false;\r\n\r\n        let bullet: Bullet = this.myWorld.entityManager.createBasicBullet(\r\n            this, this.position.x - 4, this.position.y - 12, 6, 6,\r\n            EntityType.ice_man, EntityType.ice_man_bullet, 'bullet_01');\r\n        bullet.horizontalSpeed = this.bulletSpeed;\r\n        bullet.targetSpeed.x = bullet.horizontalSpeed * -1;\r\n        bullet.animations.add('active', ['bullet_01', 'bullet_02'], 10, true);\r\n        bullet.animations.play('active');\r\n    }\r\n\r\n    public takeDamage(damage: number, damageDir: Phaser.Point = new Phaser.Point(0, 0)): void {\r\n        if (this.isShielded) {\r\n            this.game.sound.play(AudioName.dink);\r\n            return;\r\n        }\r\n\r\n        if (this.health <= 0) {\r\n            return;\r\n        }\r\n\r\n        if (this.isInvincible) {\r\n            return;\r\n        }\r\n\r\n        this.healthMeter.takeEnergy(damage);\r\n        this.health -= damage;\r\n        this.targetSpeed.x = 30 * damageDir.x;\r\n        this.targetSpeed.y = 0;\r\n\r\n        if (this.health <= 0) {\r\n            this.game.sound.play(AudioName.explosion);\r\n\r\n            let speed: number = 24;\r\n            this.addDeathEffect(0, -speed); // top\r\n            this.addDeathEffect(speed, 0);  // right\r\n            this.addDeathEffect(0, speed);  // bottom\r\n            this.addDeathEffect(-speed, 0); // left\r\n\r\n            speed = 40;\r\n            this.addDeathEffect(0, -speed); // top\r\n            this.addDeathEffect(Math.cos(45 * (Math.PI / 180)) * speed, Math.sin(-45 * (Math.PI / 180)) * speed); // top-right\r\n            this.addDeathEffect(speed, 0);  // right\r\n            this.addDeathEffect(Math.cos(45 * (Math.PI / 180)) * speed, Math.sin(45 * (Math.PI / 180)) * speed); // bottom-right\r\n            this.addDeathEffect(0, speed);  // bottom\r\n            this.addDeathEffect(Math.cos(135 * (Math.PI / 180)) * speed, Math.sin(45 * (Math.PI / 180)) * speed); // bottom-left\r\n            this.addDeathEffect(-speed, 0);  // left\r\n            this.addDeathEffect(Math.cos(135 * (Math.PI / 180)) * speed, Math.sin(-45 * (Math.PI / 180)) * speed); // top-left\r\n\r\n            this.health = 0;\r\n            this.myWorld.dropManager.dropBossItem(EntityType.ice_man_boss_item, this.bossData.bossItemSpawnPosition.x * 16, this.bossData.bossItemSpawnPosition.y * 16);\r\n            this.myWorld.createExplosionEffect(this.getPosition().x, this.getPosition().y - (<Phaser.Rectangle>this.hitbox).halfHeight);\r\n            this.destroyed.dispatch(this);\r\n            this.kill();\r\n        }\r\n        else {\r\n            this.game.sound.play(AudioName.enemy_damage);\r\n            this.isHurt = true;\r\n            this.isInvincible = true;\r\n            this.isBlinking = true;\r\n            this.myWorld.createHurtDust(this.getPosition().x - 2, this.getPosition().y - 40);\r\n            this.myWorld.createHurtDust(this.getPosition().x - 12, this.getPosition().y - 36);\r\n            this.myWorld.createHurtDust(this.getPosition().x + 8, this.getPosition().y - 36);\r\n            this.whiteEffect.visible = true;\r\n            this.whiteEffect.position.x = -12;\r\n            this.whiteEffect.position.y = -24;\r\n        }\r\n    }\r\n}\r\n\r\nenum IceManState {\r\n    idle = 'idle',\r\n    choose_next_position = 'choose_next_position',\r\n    jump = 'jump',\r\n    shoot_going_down = 'shoot_going_down',\r\n    shoot_going_up = 'shoot_going_up',\r\n    small_jump = 'small_jump',\r\n    change_combat_speed = 'change_combat_speed',\r\n}\r\n\r\nclass IceManIdleState implements State {\r\n    name: string = IceManState.idle;\r\n    initialized: boolean;\r\n    actor: IceMan;\r\n\r\n    constructor(actor: IceMan) {\r\n        this.actor = actor;\r\n    }\r\n\r\n    enter(): void {\r\n        // console.log('Ice Man enter: ' + this.name);\r\n        this.initialized = true;\r\n        this.actor.animations.play(IceManAnimations.idle);\r\n    }\r\n\r\n    update(): void {\r\n        this.actor.fsm.changeState(IceManState.choose_next_position);\r\n    }\r\n\r\n    exit(): void {\r\n        // console.log('Ice Man exit: ' + this.name);\r\n        this.initialized = false;\r\n    }\r\n}\r\n\r\nclass IceManChooseNextPositionState implements State {\r\n    public name: string = IceManState.choose_next_position;\r\n    public initialized: boolean;\r\n    public actor: IceMan;\r\n    private goToX: number;\r\n    private dirX: number;\r\n\r\n    constructor(actor: IceMan) {\r\n        this.actor = actor;\r\n    }\r\n\r\n    enter(): void {\r\n        // console.log('Ice Man enter: ' + this.name);\r\n        this.initialized = true;\r\n\r\n        if (this.actor.currentPosIdx == this.actor.maxIdx - 1) {\r\n            this.actor.posDirection = -1;\r\n        }\r\n        else if (this.actor.currentPosIdx == 0) {\r\n            this.actor.posDirection = 1;\r\n        }\r\n\r\n        if (this.actor.posDirection == 1) {\r\n            this.actor.currentPosIdx++;\r\n        }\r\n        else if (this.actor.posDirection == -1) {\r\n            this.actor.currentPosIdx--;\r\n        }\r\n\r\n        if (this.actor.currentPosIdx == this.actor.maxIdx) {\r\n            this.actor.currentPosIdx = this.actor.maxIdx - 1;\r\n        }\r\n        else if (this.actor.currentPosIdx == -1) {\r\n            this.actor.posDirection = 0;\r\n        }\r\n\r\n        this.goToX = this.actor.bossPos[this.actor.currentPosIdx].x * 16;\r\n        this.dirX = MathUtil.sign(this.goToX - this.actor.getPosition().x);\r\n        this.actor.targetSpeed.x = this.actor.horizontalSpeed * this.dirX;\r\n        this.actor.animations.play(IceManAnimations.run);\r\n    }\r\n\r\n    update(): void {\r\n        this.actor.setFacingDirection(-this.dirX);\r\n\r\n        if (Helper.distanceTo3(this.actor.getPosition().x, 0, this.goToX, 0) < 2) {\r\n            this.actor.getPosition().x = this.goToX;\r\n            this.actor.position.x = (this.actor.getPosition().x + 0.5) | 0;\r\n            this.actor.fsm.changeState(IceManState.jump);\r\n            return;\r\n        }\r\n    }\r\n\r\n    exit(): void {\r\n        // console.log('Ice Man exit: ' + this.name);\r\n        this.initialized = false;\r\n    }\r\n}\r\n\r\nclass IceManJumpState implements State {\r\n    public name: string = IceManState.jump;\r\n    public initialized: boolean;\r\n    public actor: IceMan;\r\n    private fixedTime: number = 1 / 60;\r\n    private g: number = -300;\r\n    private t: number = 0;\r\n    private vx: number;\r\n    private vy: number;\r\n    private startX: number;\r\n    private startY: number;\r\n    private v: number = 190;\r\n    private tMax: number;\r\n\r\n    constructor(actor: IceMan) {\r\n        this.actor = actor;\r\n    }\r\n\r\n    enter(): void {\r\n        // console.log('Ice Man enter: ' + this.name);\r\n        this.initialized = true;\r\n\r\n        this.actor.animations.play(IceManAnimations.idle);\r\n        this.actor.setFacingDirection(-1);\r\n        this.actor.targetSpeed.x = 0;\r\n        this.actor.targetSpeed.y = 0;\r\n        this.actor.useGravity = false;\r\n\r\n        this.startX = this.actor.bossPos[this.actor.currentPosIdx].x * 16;\r\n        this.startY = this.actor.bossPos[this.actor.currentPosIdx].y * 16;\r\n\r\n        this.vx = this.v;\r\n        this.vy = -this.v;\r\n\r\n        this.tMax = this.vy / this.g;\r\n    }\r\n\r\n    update(): void {\r\n        this.actor.getPosition().x = 0;\r\n        this.actor.getPosition().y = (this.vy * this.t) - (0.5 * this.g * this.t * this.t);\r\n        this.actor.getPosition().x += this.startX;\r\n        this.actor.getPosition().y += this.startY;\r\n        this.t += this.fixedTime;\r\n\r\n        this.actor.position.x = (this.actor.getPosition().x + 0.5) | 0;\r\n        this.actor.position.y = this.actor.getPosition().y;\r\n\r\n        if (this.t >= this.tMax) {\r\n            this.actor.fsm.changeState(IceManState.shoot_going_down);\r\n            return;\r\n        }\r\n    }\r\n\r\n    exit(): void {\r\n        // console.log('Ice Man exit: ' + this.name);\r\n        this.initialized = false;\r\n        this.t = 0;\r\n    }\r\n}\r\n\r\nclass IceManShootGoingDownState implements State {\r\n    public name: string = IceManState.shoot_going_down;\r\n    public initialized: boolean;\r\n    public actor: IceMan;\r\n    private startX: number;\r\n    private startY: number;\r\n    private endX: number;\r\n    private endY: number;\r\n    private movementElapsedTime: number = 0;\r\n    private movementEndTime: number;\r\n    private movementCompleted: boolean = false;\r\n    private shotCount: number = 0;\r\n    private maxShots: number = 3;\r\n    private shootElapsedTime: number = 0;\r\n    private shootEndTime: number = 0;\r\n    private shotTracker: Array<boolean> = new Array<boolean>();\r\n    private shootingCompleted: boolean = false;\r\n    private fixedTime: number = (1 / 60) * 1000;\r\n    private delayElapsedTime: number = 0;\r\n    private delayEndTime: number = 500;\r\n    private delayCompleted: boolean = false;\r\n\r\n    constructor(actor: IceMan) {\r\n        this.actor = actor;\r\n    }\r\n\r\n    enter(): void {\r\n        // console.log('Ice Man enter: ' + this.name);\r\n        this.initialized = true;\r\n\r\n        this.startX = this.actor.getPosition().x;\r\n        this.startY = this.actor.getPosition().y;\r\n\r\n        this.endX = this.actor.bossPos[this.actor.currentPosIdx].x * 16;\r\n        this.endY = this.actor.bossPos[this.actor.currentPosIdx].y * 16;\r\n\r\n        this.movementEndTime = this.actor.getCombatSpeed();\r\n        this.shootEndTime = this.movementEndTime / 3;\r\n    }\r\n\r\n    update(): void {\r\n        this.checkShooting();\r\n        this.checkMovement();\r\n        this.checkDelay();\r\n\r\n        if (this.delayCompleted) {\r\n            this.actor.fsm.changeState(IceManState.shoot_going_up);\r\n            return;\r\n        }\r\n    }\r\n\r\n    exit(): void {\r\n        // console.log('Ice Man exit: ' + this.name);\r\n        this.initialized = false;\r\n        this.movementElapsedTime = 0;\r\n        this.shootElapsedTime = 0;\r\n        this.delayElapsedTime = 0;\r\n        this.shotCount = 0;\r\n        this.movementCompleted = false;\r\n        this.shootingCompleted = false;\r\n        this.delayCompleted = false;\r\n    }\r\n\r\n    private checkShooting(): void {\r\n        if (this.shootingCompleted) {\r\n            return;\r\n        }\r\n\r\n        this.shootElapsedTime += this.fixedTime;\r\n\r\n        if (this.shootElapsedTime >= this.shootEndTime) {\r\n            this.actor.animations.play(IceManAnimations.attack);\r\n            this.shotCount++;\r\n            this.shootElapsedTime = 0;\r\n            this.actor.shoot();\r\n\r\n            if (this.shotCount >= this.maxShots) {\r\n                this.shootingCompleted = true;\r\n            }\r\n        }\r\n    }\r\n\r\n    private checkMovement(): void {\r\n        if (this.movementCompleted) {\r\n            return;\r\n        }\r\n\r\n        this.movementElapsedTime += this.fixedTime;\r\n        this.actor.getPosition().y = MathUtil.lerp(this.startY, this.endY, this.movementElapsedTime / this.movementEndTime);\r\n\r\n        if (this.movementElapsedTime >= this.movementEndTime) {\r\n            if (this.shotCount >= this.maxShots) {\r\n                this.actor.getPosition().y = this.endY;\r\n                this.actor.position.y = this.actor.getPosition().y;\r\n                this.movementCompleted = true;\r\n            }\r\n        }\r\n    }\r\n\r\n    private checkDelay(): void {\r\n        if (!this.shootingCompleted || !this.movementCompleted) {\r\n            return;\r\n        }\r\n\r\n        this.delayElapsedTime += this.fixedTime;\r\n\r\n        if (this.delayElapsedTime >= this.delayEndTime) {\r\n            this.delayCompleted = true;\r\n        }\r\n    }\r\n}\r\n\r\nclass IceManShootGoingUpState implements State {\r\n    public name: string = IceManState.shoot_going_up;\r\n    public initialized: boolean;\r\n    public actor: IceMan;\r\n    private startX: number;\r\n    private startY: number;\r\n    private endX: number;\r\n    private endY: number;\r\n    private movementElapsedTime: number = 0;\r\n    private movementEndTime: number;\r\n    private movementCompleted: boolean = false;\r\n    private shotCount: number = 0;\r\n    private maxShots: number = 3;\r\n    private shootElapsedTime: number = 0;\r\n    private shootEndTime: number = 0;\r\n    private shootingCompleted: boolean = false;\r\n    private fixedTime: number = (1 / 60) * 1000;\r\n\r\n    constructor(actor: IceMan) {\r\n        this.actor = actor;\r\n    }\r\n\r\n    enter(): void {\r\n        // console.log('Ice Man enter: ' + this.name);\r\n        this.initialized = true;\r\n\r\n        this.startX = this.actor.getPosition().x;\r\n        this.startY = this.actor.getPosition().y;\r\n\r\n        this.endX = this.actor.bossPos[this.actor.currentPosIdx].x * 16;\r\n        this.endY = this.actor.bossPos[this.actor.currentPosIdx].y * 16 - (16 * 4);\r\n\r\n        this.movementEndTime = this.actor.getCombatSpeed();\r\n        this.shootEndTime = this.movementEndTime / 3;\r\n        this.shootElapsedTime = this.shootEndTime;\r\n    }\r\n\r\n    update(): void {\r\n        this.checkShooting();\r\n        this.checkMovement();\r\n\r\n        if (this.shootingCompleted && this.movementCompleted) {\r\n            this.actor.fsm.changeState(IceManState.change_combat_speed);\r\n            return;\r\n        }\r\n    }\r\n\r\n    exit(): void {\r\n        // console.log('Ice Man exit: ' + this.name);\r\n        this.initialized = false;\r\n        this.movementElapsedTime = 0;\r\n        this.shootElapsedTime = 0;\r\n        this.shotCount = 0;\r\n        this.movementCompleted = false;\r\n        this.shootingCompleted = false;\r\n    }\r\n\r\n    private checkShooting(): void {\r\n        if (this.shootingCompleted) {\r\n            return;\r\n        }\r\n\r\n        this.shootElapsedTime += this.actor.game.time.elapsedMS;\r\n\r\n        if (this.shootElapsedTime >= this.shootEndTime) {\r\n            this.actor.animations.play(IceManAnimations.attack);\r\n            this.shotCount++;\r\n            this.shootElapsedTime = 0;\r\n            this.actor.shoot();\r\n\r\n            if (this.shotCount >= this.maxShots) {\r\n                this.shootingCompleted = true;\r\n            }\r\n        }\r\n    }\r\n\r\n    private checkMovement(): void {\r\n        if (this.movementCompleted) {\r\n            return;\r\n        }\r\n\r\n        this.movementElapsedTime += this.actor.game.time.elapsedMS;\r\n        this.actor.getPosition().y = MathUtil.lerp(this.startY, this.endY, this.movementElapsedTime / this.movementEndTime);\r\n\r\n        if (this.movementElapsedTime >= this.movementEndTime) {\r\n            if (this.shotCount >= this.maxShots) {\r\n                this.movementCompleted = true;\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nclass IceManChangeCombatSpeedState implements State {\r\n    public name: string = IceManState.change_combat_speed;\r\n    public initialized: boolean;\r\n    public actor: IceMan;\r\n\r\n    constructor(actor: IceMan) {\r\n        this.actor = actor;\r\n    }\r\n\r\n    enter(): void {\r\n        // console.log('Ice Man enter: ' + this.name);\r\n        this.initialized = true;\r\n\r\n        this.actor.setCombatSpeed(this.actor.getCombatSpeed() - this.actor.getCombatSpeedInterval());\r\n\r\n        if (this.actor.getCombatSpeed() < this.actor.getMinCombatSpeed()) {\r\n            this.actor.setCombatSpeed(this.actor.getMinCombatSpeed());\r\n        }\r\n\r\n        this.actor.incrementBulletSpeed();\r\n    }\r\n\r\n    update(): void {\r\n        this.actor.fsm.changeState(IceManState.small_jump);\r\n    }\r\n\r\n    exit(): void {\r\n        // console.log('Ice Man exit: ' + this.name);\r\n        this.initialized = false;\r\n    }\r\n}\r\n\r\nclass IceManSmallJumpState implements State {\r\n    public name: string = IceManState.small_jump;\r\n    public initialized: boolean;\r\n    public actor: IceMan;\r\n\r\n    constructor(actor: IceMan) {\r\n        this.actor = actor;\r\n    }\r\n\r\n    enter(): void {\r\n        // console.log('Ice Man enter: ' + this.name);\r\n        this.initialized = true;\r\n\r\n        this.actor.animations.play(IceManAnimations.idle);\r\n        this.actor.targetSpeed.x = 0;\r\n        this.actor.targetSpeed.y = -50;\r\n        this.actor.useGravity = true;\r\n    }\r\n\r\n    update(): void {\r\n        if (this.actor.isOnGround) {\r\n            this.actor.fsm.changeState(IceManState.choose_next_position);\r\n        }\r\n    }\r\n\r\n    exit(): void {\r\n        // console.log('Ice Man exit: ' + this.name);\r\n        this.initialized = false;\r\n    }\r\n}","import { World } from '../world'\r\nimport { Surface } from '../world'\r\nimport { EntityType, TagType, AudioName, PowerUpType } from '../konstants'\r\nimport { Entity } from '../entity'\r\nimport { Vector2 } from '../sat2d/vector2'\r\nimport { Ray } from '../sat2d/ray'\r\nimport { RayType } from '../sat2d/ray'\r\nimport { RayIntersection } from '../sat2d/rayIntersection'\r\nimport { SAT2D } from '../sat2d/sat2d'\r\nimport { fixedTime, fixedTimeMS } from '../main'\r\n\r\nexport class PowerUp extends Entity {\r\n\r\n    public type: PowerUpType;\r\n    public groundRayLeft: Ray;\r\n    public groundRayRight: Ray;\r\n    public skinWidth: number = 5;\r\n    public alwaysExists: boolean;\r\n    public useGravity: boolean = false;\r\n    public gravityY: number = 500;\r\n    public targetSpeed: Phaser.Point = new Phaser.Point(0, 0);\r\n    public energyRestore: number = 0;\r\n    public isGlobal: boolean; // Global power ups are not killed off screen.\r\n\r\n    constructor(public myWorld: World, public tag: TagType, public myEntityType: EntityType,\r\n        game: Phaser.Game,\r\n        x: number, y: number,\r\n        key: string, frame: string) {\r\n        super(myWorld, tag, myEntityType, game, x, y, key, frame);\r\n\r\n        this.health = 1;\r\n        this.maxHealth = 1;\r\n        this.getPosition().x = x;\r\n        this.getPosition().y = y;\r\n        this.position.x = (this.getPosition().x + 0.5) | 0;\r\n        this.position.y = this.getPosition().y;\r\n        this.anchor.setTo(0.5, 0.5);\r\n\r\n        this.groundRayLeft = new Ray(new Vector2(), new Vector2(), RayType.not_infinite);\r\n        this.groundRayRight = new Ray(new Vector2(), new Vector2(), RayType.not_infinite);\r\n    }\r\n\r\n    public manualUpdate(): void {\r\n        if (!this.alive) {\r\n            return;\r\n        }\r\n\r\n        if (this.isGlobal) {\r\n            return;\r\n        }\r\n\r\n        if (this.useGravity) {\r\n            this.targetSpeed.y += this.gravityY * this.game.time.physicsElapsed;\r\n        }\r\n\r\n        if (this.targetSpeed.y >= 300) {\r\n            this.targetSpeed.y = 300;\r\n        }\r\n\r\n        this.velocity.x = this.targetSpeed.x;\r\n        this.velocity.y = this.targetSpeed.y;\r\n\r\n        this.getPosition().x += this.velocity.x * this.game.time.physicsElapsed;\r\n        this.getPosition().y += this.velocity.y * this.game.time.physicsElapsed;\r\n\r\n        this.position.x = (this.getPosition().x + 0.5) | 0;\r\n        this.position.y = this.getPosition().y;\r\n\r\n        this.updateRect();\r\n        this.castRays();\r\n        this.showDebugRays();\r\n    }\r\n\r\n    public checkSurfaceCollisions(surfaces: Array<Surface>): void {\r\n        if (this.isGlobal) {\r\n            return;\r\n        }\r\n\r\n        if (!this.useGravity) {\r\n            return;\r\n        }\r\n\r\n        if (this.velocity.y < 0) {\r\n            return;\r\n        }\r\n\r\n        let into: RayIntersection;\r\n        let tempSurface: Surface;\r\n        let surfaceHit: Surface;\r\n        let tempVec1: Vector2 = new Vector2();\r\n        let tempVec2: Vector2 = new Vector2();\r\n\r\n        for (let i = 0; i < surfaces.length; i++) {\r\n            tempSurface = surfaces[i];\r\n\r\n            if (!tempSurface.collidable) {\r\n                continue;\r\n            }\r\n\r\n            let nx: number = tempSurface.dir.y;\r\n            let ny: number = -tempSurface.dir.x;\r\n\r\n            // Check floors (ny == -1 is a floor)\r\n            if (ny != -1) {\r\n                continue;\r\n            }\r\n\r\n            tempVec1.x = tempSurface.p1.x;\r\n            tempVec1.y = tempSurface.p1.y;\r\n            tempVec2.x = tempSurface.p2.x;\r\n            tempVec2.y = tempSurface.p2.y;\r\n\r\n            into = SAT2D.testRayVsRay(this.groundRayLeft, new Ray(tempVec1, tempVec2, RayType.not_infinite), into);\r\n\r\n            if (into != null) {\r\n                let dx: number = into.ray1.end.x - into.ray1.start.x;\r\n                let dy: number = into.ray1.end.y - into.ray1.start.y;\r\n                let distance: number = Math.sqrt(dx * dx + dy * dy);\r\n                let trueDistance: number = distance * into.u1;\r\n\r\n                let contactX: number = into.ray1.start.x + into.ray1.dir.x * into.u1;\r\n                let contactY: number = into.ray1.start.y + trueDistance;\r\n\r\n                if (trueDistance > this.hitbox.halfHeight) {\r\n                    continue;\r\n                }\r\n\r\n                this.getPosition().y = contactY - this.hitbox.halfHeight;\r\n                this.setVelocity(this.getVelocity().x, 0);\r\n                this.targetSpeed.y = 0;\r\n            }\r\n\r\n            into = SAT2D.testRayVsRay(this.groundRayRight, new Ray(tempVec1, tempVec2, RayType.not_infinite), into);\r\n\r\n            if (into != null) {\r\n                let dx: number = into.ray1.end.x - into.ray1.start.x;\r\n                let dy: number = into.ray1.end.y - into.ray1.start.y;\r\n                let distance: number = Math.sqrt(dx * dx + dy * dy);\r\n                let trueDistance: number = distance * into.u1;\r\n\r\n                let contactX: number = into.ray1.start.x + into.ray1.dir.x * into.u1;\r\n                let contactY: number = into.ray1.start.y + trueDistance;\r\n\r\n                // this.pGraphicsDebug.drawCircle(contactX, contactY, 3);\r\n\r\n                if (trueDistance > this.hitbox.halfHeight) {\r\n                    continue;\r\n                }\r\n\r\n                this.getPosition().y = contactY - this.hitbox.halfHeight;\r\n                this.setVelocity(this.getVelocity().x, 0);\r\n                this.targetSpeed.y = 0;\r\n            }\r\n        }\r\n    }\r\n\r\n    public checkCollisionWithPlayer(): void {\r\n\r\n    }\r\n\r\n    public doAction(): void {\r\n\r\n    }\r\n\r\n    private castRays(): void {\r\n        let centerX: number = this.getPosition().x;\r\n        let centerY: number = this.getPosition().y;\r\n\r\n        // cast ground rays\r\n        this.groundRayLeft.start = new Vector2(centerX - this.hitbox.halfWidth, centerY);\r\n        this.groundRayLeft.end = new Vector2(centerX - this.hitbox.halfWidth, centerY + this.hitbox.height);\r\n        this.groundRayRight.start = new Vector2(centerX + this.hitbox.halfWidth, centerY);\r\n        this.groundRayRight.end = new Vector2(centerX + this.hitbox.halfWidth, centerY + this.hitbox.height);\r\n    }\r\n\r\n    private showDebugRays(): void {\r\n        // this.pGraphicsDebug.lineStyle(1, 0);\r\n        // this.pGraphicsDebug.moveTo(this.groundRayLeft.start.x, this.groundRayLeft.start.y);\r\n        // this.pGraphicsDebug.lineTo(this.groundRayLeft.end.x, this.groundRayLeft.end.y);\r\n        // this.pGraphicsDebug.moveTo(this.groundRayRight.start.x, this.groundRayRight.start.y);\r\n        // this.pGraphicsDebug.lineTo(this.groundRayRight.end.x, this.groundRayRight.end.y);\r\n    }\r\n}","import { World, Surface } from '../world'\r\nimport { EntityType, TagType, AudioName } from '../konstants'\r\nimport { Entity } from '../entity'\r\nimport { State } from '../fsm/state'\r\nimport { StateMachine } from '../fsm/stateMachine'\r\n\r\nenum VinishingBlockAnimations {\r\n    idle = 'idle',\r\n    appear = 'appear',\r\n}\r\n\r\nexport class VanishingBlock extends Entity {\r\n\r\n    public horizontalSpeed: number = 50;\r\n    public targetSpeed: Phaser.Point = new Phaser.Point(0, 0);\r\n    public fsm: StateMachine;\r\n    public surfaces: Array<Surface> = new Array<Surface>();\r\n    public groupIndex: number;\r\n    public index: number;\r\n    public appear: number = 0;\r\n    public appearSaved: number = 0;\r\n    public delay: number = 0;\r\n\r\n    public startDelay: number = 0;\r\n    public appearFor: number = 0;\r\n    public hideFor: number = 0;\r\n\r\n    public isVisible:boolean=false;\r\n    public m_delayElapsedTime:number=0;\r\n    public m_appearElapsedTime:number=0;\r\n    public isActive:boolean=false;\r\n\r\n    constructor(myWorld: World, tag: TagType, e: EntityType, game: Phaser.Game, x: number, y: number, key: string, frame: string) {\r\n        super(myWorld, tag, e, game, x, y, key, frame);\r\n\r\n        this.getPosition().x = x;\r\n        this.getPosition().y = y;\r\n        this.position.x = this.getPosition().x;\r\n        this.position.x = this.getPosition().x;\r\n        this.smoothed = true;\r\n        this.health = 1;\r\n        this.maxHealth = 1;\r\n        this.isShielded = false;\r\n\r\n        // this.fsm = new StateMachine();\r\n        // this.fsm.addState(VanishingBlockState.start_delay, new VanishingBlockStartDelayState(this));\r\n        // this.fsm.addState(VanishingBlockState.hide, new VanishingBlockHideState(this));\r\n        // this.fsm.addState(VanishingBlockState.appear, new VanishingBlockAppearState(this));\r\n\r\n        this.animations.add(VinishingBlockAnimations.idle, ['vanishing_block_01'], 10, false, false);\r\n        this.animations.add(VinishingBlockAnimations.appear, ['vanishing_block_02', 'vanishing_block_03', 'vanishing_block_04', 'vanishing_block_05', 'vanishing_block_01'], 10, false, false);\r\n        this.animations.play(VinishingBlockAnimations.idle);\r\n\r\n        this.visible=false;\r\n    }\r\n\r\n    public manualUpdate(): void {\r\n        // this.pGraphicsDebug.clear();\r\n\r\n        if (!this.enabled) {\r\n            return;\r\n        }\r\n\r\n        if (!this.alive) {\r\n            return;\r\n        }\r\n\r\n        // this.fsm.currentState.update();\r\n\r\n        this.velocity.x = this.targetSpeed.x;\r\n        this.velocity.y = this.targetSpeed.y;\r\n\r\n        this.getPosition().x += this.velocity.x * this.game.time.physicsElapsed;\r\n        this.getPosition().y += this.velocity.y * this.game.time.physicsElapsed;\r\n\r\n        this.position.x = (this.getPosition().x + 0.5) | 0;\r\n        this.position.y = this.getPosition().y - 16;\r\n\r\n        this.updateRect();\r\n    }\r\n\r\n    /**\r\n     * Initialize the start_delay state otherwise endTime is 0.\r\n     */\r\n    public initialize(): void {\r\n        this.updateRect();\r\n        // this.fsm.changeState(VanishingBlockState.start_delay);\r\n    }\r\n\r\n    public disable(): void {\r\n        // this.fsm.changeState(VanishingBlockState.hide);\r\n        // (<VanishingBlockHideState>this.fsm.states.Item(VanishingBlockState.hide)).elapsedTime = 0;\r\n        // (<VanishingBlockHideState>this.fsm.states.Item(VanishingBlockState.appear)).elapsedTime = 0;\r\n        this.enabled = false;\r\n    }\r\n\r\n    public enable(): void {\r\n        this.enabled = true;\r\n        // this.fsm.changeState(VanishingBlockState.start_delay);\r\n    }\r\n\r\n    public updateRect(): void {\r\n        this.hitbox.x = this.getPosition().x;\r\n        this.hitbox.y = this.getPosition().y - 16;\r\n    }\r\n}\r\n\r\nenum VanishingBlockState {\r\n    start_delay = 'start_delay',\r\n    hide = 'hidden',\r\n    appear = 'appear',\r\n}\r\n\r\nclass VanishingBlockStartDelayState implements State {\r\n\r\n    name: string = VanishingBlockState.start_delay;\r\n    initialized: boolean;\r\n    actor: VanishingBlock;\r\n    elapsedTime: number = 0;\r\n    endTime: number = 0;\r\n\r\n    constructor(actor: VanishingBlock) {\r\n        this.actor = actor;\r\n    }\r\n\r\n    enter(): void {\r\n        this.initialized = true;\r\n        this.actor.visible = false;\r\n        this.endTime = this.actor.startDelay;\r\n    }\r\n\r\n    update(): void {\r\n        this.elapsedTime += this.actor.game.time.elapsedMS;\r\n\r\n        if (this.elapsedTime >= this.endTime) {\r\n            this.actor.fsm.changeState(VanishingBlockState.appear);\r\n        }\r\n    }\r\n\r\n    exit(): void {\r\n        this.initialized = false;\r\n        this.elapsedTime = 0;\r\n    }\r\n}\r\n\r\nclass VanishingBlockAppearState implements State {\r\n\r\n    name: string = VanishingBlockState.appear;\r\n    initialized: boolean;\r\n    actor: VanishingBlock;\r\n    private elapsedTime: number = 0;\r\n    private endTime: number = 0;\r\n\r\n    constructor(actor: VanishingBlock) {\r\n        this.actor = actor;\r\n    }\r\n\r\n    enter(): void {\r\n        this.initialized = true;\r\n        this.actor.visible = true;\r\n        this.actor.game.sound.play(AudioName.vanishing_blocks);\r\n        this.actor.surfaces.forEach(element => {\r\n            element.collidable = true;\r\n        });\r\n        this.endTime = this.actor.appearFor;\r\n        this.actor.animations.play(VinishingBlockAnimations.appear);\r\n    }\r\n\r\n    update(): void {\r\n        this.elapsedTime += this.actor.game.time.elapsedMS;\r\n\r\n        if (this.elapsedTime >= this.endTime) {\r\n            this.actor.fsm.changeState(VanishingBlockState.hide);\r\n        }\r\n    }\r\n\r\n    exit(): void {\r\n        this.initialized = false;\r\n        this.elapsedTime = 0;\r\n    }\r\n}\r\n\r\nclass VanishingBlockHideState implements State {\r\n\r\n    name: string = VanishingBlockState.hide;\r\n    initialized: boolean;\r\n    actor: VanishingBlock;\r\n    elapsedTime: number = 0;\r\n    endTime: number = 0;\r\n\r\n    constructor(actor: VanishingBlock) {\r\n        this.actor = actor;\r\n    }\r\n\r\n    enter(): void {\r\n        this.initialized = true;\r\n        this.actor.visible = false;\r\n        this.actor.surfaces.forEach(element => {\r\n            element.collidable = false;\r\n        });\r\n        this.endTime = this.actor.hideFor;\r\n    }\r\n\r\n    update(): void {\r\n        // this.elapsedTime += this.actor.game.time.elapsedMS;\r\n\r\n        // if (this.elapsedTime >= this.endTime) {\r\n        //     this.actor.fsm.changeState(VanishingBlockState.appear);\r\n        // }\r\n    }\r\n\r\n    exit(): void {\r\n        this.initialized = false;\r\n        this.elapsedTime = 0;\r\n    }\r\n}\r\n\r\n// class VanishingBlockStartDelayState implements State {\r\n\r\n//     name: string = VanishingBlockState.start_delay;\r\n//     initialized: boolean;\r\n//     actor: VanishingBlock;\r\n//     elapsedTime: number = 0;\r\n//     endTime: number = 0;\r\n\r\n//     constructor(actor: VanishingBlock) {\r\n//         this.actor = actor;\r\n//     }\r\n\r\n//     enter(): void {\r\n//         this.initialized = true;\r\n//         this.actor.visible = false;\r\n//         this.endTime = this.actor.startDelay;\r\n//     }\r\n\r\n//     update(): void {\r\n//         this.elapsedTime += this.actor.game.time.elapsedMS;\r\n\r\n//         if (this.elapsedTime >= this.endTime) {\r\n//             this.actor.fsm.changeState(VanishingBlockState.appear);\r\n//         }\r\n//     }\r\n\r\n//     exit(): void {\r\n//         this.initialized = false;\r\n//         this.elapsedTime = 0;\r\n//     }\r\n// }\r\n\r\n// class VanishingBlockHideState implements State {\r\n\r\n//     name: string = VanishingBlockState.hide;\r\n//     initialized: boolean;\r\n//     actor: VanishingBlock;\r\n//     elapsedTime: number = 0;\r\n//     endTime: number = 0;\r\n\r\n//     constructor(actor: VanishingBlock) {\r\n//         this.actor = actor;\r\n//     }\r\n\r\n//     enter(): void {\r\n//         this.initialized = true;\r\n//         this.actor.visible = false;\r\n//         this.actor.surfaces.forEach(element => {\r\n//             element.collidable = false;\r\n//         });\r\n//         this.endTime = this.actor.hideFor;\r\n//     }\r\n\r\n//     update(): void {\r\n//         this.elapsedTime += this.actor.game.time.elapsedMS;\r\n\r\n//         if (this.elapsedTime >= this.endTime) {\r\n//             this.actor.fsm.changeState(VanishingBlockState.appear);\r\n//         }\r\n//     }\r\n\r\n//     exit(): void {\r\n//         this.initialized = false;\r\n//         this.elapsedTime = 0;\r\n//     }\r\n// }\r\n\r\n// class VanishingBlockAppearState implements State {\r\n\r\n//     name: string = VanishingBlockState.appear;\r\n//     initialized: boolean;\r\n//     actor: VanishingBlock;\r\n//     private elapsedTime: number = 0;\r\n//     private endTime: number = 0;\r\n\r\n//     constructor(actor: VanishingBlock) {\r\n//         this.actor = actor;\r\n//     }\r\n\r\n//     enter(): void {\r\n//         this.initialized = true;\r\n//         this.actor.visible = true;\r\n//         this.actor.game.sound.play(AudioName.vanishing_blocks);\r\n//         this.actor.surfaces.forEach(element => {\r\n//             element.collidable = true;\r\n//         });\r\n//         this.endTime = this.actor.appearFor;\r\n//         this.actor.animations.play(VinishingBlockAnimations.appear);\r\n//     }\r\n\r\n//     update(): void {\r\n//         this.elapsedTime += this.actor.game.time.elapsedMS;\r\n\r\n//         if (this.elapsedTime >= this.endTime) {\r\n//             this.actor.fsm.changeState(VanishingBlockState.hide);\r\n//         }\r\n//     }\r\n\r\n//     exit(): void {\r\n//         this.initialized = false;\r\n//         this.elapsedTime = 0;\r\n//     }\r\n// }","import { Bullet } from './bullet'\r\nimport { World } from '../world'\r\nimport { EntityType, TagType } from '../konstants'\r\nimport { Entity } from '../entity'\r\nimport { Helper } from '../helper'\r\nimport { MathUtil } from '../util/mathutil'\r\nimport { Blader } from '../enemies/blader'\r\nimport { Met } from '../enemies/met'\r\nimport { BulletMovement } from '../bullets/bulletMovement'\r\n// todo: i feel like pick and bullet should be merged\r\n//          or bullet should have bulletMovement\r\n//          create standardBulletMovement for lemons\r\n\r\nexport class Pick extends Entity {\r\n\r\n    owner: Entity;\r\n    velocity: Phaser.Point = new Phaser.Point(0, 0);\r\n    horizontalSpeed: number = 160;\r\n    useGravity: boolean = false;\r\n    gravityY: number = 500;\r\n    targetSpeed: Phaser.Point = new Phaser.Point(0, 0);\r\n    canCollideWithOtherBullet: boolean = false;\r\n    public bulletMovement: BulletMovement = null;\r\n\r\n    constructor(owner: Entity, world: World, tag: TagType, e: EntityType, game: Phaser.Game, x: number, y: number, key?: string | Phaser.RenderTexture | Phaser.BitmapData | PIXI.Texture, frame?: string | number) {\r\n        super(world, tag, e, game, x, y, key, frame);\r\n\r\n        this.smoothed = false;\r\n        this.owner = owner;\r\n        this.health = 1;\r\n        this.maxHealth = 1;\r\n        this.getPosition().x = x;\r\n        this.getPosition().y = y;\r\n        this.position.x = this.getPosition().x;\r\n        this.position.y = this.getPosition().y;\r\n        this.anchor.setTo(0.5, 0.5);\r\n    }\r\n\r\n    public manualUpdate(): void {\r\n        if (!this.alive) {\r\n            return;\r\n        }\r\n\r\n        this.bulletMovement.move();\r\n        this.getPosition().x = this.bulletMovement.position.x;\r\n        this.getPosition().y = this.bulletMovement.position.y;\r\n        this.position.x = (this.getPosition().x + 0.5) | 0;\r\n        this.position.y = this.getPosition().y;\r\n        this.updateRect();\r\n    }\r\n\r\n    public checkCollideWith(other: Entity): void {\r\n        if (Helper.distanceTo(other, this) > 21) {\r\n            return;\r\n        }\r\n\r\n        // The bullet cannot hit itself.\r\n        if (other == this) {\r\n            return;\r\n        }\r\n\r\n        // The bullet cannot hit other bullets shot by the same owner.\r\n        if (other.tag == TagType.bullet) {\r\n            let bullet: Bullet = <Bullet>other;\r\n            if (this.owner == bullet.owner) {\r\n                return;\r\n            }\r\n        }\r\n        // Go through spike.\r\n        else if (other.myEntityType == EntityType.spike) {\r\n            return;\r\n        }\r\n        // Go through explosions.\r\n        else if (other.myEntityType == EntityType.explosion_from_killer_bullet) {\r\n            return;\r\n        }\r\n\r\n        // The bullet cannot hit the owner who shot it.\r\n        if (this.owner == other) {\r\n            return;\r\n        }\r\n\r\n        if (!this.canCollideWithOtherBullet) {\r\n            if (other.tag == TagType.bullet) {\r\n                let bullet: Bullet = <Bullet>other;\r\n\r\n                // Player bullet cannot collide with enemy bullet.\r\n                if (this.owner.tag == TagType.player && bullet.owner.tag != TagType.player) {\r\n                    return;\r\n                }\r\n\r\n                // Enemy bullet cannot collide with player bullet.\r\n                if (this.owner.tag != TagType.player && bullet.owner.tag == TagType.player) {\r\n                    return;\r\n                }\r\n            }\r\n        }\r\n\r\n        // Enemy bullet cannot collide (hurt/kill) with other enemies.\r\n        if (this.owner.tag != TagType.player) {\r\n            if (other.tag != TagType.player) {\r\n                return;\r\n            }\r\n        }\r\n\r\n        // ***************************************************\r\n        // In the future bullets will be allowed to hit other bullets since they don't share the same owner.\r\n        // A boolean will keep track of this.\r\n        // this.graphicsDebug.drawRect(this.getPosition().x + this.hitbox.x - this.hitbox.width * 0.5, this.getPosition().y - this.hitbox.height + this.hitbox.y, this.hitbox.width, this.hitbox.height);\r\n\r\n        if (!Phaser.Rectangle.intersects(this.hitbox, other.hitbox)) {\r\n            return;\r\n        }\r\n\r\n        // This bullets hits enemy 'met'. Reflect this bullet if met is shielded.\r\n        // if (other.myEntityType == EntityType.met) {\r\n        //     let met: Met = <Met>other;\r\n        //     if (met.isShielded) {\r\n        //         this.reflect();\r\n        //         return;\r\n        //     }\r\n        // }\r\n\r\n        other.takeDamage(this.contactDamage, Helper.directionTo(this, other));\r\n        // this.takeDamage(1);\r\n    }\r\n\r\n    public takeDamage(damage: number): void {\r\n        if (this.health <= 0) {\r\n            return;\r\n        }\r\n\r\n        this.health -= damage;\r\n\r\n        if (this.health == 0) {\r\n            this.destroyed.dispatch();\r\n            this.kill();\r\n        }\r\n    }\r\n\r\n    private reflect(): void {\r\n        let x: number = this.targetSpeed.x > 0 ? 135 : 45;\r\n        this.targetSpeed.x = 200 * Math.cos(MathUtil.sign(this.horizontalSpeed) * x * (Math.PI / 180));\r\n        this.targetSpeed.y = 200 * Math.sin(MathUtil.sign(this.horizontalSpeed) * -45 * (Math.PI / 180));\r\n    }\r\n}","import { Entity } from '../entity'\r\nimport { BulletMovement } from './bulletMovement'\r\n\r\nexport class PickBulletMovement implements BulletMovement {\r\n    public destroyed: Phaser.Signal = new Phaser.Signal();\r\n    public position: Phaser.Point = new Phaser.Point();\r\n    public velocity: Phaser.Point = new Phaser.Point();\r\n    public speed:number; // not used\r\n    private t: number = 0;\r\n    private fixedTime: number = 1 / 60;\r\n\r\n    constructor(public owner: Entity, public initialPosition: Phaser.Point, public target: Phaser.Point, \r\n        public duration:number, public gravity:number) {\r\n        this.position.x = initialPosition.x;\r\n        this.position.y = initialPosition.y;\r\n\r\n        // this.t = 0;\r\n        // this.fixedTime = 1 / 60;\r\n        // this.g = -160;\r\n        // this.x0;\r\n        // this.y0;\r\n        // this.duration = 3;\r\n        // this.vx;\r\n        // this.vy;\r\n        // this.targetX = 500;\r\n        // this.targetY = 300;\r\n        // this.x = 0;\r\n        // this.y = 0;\r\n        // this.ball = new Ball(100, 300, 5);\r\n        // this.targetBall = new Ball(this.targetX, this.targetY, 10);\r\n\r\n        // // Set the origin.\r\n        // this.x0 = this.ball.startPosition.x;\r\n        // this.y0 = this.ball.startPosition.y;\r\n        // this.x = this.x0;\r\n        // this.y = this.y0;\r\n\r\n        // // Calculate the initial velocity: 'vx' and 'vy'.\r\n        // this.vx = (this.targetX - this.x0) / this.duration; // v = d / t\r\n        // this.vy = (this.targetY + 0.5 * this.g * this.duration * this.duration - this.y0) / this.duration; // v = (ty + 0.5 * g * t * t - y0) / t\r\n\r\n        this.velocity.x = (this.target.x - this.initialPosition.x) / this.duration; // v = d / t\r\n        this.velocity.y = (this.target.y + 0.5 * this.gravity * this.duration * this.duration - this.initialPosition.y) / this.duration;\r\n        // console.log('duration: ' + this.duration);\r\n        // console.log('target x: ' + this.target.x);\r\n        // console.log('initial pos x: ' + this.initialPosition.x);\r\n        // console.log(this.velocity);\r\n    }\r\n\r\n    public move(): void {\r\n        this.position.x = this.velocity.x * this.t;\r\n        this.position.y = -0.5 * this.gravity * this.t * this.t + this.velocity.y * this.t;\r\n        this.position.x += this.initialPosition.x;\r\n        this.position.y += this.initialPosition.y;\r\n        this.t += this.fixedTime;\r\n\r\n        // this.x = this.vx * this.t;\r\n        // this.y = -0.5 * this.g * this.t * this.t + this.vy * this.t;\r\n        // this.x += this.x0;\r\n        // this.y += this.y0;\r\n        // this.t += this.fixedTime;\r\n\r\n        // this.ball.position.x = this.x;\r\n        // this.ball.position.y = this.y;\r\n    }\r\n}","import { Bullet } from './bullet'\r\nimport { World } from '../world'\r\nimport { EntityType, TagType } from '../konstants'\r\nimport { Entity } from '../entity'\r\nimport { Helper } from '../helper'\r\nimport { MathUtil } from '../util/mathutil'\r\nimport { Blader } from '../enemies/blader'\r\nimport { Met } from '../enemies/met'\r\nimport { Spine } from '../enemies/spine'\r\nimport { CutMan } from '../enemies/bosses/cut_man'\r\n\r\n/**\r\n * NOTE:\r\n * Set the hitbox when you create this entity.\r\n */\r\nexport class ThrowableObject extends Entity {\r\n\r\n    public owner: Entity;\r\n    public velocity: Phaser.Point = new Phaser.Point(0, 0);\r\n    public useGravity: boolean = false;\r\n    public gravityY: number = 500;\r\n    public canCollideWithOtherBullet: boolean = false;\r\n    public isReflected: boolean = false;\r\n    public isBreakable: boolean = true;\r\n    public canCollideWithWalls: boolean = true;\r\n    private speed: number = 0;\r\n    private direction: Phaser.Point = new Phaser.Point(0, 0);\r\n    private targetSpeed: Phaser.Point = new Phaser.Point(0, 0);\r\n    private smallSpritesheet: EntityType;\r\n    private smallStartFrame: string | number;\r\n\r\n    constructor(owner: Entity, myWorld: World, tag: TagType, e: EntityType, game: Phaser.Game, x: number, y: number, key?: string | Phaser.RenderTexture | Phaser.BitmapData | PIXI.Texture, frame?: string | number) {\r\n        super(myWorld, tag, e, game, x, y, key, frame);\r\n\r\n        this.smoothed = false;\r\n        this.owner = owner;\r\n        this.health = 1;\r\n        this.maxHealth = 1;\r\n        this.getPosition().x = x;\r\n        this.getPosition().y = y;\r\n        this.position.x = this.getPosition().x;\r\n        this.position.y = this.getPosition().y;\r\n        this.anchor.setTo(0.5, 0.5);\r\n    }\r\n\r\n    public manualUpdate(): void {\r\n        // this.pGraphicsDebug.clear();\r\n        \r\n        if (!this.alive) {\r\n            return;\r\n        }\r\n\r\n        if (this.useGravity) {\r\n            this.targetSpeed.y += this.gravityY * this.game.time.physicsElapsed;\r\n        }\r\n\r\n        this.velocity.x = this.targetSpeed.x;\r\n        this.velocity.y = this.targetSpeed.y;\r\n\r\n        this.getPosition().x += this.velocity.x * this.game.time.physicsElapsed;\r\n        this.getPosition().y += this.velocity.y * this.game.time.physicsElapsed;\r\n\r\n        this.position.x = (this.getPosition().x + 0.5) | 0;\r\n        this.position.y = this.getPosition().y;\r\n\r\n        this.updateRect();\r\n    }\r\n\r\n    /**\r\n     * Set by the class that is throwing the object.\r\n     * @param direction The direction to throw the object.\r\n     * @param speed The speed at which the object is thrown.\r\n     */\r\n    public setParameters(direction: Phaser.Point, speed: number): void {\r\n        this.direction = direction;\r\n        this.speed = speed;\r\n        this.targetSpeed.x = this.speed * this.direction.x;\r\n        this.targetSpeed.y = this.speed * this.direction.y;\r\n    }\r\n\r\n    /**\r\n     * Set by the entity manager class.\r\n     * Sets the spritesheet key and start frame to use for the mini-breakables that spawn after\r\n     * the base larger breakable breaks.\r\n     * @param smallSpritesheet \r\n     * @param smallStartFrame \r\n     */\r\n    public setBreakableParameters(smallSpritesheet: EntityType, smallStartFrame: string | number): void {\r\n        this.smallSpritesheet = smallSpritesheet;\r\n        this.smallStartFrame = smallStartFrame;\r\n    }\r\n\r\n    public updateRect(): void {\r\n        this.hitbox.x = this.getPosition().x + this.hitboxOffset.x;\r\n        this.hitbox.y = this.getPosition().y + this.hitboxOffset.y;\r\n    }\r\n\r\n    /**\r\n     * NOTE: The distance check is not particularly great. Some entities have their position as their middle center.\r\n     *         This causes strange behavior when entities have a large hitbox because the position checked will be\r\n     *         its middle center. Intersection may be missed since distance check will show that the bullet is too\r\n     *         far but yet it actually intersects.  Make sure to keep this in mind when creating the hit boxes.\r\n     * @param other {Entity}\r\n     */\r\n    public checkCollideWith(other: Entity): void {\r\n        if (Helper.distanceTo(other, this) > 60) {\r\n            return;\r\n        }\r\n\r\n        // The bullet cannot hit itself.\r\n        if (other == this) {\r\n            return;\r\n        }\r\n\r\n        // The bullet cannot hit other bullets shot by the same owner.\r\n        if (other.tag == TagType.bullet) {\r\n            let bullet: Bullet = <Bullet>other;\r\n            if (this.owner == bullet.owner) {\r\n                return;\r\n            }\r\n        }\r\n        // Go through spike.\r\n        else if (other.myEntityType == EntityType.spike) {\r\n            return;\r\n        }\r\n        // Go through explosions.\r\n        else if (other.myEntityType == EntityType.explosion_from_killer_bullet) {\r\n            return;\r\n        }\r\n\r\n        // Go through power ups.\r\n        if (other.tag == TagType.power_up) {\r\n            return;\r\n        }\r\n\r\n        // The bullet cannot hit the owner who shot it.\r\n        if (this.owner == other) {\r\n            return;\r\n        }\r\n\r\n        if (!this.canCollideWithOtherBullet) {\r\n            if (other.tag == TagType.bullet) {\r\n                let bullet: Bullet = <Bullet>other;\r\n\r\n                // Player bullet cannot collide with enemy bullet.\r\n                if (this.owner.tag == TagType.player && bullet.owner.tag != TagType.player) {\r\n                    return;\r\n                }\r\n\r\n                // Enemy bullet cannot collide with player bullet.\r\n                if (this.owner.tag != TagType.player && bullet.owner.tag == TagType.player) {\r\n                    return;\r\n                }\r\n\r\n                // Enemy bullet cannot collide with enemy bullet.\r\n                if (this.tag == TagType.bullet) {\r\n                    return;\r\n                }\r\n            }\r\n        }\r\n\r\n        // Enemy bullet cannot collide (hurt/kill) with other enemies.\r\n        if (this.owner.tag == TagType.enemy) {\r\n            if (other.tag == TagType.enemy) {\r\n                return;\r\n            }\r\n        }\r\n\r\n        // ***************************************************\r\n        // In the future bullets will be allowed to hit other bullets since they don't share the same owner.\r\n        // A boolean will keep track of this.\r\n        // this.graphicsDebug.drawRect(this.getPosition().x + this.hitbox.x - this.hitbox.width * 0.5, this.getPosition().y - this.hitbox.height + this.hitbox.y, this.hitbox.width, this.hitbox.height);\r\n\r\n        if (!Phaser.Rectangle.intersects(this.hitbox, other.hitbox)) {\r\n            return;\r\n        }\r\n\r\n        // This bullets hits enemy 'met'. Reflect this bullet if met is shielded.\r\n        // if (other.myEntityType == EntityType.met) {\r\n        //     let met: Met = <Met>other;\r\n        //     if (met.isShielded) {\r\n        //         this.isReflected = true;\r\n        //         this.reflect();\r\n        //         return;\r\n        //     }\r\n        // }\r\n\r\n        if (other.myEntityType == EntityType.spine) {\r\n            if (this.myEntityType == EntityType.bullet_lemon) {\r\n                (<Spine>other).paralyze();\r\n                this.takeDamage(1);\r\n                return;\r\n            }\r\n        }\r\n\r\n        if (other.myEntityType == EntityType.cut_man) { // todo: check other bosses\r\n            if (this.myEntityType == EntityType.bullet_lemon) {\r\n                if ((<CutMan>other).isInvincible) {\r\n                    return;\r\n                }\r\n            }\r\n        }\r\n\r\n        other.takeDamage(this.contactDamage, Helper.directionTo(this, other));\r\n        this.takeDamage(1);\r\n    }\r\n\r\n    public takeDamage(damage: number): void {\r\n        if (this.health <= 0) {\r\n            return;\r\n        }\r\n\r\n        this.health -= damage;\r\n\r\n        if (this.health <= 0) {\r\n            this.health = 0;\r\n\r\n            if (this.isBreakable) {\r\n                this.createSmallRock();\r\n                this.createSmallRock();\r\n                this.createSmallRock();\r\n                this.createSmallRock();\r\n            }\r\n            this.destroyed.dispatch();\r\n            this.kill();\r\n        }\r\n    }\r\n\r\n    private createSmallRock(): void {\r\n        let throw_1: ThrowableObject = this.myWorld.entityManager.createThrowableObject(\r\n            this.owner, this.getPosition().x, this.getPosition().y, 16, 16, -8, -8,\r\n            this.smallSpritesheet, this.smallStartFrame, null, null, EntityType.throwable_object);\r\n        throw_1.contactDamage = 0;\r\n        throw_1.isBreakable = false;\r\n        throw_1.canCollideWithWalls = false;\r\n        let rand: number = Math.random();\r\n        let negOrPos: number = (Math.random() > 0.5) ? 1 : -1;\r\n        let clone: Phaser.Point = this.direction.clone();\r\n        clone.y = rand * negOrPos;\r\n        throw_1.setParameters(clone, this.speed + 20);\r\n    }\r\n\r\n    private reflect(): void {\r\n        let x: number = this.targetSpeed.x > 0 ? 135 : 45;\r\n        this.targetSpeed.x = 200 * Math.cos(MathUtil.sign(this.speed) * x * (Math.PI / 180));\r\n        this.targetSpeed.y = 200 * Math.sin(MathUtil.sign(this.speed) * -45 * (Math.PI / 180));\r\n    }\r\n}","import { World, Surface } from '../world'\r\nimport { EntityType, TagType } from '../konstants'\r\nimport { Entity } from '../entity'\r\nimport { State } from '../fsm/state'\r\nimport { StateMachine } from '../fsm/stateMachine'\r\n\r\nenum DropLiftAnimations {\r\n    idle = 'idle',\r\n    drop = 'drop',\r\n    return = 'return',\r\n}\r\n\r\nexport class DropLift extends Entity {\r\n    public horizontalSpeed: number;\r\n    public targetSpeed: Phaser.Point = new Phaser.Point(0, 0);\r\n    public fsm: StateMachine;\r\n    private surface: Surface;\r\n    private path: string[];\r\n    private start: Phaser.Point = new Phaser.Point();\r\n    private end: Phaser.Point = new Phaser.Point();\r\n    private gaps: Array<number> = new Array<number>();\r\n    private delay: number;\r\n\r\n    constructor(myWorld: World, tag: TagType, e: EntityType, game: Phaser.Game, x: number, y: number, key: string, frame: string) {\r\n        super(myWorld, tag, e, game, x, y, key, frame);\r\n\r\n        this.getPosition().x = x;\r\n        this.getPosition().y = y;\r\n        this.position.x = (this.getPosition().x + 0.5) | 0;\r\n        this.position.y = this.getPosition().y - 16;\r\n        this.smoothed = true;\r\n\r\n        this.fsm = new StateMachine();\r\n        this.fsm.addState(DropLiftState.idle, new DropLiftIdleState(this));\r\n        this.fsm.addState(DropLiftState.return, new DropLiftReturnState(this));\r\n        this.fsm.addState(DropLiftState.drop, new DropLiftDropState(this));\r\n\r\n        this.animations.add(DropLiftAnimations.idle, ['drop_lift_01'], 10, false, false);\r\n        this.animations.add(DropLiftAnimations.drop, ['drop_lift_01', 'drop_lift_02', 'drop_lift_03'], 20, false, false);\r\n        this.animations.add(DropLiftAnimations.return, ['drop_lift_03', 'drop_lift_02', 'drop_lift_01'], 40, false, false);\r\n        this.animations.play(DropLiftAnimations.idle);\r\n    }\r\n\r\n    public setPath(path: string[]) {\r\n        this.path = path;\r\n\r\n        for (let i = 0; i < this.path.length; i++) {\r\n            // start\r\n            if (i == 0 && this.path[i] == '2') {\r\n                this.start.x = this.getPosition().x;\r\n                this.start.y = this.getPosition().y;\r\n                // console.log('start: ' + this.start);\r\n                continue;\r\n            }\r\n\r\n            // gap\r\n            if (this.path[i] == '0') {\r\n                // console.log('gap start: ' + ((this.start.x + (16 * i)) - 16));\r\n                // console.log('gap end: ' + (this.start.x + (16 * i)));\r\n\r\n                this.gaps.push((this.start.x + (16 * i)) - 16); // start of the gap\r\n                this.gaps.push((this.start.x + (16 * i))); // end of the gap\r\n            }\r\n\r\n            // end\r\n            if (i == this.path.length - 1 && this.path[i] == '2') {\r\n                this.end.x = this.getPosition().x + (16 * i);\r\n                this.end.y = this.getPosition().y;\r\n                // console.log('end: ' + this.end);\r\n                continue;\r\n            }\r\n        }\r\n    }\r\n\r\n    public getGaps(): Array<number> {\r\n        return this.gaps;\r\n    }\r\n\r\n    public getSurface(): Surface {\r\n        return this.surface;\r\n    }\r\n\r\n    public setSurface(s: Surface): void {\r\n        this.surface = s;\r\n    }\r\n\r\n    public getStart(): Phaser.Point {\r\n        return this.start.clone();\r\n    }\r\n\r\n    public getEnd(): Phaser.Point {\r\n        return this.end.clone();\r\n    }\r\n\r\n    public getDelay(): number {\r\n        return this.delay;\r\n    }\r\n\r\n    public setDelay(d: number): void {\r\n        this.delay = d;\r\n    }\r\n\r\n    public manualUpdate(): void {\r\n        // this.pGraphicsDebug.clear();\r\n\r\n        if (!this.enabled) {\r\n            return;\r\n        }\r\n\r\n        if (!this.alive) {\r\n            return;\r\n        }\r\n\r\n        this.fsm.currentState.update();\r\n\r\n        this.velocity.x = this.targetSpeed.x;\r\n        this.velocity.y = this.targetSpeed.y;\r\n\r\n        this.getPosition().x += this.velocity.x * this.game.time.physicsElapsed;\r\n        this.getPosition().y += this.velocity.y * this.game.time.physicsElapsed;\r\n\r\n        this.position.x = (this.getPosition().x + 0.5) | 0;\r\n        this.position.y = this.getPosition().y - 16;\r\n\r\n        this.surface.p1.x += this.velocity.x * this.game.time.physicsElapsed;\r\n        this.surface.p2.x += this.velocity.x * this.game.time.physicsElapsed;\r\n\r\n        this.surface.targetSpeed.x = this.targetSpeed.x;\r\n        this.updateRect();\r\n    }\r\n\r\n    /**\r\n     */\r\n    public initialize(): void {\r\n        this.updateRect();\r\n        this.fsm.changeState(DropLiftState.idle);\r\n    }\r\n\r\n    public updateRect(): void {\r\n        this.hitbox.x = this.getPosition().x;\r\n        this.hitbox.y = this.getPosition().y - 16;\r\n    }\r\n}\r\n\r\nenum DropLiftState {\r\n    idle = 'idle',\r\n    drop = 'drop',\r\n    return = 'return',\r\n}\r\n\r\nclass DropLiftIdleState implements State {\r\n    public name: string = DropLiftState.idle;\r\n    public initialized: boolean;\r\n    public actor: DropLift;\r\n    private gaps: Array<number>;\r\n    private start: Phaser.Point;\r\n    private end: Phaser.Point;\r\n    private delayElapsedTime: number;\r\n    private delayEndTime: number;\r\n    private hasSpeedBeenSet:boolean=false;\r\n\r\n    constructor(actor: DropLift) {\r\n        this.actor = actor;\r\n    }\r\n\r\n    enter(): void {\r\n        // console.log(\"ENTER: \" + this.name);\r\n        this.initialized = true;\r\n        this.actor.animations.play(DropLiftAnimations.idle);\r\n        this.gaps = this.actor.getGaps();\r\n        this.start = this.actor.getStart();\r\n        this.end = this.actor.getEnd();\r\n        this.delayEndTime = this.actor.getDelay();\r\n    }\r\n\r\n    update(): void {\r\n        this.delayElapsedTime += this.actor.game.time.elapsedMS;\r\n\r\n        if (this.delayElapsedTime < this.delayEndTime) {\r\n            return;\r\n        }\r\n\r\n        if(!this.hasSpeedBeenSet){\r\n            this.hasSpeedBeenSet=true;\r\n            this.actor.targetSpeed.x = this.actor.horizontalSpeed;\r\n        }\r\n\r\n        for (let i = 0; i < this.gaps.length; i += 2) {\r\n            // console.log('check first: ' + this.gaps[i]);\r\n            // console.log('check second: ' + this.gaps[i + 1]);\r\n\r\n            if (this.actor.getPosition().x >= this.gaps[i] && this.actor.getPosition().x <= this.gaps[i + 1]) {\r\n                this.actor.fsm.changeState(DropLiftState.drop);\r\n                return;\r\n            }\r\n        }\r\n\r\n        if (this.actor.getPosition().x >= this.end.x - 8) {\r\n            this.actor.getPosition().x = this.end.x - 8;\r\n            this.actor.position.x = this.actor.getPosition().x;\r\n            this.actor.targetSpeed.x = -this.actor.horizontalSpeed;\r\n        }\r\n        else if (this.actor.getPosition().x <= this.start.x - 8) {\r\n            this.actor.getPosition().x = this.start.x - 8;\r\n            this.actor.position.x = this.actor.getPosition().x;\r\n            this.actor.targetSpeed.x = this.actor.horizontalSpeed;\r\n        }\r\n    }\r\n\r\n    exit(): void {\r\n        // console.log(\"EXIT: \" + this.name);\r\n        this.initialized = false;\r\n        this.delayEndTime = 0;\r\n        this.hasSpeedBeenSet=false;\r\n    }\r\n}\r\n\r\nclass DropLiftReturnState implements State {\r\n    public name: string = DropLiftState.return;\r\n    public initialized: boolean;\r\n    public actor: DropLift;\r\n    private gaps: Array<number>;\r\n    private start: Phaser.Point;\r\n    private end: Phaser.Point;\r\n\r\n    constructor(actor: DropLift) {\r\n        this.actor = actor;\r\n    }\r\n\r\n    enter(): void {\r\n        // console.log(\"ENTER: \" + this.name);\r\n        this.initialized = true;\r\n        this.actor.animations.play(DropLiftAnimations.return);\r\n        this.gaps = this.actor.getGaps();\r\n        this.actor.getSurface().collidable = true;\r\n        this.start = this.actor.getStart();\r\n        this.end = this.actor.getEnd();\r\n    }\r\n\r\n    update(): void {\r\n        for (let i = 0; i < this.gaps.length; i += 2) {\r\n            // console.log('check first: ' + this.gaps[i]);\r\n            // console.log('check second: ' + this.gaps[i + 1]);\r\n\r\n            if (this.actor.getPosition().x >= this.gaps[i] && this.actor.getPosition().x <= this.gaps[i + 1]) {\r\n                this.actor.fsm.changeState(DropLiftState.drop);\r\n                return;\r\n            }\r\n        }\r\n\r\n        if (this.actor.getPosition().x >= this.end.x - 8) {\r\n            this.actor.getPosition().x = this.end.x - 8;\r\n            this.actor.position.x = this.actor.getPosition().x;\r\n            this.actor.targetSpeed.x = -this.actor.horizontalSpeed;\r\n        }\r\n        else if (this.actor.getPosition().x <= this.start.x - 8) {\r\n            this.actor.getPosition().x = this.start.x - 8;\r\n            this.actor.position.x = this.actor.getPosition().x;\r\n            this.actor.targetSpeed.x = this.actor.horizontalSpeed;\r\n        }\r\n    }\r\n\r\n    exit(): void {\r\n        // console.log(\"EXIT: \" + this.name);\r\n        this.initialized = false;\r\n    }\r\n}\r\n\r\nclass DropLiftDropState implements State {\r\n\r\n    public name: string = DropLiftState.drop;\r\n    public initialized: boolean;\r\n    public actor: DropLift;\r\n    private gaps: Array<number>;\r\n    private start: Phaser.Point;\r\n    private end: Phaser.Point;\r\n\r\n    constructor(actor: DropLift) {\r\n        this.actor = actor;\r\n    }\r\n\r\n    enter(): void {\r\n        // console.log(\"ENTER: \" + this.name);\r\n        this.initialized = true;\r\n        this.actor.animations.play(DropLiftAnimations.drop);\r\n        this.gaps = this.actor.getGaps();\r\n        this.actor.getSurface().collidable = false;\r\n        this.start = this.actor.getStart();\r\n        this.end = this.actor.getEnd();\r\n    }\r\n\r\n    update(): void {\r\n        let isInBetween: boolean = false;\r\n\r\n        for (let i = 0; i < this.gaps.length; i += 2) {\r\n            // console.log('drop check first: ' + this.gaps[i]);\r\n            // console.log('drop check second: ' + this.gaps[i + 1]);\r\n\r\n            if (this.actor.getPosition().x >= this.gaps[i] && this.actor.getPosition().x <= this.gaps[i + 1]) {\r\n                isInBetween = true;\r\n            }\r\n        }\r\n\r\n        if (!isInBetween) {\r\n            this.actor.fsm.changeState(DropLiftState.return);\r\n            return;\r\n        }\r\n\r\n        if (this.actor.getPosition().x >= this.end.x - 8) {\r\n            this.actor.getPosition().x = this.end.x - 8;\r\n            this.actor.position.x = this.actor.getPosition().x;\r\n            this.actor.targetSpeed.x = -this.actor.horizontalSpeed;\r\n        }\r\n        else if (this.actor.getPosition().x <= this.start.x - 8) {\r\n            this.actor.getPosition().x = this.start.x - 8;\r\n            this.actor.position.x = this.actor.getPosition().x;\r\n            this.actor.targetSpeed.x = this.actor.horizontalSpeed;\r\n        }\r\n    }\r\n\r\n    exit(): void {\r\n        // console.log(\"EXIT: \" + this.name);\r\n        this.initialized = false;\r\n    }\r\n}","import { Enemy } from '../enemies/enemy'\r\nimport { World, Surface } from '../world'\r\nimport { EntityType, TagType, AudioName, WallContact } from '../konstants'\r\nimport { Player } from '../player'\r\nimport { Entity } from '../entity'\r\nimport { Helper } from '../helper'\r\nimport { MathUtil, KeyedCollection } from '../util/mathutil'\r\nimport { Bullet } from '../bullets/bullet'\r\nimport { Pick } from '../bullets/pick'\r\nimport { State } from '../fsm/state'\r\nimport { StateMachine } from '../fsm/stateMachine'\r\nimport { Vector2 } from '../sat2d/vector2'\r\nimport { Ray, RayType } from '../sat2d/ray'\r\nimport { RayIntersection } from '../sat2d/rayIntersection'\r\nimport { SAT2D } from '../sat2d/sat2d'\r\nimport { fixedTime, fixedTimeMS } from '../main'\r\n\r\nenum PicketManAnimationNames {\r\n    idle = 'idle',\r\n    throw_ready = 'throw_ready',\r\n    throw = 'throw',\r\n}\r\n\r\nexport class PicketMan extends Enemy {\r\n\r\n    public horizontalSpeed: number = 50;\r\n    public targetSpeed: Phaser.Point = new Phaser.Point(0, 0);\r\n    public isOnGround: boolean = true;\r\n    public useGravity: boolean = true;\r\n    public isJumping: boolean = true;\r\n    public isFalling: boolean = true;\r\n    public fsm: StateMachine;\r\n    private minJumpHeight: number = 1;\r\n    private maxJumpHeight: number = 44;\r\n    private timeToJumpApex = 0.35;\r\n    private gravityX: number = 0;\r\n    private gravityY: number = 0;\r\n    private maxJumpVelocity = 0;\r\n    private minJumpVelocity = 0;\r\n    private midGroundCheck: Ray;\r\n    private leftGroundCheck: Ray;\r\n    private rightGroundCheck: Ray;\r\n    private midCeilCheck: Ray;\r\n    private leftCeilCheck: Ray;\r\n    private rightCeilCheck: Ray;\r\n    private leftCheck1: Ray;\r\n    private leftCheck2: Ray;\r\n    private rightCheck1: Ray;\r\n    private rightCheck2: Ray;\r\n    private groundRays: Array<Ray> = new Array<Ray>();\r\n    private ceilRays: Array<Ray> = new Array<Ray>();\r\n    private leftRays: Array<Ray> = new Array<Ray>();\r\n    private rightRays: Array<Ray> = new Array<Ray>();\r\n    private skinWidth: number = 5;\r\n    private wallContact: WallContact;\r\n\r\n    constructor(myWorld: World, tag: TagType, e: EntityType, game: Phaser.Game, x: number, y: number, key: string, frame: string) {\r\n        super(myWorld, tag, e, game, x, y, key, frame);\r\n\r\n        this.fsm = new StateMachine();\r\n        this.fsm.addState(PicketManState.amazing_entrance, new PicketManAmazingEntranceState(this));\r\n        this.fsm.addState(PicketManState.idle, new PicketManIdleState(this));\r\n        this.fsm.addState(PicketManState.throwing, new PicketManThrowingState(this));\r\n        this.fsm.changeState(PicketManState.amazing_entrance);\r\n\r\n        this.getPosition().x = x + 8;\r\n        this.getPosition().y = y + 16;\r\n        this.position.x = this.getPosition().x;\r\n        this.position.y = this.getPosition().y;\r\n        this.smoothed = false;\r\n        this.anchor.setTo(0.5, 1);\r\n        this.health = 10;\r\n        this.maxHealth = 10;\r\n        this.isShielded = true;\r\n\r\n        this.animations.add(PicketManAnimationNames.idle, ['picket_man_01'], 10, false, false);\r\n        this.animations.add(PicketManAnimationNames.throw_ready, ['picket_man_02'], 10, false, false);\r\n        this.animations.add(PicketManAnimationNames.throw, ['picket_man_03'], 10, false, false);\r\n        this.animations.play(PicketManAnimationNames.idle);\r\n\r\n        this.hitbox = new Phaser.Rectangle(this.getPosition().x, this.getPosition().y, 16, 20);\r\n        this.hitboxOffset.x = -8;\r\n        this.hitboxOffset.y = -20;\r\n        this.updateRect();\r\n\r\n        this.midGroundCheck = new Ray(new Vector2(), new Vector2(), RayType.not_infinite);\r\n        this.leftGroundCheck = new Ray(new Vector2(), new Vector2(), RayType.not_infinite);\r\n        this.rightGroundCheck = new Ray(new Vector2(), new Vector2(), RayType.not_infinite);\r\n        this.midCeilCheck = new Ray(new Vector2(), new Vector2(), RayType.not_infinite);\r\n        this.leftCeilCheck = new Ray(new Vector2(), new Vector2(), RayType.not_infinite);\r\n        this.rightCeilCheck = new Ray(new Vector2(), new Vector2(), RayType.not_infinite);\r\n        this.leftCheck1 = new Ray(new Vector2(), new Vector2(), RayType.not_infinite);\r\n        this.leftCheck2 = new Ray(new Vector2(), new Vector2(), RayType.not_infinite);\r\n        this.rightCheck1 = new Ray(new Vector2(), new Vector2(), RayType.not_infinite);\r\n        this.rightCheck2 = new Ray(new Vector2(), new Vector2(), RayType.not_infinite);\r\n        this.groundRays.push(this.midGroundCheck);\r\n        this.groundRays.push(this.leftGroundCheck);\r\n        this.groundRays.push(this.rightGroundCheck);\r\n        this.ceilRays.push(this.midCeilCheck);\r\n        this.ceilRays.push(this.leftCeilCheck);\r\n        this.ceilRays.push(this.rightCeilCheck);\r\n        this.leftRays.push(this.leftCheck1);\r\n        this.leftRays.push(this.leftCheck2);\r\n        this.rightRays.push(this.rightCheck1);\r\n        this.rightRays.push(this.rightCheck2);\r\n\r\n        this.wallContact = { left: false, right: false, up: false, down: false };\r\n        this.calculateRegularJumpSettings();\r\n    }\r\n\r\n    public manualUpdate(): void {\r\n        // this.pGraphicsDebug.clear();\r\n\r\n        if (!this.alive) {\r\n            return;\r\n        }\r\n\r\n        this.frozen.update();\r\n        if (this.frozen.isFrozen) {\r\n            return;\r\n        }\r\n        \r\n        this.fsm.currentState.update();\r\n        \r\n        if (this.useGravity) {\r\n            this.targetSpeed.x += Math.abs(this.gravityX) * fixedTime;\r\n            this.targetSpeed.y += Math.abs(this.gravityY) * fixedTime;\r\n        }\r\n\r\n        this.velocity.x = this.targetSpeed.x;\r\n        this.velocity.y = this.targetSpeed.y;\r\n\r\n        if (this.isOnGround) {\r\n            this.targetSpeed.x *= 0.75;\r\n        }\r\n\r\n        this.getPosition().x += this.velocity.x * fixedTime;\r\n        this.getPosition().y += this.velocity.y * fixedTime;\r\n\r\n        this.position.x = (this.getPosition().x + 0.5) | 0;\r\n        this.position.y = this.getPosition().y;\r\n\r\n        this.updateRect();\r\n        this.castRays();\r\n    }\r\n\r\n    public checkSurfaceCollisions(surfaces: Array<Surface>): void {\r\n        this.wallContact.left = false;\r\n        this.wallContact.right = false;\r\n        this.wallContact.up = false;\r\n        this.wallContact.down = false;\r\n        this.isOnGround = false;\r\n\r\n        let into: RayIntersection;\r\n\r\n        for (let j = 0; j < surfaces.length; j++) {\r\n            let surface: Surface = surfaces[j];\r\n\r\n            if (!surface.collidable) {\r\n                continue;\r\n            }\r\n\r\n            let nx: number = surface.dir.y;\r\n            let ny: number = -surface.dir.x;\r\n\r\n            // Check floors\r\n            if (ny == -1 && this.getVelocity().y > 0) {\r\n                for (let k = 0; k < this.groundRays.length; k++) {\r\n                    let ray: Ray = this.groundRays[k];\r\n\r\n                    into = SAT2D.testRayVsRay(ray, new Ray(new Vector2(surface.p1.x, surface.p1.y),\r\n                        new Vector2(surface.p2.x, surface.p2.y), RayType.not_infinite), into);\r\n\r\n                    if (into != null) {\r\n\r\n                        let dx: number = into.ray1.end.x - into.ray1.start.x;\r\n                        let dy: number = into.ray1.end.y - into.ray1.start.y;\r\n                        let distance: number = Math.sqrt(dx * dx + dy * dy);\r\n                        let trueDistance: number = distance * into.u1;\r\n\r\n                        let contactX: number = into.ray1.start.x + into.ray1.dir.x * into.u1;\r\n                        let contactY: number = into.ray1.start.y + trueDistance;\r\n\r\n                        // this.pGraphicsDebug.drawCircle(contactX, contactY, 3);\r\n\r\n                        if (trueDistance > this.hitbox.height * 0.5) {\r\n                            continue;\r\n                        }\r\n\r\n                        this.getPosition().y = contactY;\r\n                        this.setVelocity(this.getVelocity().x, 0);\r\n                        this.targetSpeed.y = 0;\r\n                        this.isOnGround = true;\r\n                        this.isJumping = false;\r\n                        this.isFalling = false;\r\n                        this.wallContact.down = true;\r\n                        continue;\r\n                    }\r\n                }\r\n            }\r\n\r\n            // Check ceilings\r\n            if (ny == 1 && this.getVelocity().y < 0) {\r\n                for (let k = 0; k < this.ceilRays.length; k++) {\r\n                    let ray: Ray = this.ceilRays[k];\r\n\r\n                    into = SAT2D.testRayVsRay(ray, new Ray(new Vector2(surface.p1.x, surface.p1.y),\r\n                        new Vector2(surface.p2.x, surface.p2.y), RayType.not_infinite), into);\r\n\r\n                    if (into != null) {\r\n\r\n                        let dx: number = into.ray1.end.x - into.ray1.start.x;\r\n                        let dy: number = into.ray1.end.y - into.ray1.start.y;\r\n                        let distance: number = Math.sqrt(dx * dx + dy * dy);\r\n                        let trueDistance: number = distance * into.u1;\r\n\r\n                        let contactX: number = into.ray1.start.x + into.ray1.dir.x * into.u1;\r\n                        let contactY: number = into.ray1.start.y - trueDistance;\r\n\r\n                        // this.pGraphicsDebug.drawCircle(contactX, contactY, 3);\r\n\r\n                        if (trueDistance > this.hitbox.height * 0.5) {\r\n                            continue;\r\n                        }\r\n\r\n                        this.getPosition().y = contactY + this.hitbox.height;\r\n                        this.setVelocity(this.getVelocity().x, 0);\r\n                        this.targetSpeed.y = 0;\r\n                        this.isFalling = true;\r\n                        this.wallContact.up = true;\r\n                        continue;\r\n                    }\r\n                }\r\n            }\r\n\r\n            // Check right walls\r\n            if (nx == -1 && this.getVelocity().x > 0) {\r\n                for (let k = 0; k < this.rightRays.length; k++) {\r\n                    let ray: Ray = this.rightRays[k];\r\n\r\n                    into = SAT2D.testRayVsRay(ray, new Ray(new Vector2(surface.p1.x, surface.p1.y),\r\n                        new Vector2(surface.p2.x, surface.p2.y), RayType.not_infinite), into);\r\n\r\n                    if (into != null) {\r\n\r\n                        let dx: number = into.ray1.end.x - into.ray1.start.x;\r\n                        let dy: number = into.ray1.end.y - into.ray1.start.y;\r\n                        let distance: number = Math.sqrt(dx * dx + dy * dy);\r\n                        let trueDistance: number = distance * into.u1;\r\n\r\n                        let contactX: number = into.ray1.start.x + trueDistance;\r\n                        let contactY: number = into.ray1.start.y;\r\n\r\n                        // this.pGraphicsDebug.lineStyle(1, 0);\r\n                        // this.pGraphicsDebug.beginFill(0xff0000, 0.5);\r\n                        // this.pGraphicsDebug.drawCircle(contactX, contactY, 5);\r\n\r\n                        if (trueDistance > this.hitbox.width * 0.5) {\r\n                            continue;\r\n                        }\r\n\r\n                        this.getPosition().x = contactX - this.hitbox.width * 0.5;\r\n                        this.wallContact.right = true;\r\n                        continue;\r\n                    }\r\n                }\r\n            }\r\n\r\n            // Check left walls\r\n            if (nx == 1 && this.getVelocity().x < 0) {\r\n                for (let k = 0; k < this.leftRays.length; k++) {\r\n                    let ray: Ray = this.leftRays[k];\r\n\r\n                    into = SAT2D.testRayVsRay(ray, new Ray(new Vector2(surface.p1.x, surface.p1.y),\r\n                        new Vector2(surface.p2.x, surface.p2.y), RayType.not_infinite), into);\r\n\r\n                    if (into != null) {\r\n\r\n                        let dx: number = into.ray1.end.x - into.ray1.start.x;\r\n                        let dy: number = into.ray1.end.y - into.ray1.start.y;\r\n                        let distance: number = Math.sqrt(dx * dx + dy * dy);\r\n                        let trueDistance: number = distance * into.u1;\r\n\r\n                        let contactX: number = into.ray1.start.x - trueDistance;\r\n                        let contactY: number = into.ray1.start.y;\r\n\r\n                        // this.pGraphicsDebug.lineStyle(1, 0);\r\n                        // this.pGraphicsDebug.beginFill(0xff0000, 0.5);\r\n                        // this.pGraphicsDebug.drawCircle(contactX, contactY, 5);\r\n\r\n                        if (trueDistance > this.hitbox.width * 0.5) {\r\n                            continue;\r\n                        }\r\n\r\n                        this.getPosition().x = contactX + this.hitbox.width * 0.5;\r\n                        this.wallContact.left = true;\r\n                        continue;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    public takeDamage(damage: number): void {\r\n        if (this.isShielded) {\r\n            this.game.sound.play(AudioName.dink);\r\n            return;\r\n        }\r\n\r\n        if (this.health <= 0) {\r\n            return;\r\n        }\r\n\r\n        this.game.sound.play(AudioName.enemy_damage);\r\n        this.health -= damage;\r\n\r\n        if (this.health <= 0) {\r\n            this.health = 0;\r\n            this.myWorld.dropManager.dropPowerUp(this.getPosition().x + this.hitboxOffset.x, this.getPosition().y);\r\n            this.myWorld.createExplosionEffect(this.getPosition().x, this.getPosition().y - (<Phaser.Rectangle>this.hitbox).halfHeight);\r\n            this.kill();\r\n        }\r\n    }\r\n\r\n    public shoot(): void {\r\n        this.isShielded = false;\r\n\r\n        this.myWorld.entityManager.createPick(this,\r\n            this.getPosition().x, this.getPosition().y - 8,\r\n            this.myWorld.entityManager.player.getPosition().x,\r\n            this.myWorld.entityManager.player.getPosition().y - this.myWorld.entityManager.player.hitbox.halfHeight,\r\n            8, 8,\r\n            EntityType.picket_man, EntityType.picket_man_weapon);\r\n    }\r\n\r\n    private calculateRegularJumpSettings(): void {\r\n        this.gravityY = -(2 * this.maxJumpHeight) / Math.pow(this.timeToJumpApex, 2);\r\n        this.maxJumpVelocity = Math.abs(this.gravityY) * this.timeToJumpApex;\r\n        this.minJumpVelocity = Math.sqrt(2 * Math.abs(this.gravityY) * this.minJumpHeight);\r\n\r\n        // console.log('gravity: ' + this._gravity);\r\n        // console.log('maxJumpVelocity: ' + this._maxJumpVelocity);\r\n        // console.log('minJumpVelocity: ' + this._minJumpVelocity);\r\n    }\r\n\r\n    /**\r\n     * Using the current position moves the rays a frame even though the player may be running into a wall. By using\r\n     * previous position the rays don't move for that frame. They use the previous frame. Think about it, when the player\r\n     * is running into a wall, its 'bounds' should not move.\r\n     */\r\n    private castRays(): void {\r\n        let centerX: number = this.getPosition().x;\r\n        let centerY: number = this.getPosition().y - this.hitbox.height * 0.5;\r\n\r\n        if (this.wallContact.left || this.wallContact.right) {\r\n            centerX = this.previousPosition.x;\r\n        }\r\n\r\n        // cast ground rays\r\n        this.midGroundCheck.start = new Vector2(centerX, centerY);\r\n        this.midGroundCheck.end = new Vector2(centerX, centerY + this.hitbox.height * 0.5 + this.skinWidth);\r\n        this.leftGroundCheck.start = new Vector2(centerX - this.hitbox.width * 0.5 + 3, centerY);\r\n        this.leftGroundCheck.end = new Vector2(centerX - this.hitbox.width * 0.5 + 3, centerY + this.hitbox.height * 0.5 + this.skinWidth);\r\n        this.rightGroundCheck.start = new Vector2(centerX + this.hitbox.width * 0.5 - 3, centerY);\r\n        this.rightGroundCheck.end = new Vector2(centerX + this.hitbox.width * 0.5 - 3, centerY + this.hitbox.height * 0.5 + this.skinWidth);\r\n\r\n        // cast ceil rays\r\n        this.midCeilCheck.start = new Vector2(centerX, centerY);\r\n        this.midCeilCheck.end = new Vector2(centerX, centerY - this.hitbox.height * 0.5 - this.skinWidth);\r\n        this.leftCeilCheck.start = new Vector2(centerX - this.hitbox.width * 0.5 + 3, centerY);\r\n        this.leftCeilCheck.end = new Vector2(centerX - this.hitbox.width * 0.5 + 3, centerY - this.hitbox.height * 0.5 - this.skinWidth);\r\n        this.rightCeilCheck.start = new Vector2(centerX + this.hitbox.width * 0.5 - 3, centerY);\r\n        this.rightCeilCheck.end = new Vector2(centerX + this.hitbox.width * 0.5 - 3, centerY - this.hitbox.height * 0.5 - this.skinWidth);\r\n\r\n        // cast left rays\r\n        let offsetY: number = 8;\r\n        this.leftCheck1.start = new Vector2(centerX, centerY - offsetY);\r\n        this.leftCheck1.end = new Vector2(centerX - this.hitbox.width * 0.5 - this.skinWidth, centerY - offsetY);\r\n        this.leftCheck2.start = new Vector2(centerX, centerY + offsetY);\r\n        this.leftCheck2.end = new Vector2(centerX - this.hitbox.width * 0.5 - this.skinWidth, centerY + offsetY);\r\n\r\n        // cast right rays\r\n        offsetY = 8;\r\n        this.rightCheck1.start = new Vector2(centerX, centerY - offsetY);\r\n        this.rightCheck1.end = new Vector2(centerX + this.hitbox.width * 0.5 + this.skinWidth, centerY - offsetY);\r\n        this.rightCheck2.start = new Vector2(centerX, centerY + offsetY);\r\n        this.rightCheck2.end = new Vector2(centerX + this.hitbox.width * 0.5 + this.skinWidth, centerY + offsetY);\r\n    }\r\n}\r\n\r\nenum PicketManState {\r\n    amazing_entrance = 'amazing_entrance',\r\n    idle = 'idle',\r\n    throwing = 'throwing',\r\n}\r\n\r\nclass PicketManAmazingEntranceState implements State {\r\n\r\n    name: string;\r\n    initialized: boolean;\r\n    actor: PicketMan;\r\n\r\n    constructor(actor: PicketMan) {\r\n        this.actor = actor;\r\n    }\r\n\r\n    enter(): void {\r\n        console.log('PicketMan Enter: ' + this.name);\r\n        this.initialized = true;\r\n        this.actor.isShielded = true;\r\n        this.actor.animations.play(PicketManAnimationNames.idle);\r\n        this.actor.targetSpeed.x = -50;\r\n        this.actor.targetSpeed.y = -50;\r\n    }\r\n\r\n    update(): void {\r\n        if (this.actor.isOnGround) {\r\n            this.actor.fsm.changeState(PicketManState.idle);\r\n            return;\r\n        }\r\n    }\r\n\r\n    exit(): void {\r\n        console.log('PicketMan Exit: ' + this.name);\r\n        this.initialized = false;\r\n    }\r\n}\r\n\r\nclass PicketManIdleState implements State {\r\n\r\n    name: string;\r\n    initialized: boolean;\r\n    actor: PicketMan;\r\n    private elapsedTime: number = 0;\r\n    private endTime: number = 0;\r\n    private minIdleTime: number = 900;\r\n    private maxIdleTime: number = 1500;\r\n    private player: Player;\r\n\r\n    constructor(actor: PicketMan) {\r\n        this.actor = actor;\r\n    }\r\n\r\n    enter(): void {\r\n        // console.log('PicketMan Enter: ' + this.name);\r\n        this.initialized = true;\r\n        this.actor.animations.play(PicketManAnimationNames.idle);\r\n        this.actor.isShielded = true;\r\n        this.endTime = this.minIdleTime + Math.random() * (this.maxIdleTime - this.minIdleTime);\r\n        this.player = this.actor.myWorld.entityManager.player;\r\n    }\r\n\r\n    update(): void {\r\n        let direction = MathUtil.sign(Helper.directionTo(this.actor, this.actor.myWorld.entityManager.player).x);\r\n        this.actor.setFacingDirection(-direction);\r\n\r\n        this.elapsedTime += fixedTimeMS;\r\n\r\n        if (this.elapsedTime > this.endTime) {\r\n            this.actor.fsm.changeState(PicketManState.throwing);\r\n            return;\r\n        }\r\n    }\r\n\r\n    exit(): void {\r\n        // console.log('PicketMan Exit: ' + this.name);\r\n        this.initialized = false;\r\n        this.elapsedTime = 0;\r\n    }\r\n}\r\n\r\nclass PicketManThrowingState implements State {\r\n\r\n    name: string = PicketManState.throwing;\r\n    initialized: boolean;\r\n    actor: PicketMan;\r\n    private elapsedTime: number = 0;\r\n    private endTime: number = 300;\r\n    private hasThrown: boolean = false;\r\n    private shotCount: number;\r\n    private throwReadyElapsedTime: number = 0;\r\n    private throwReadyEndTime: number = 300;\r\n    private throwReady: boolean = false;\r\n\r\n    constructor(actor: PicketMan) {\r\n        this.actor = actor;\r\n    }\r\n\r\n    enter(): void {\r\n        // console.log('PicketMan Enter: ' + this.name);\r\n        this.initialized = true;\r\n        this.actor.isShielded = false;\r\n        this.actor.animations.play(PicketManAnimationNames.throw_ready);\r\n        this.shotCount = Math.floor(Math.random() * 7 + 3);\r\n    }\r\n\r\n    update(): void {\r\n        let direction = MathUtil.sign(Helper.directionTo(this.actor, this.actor.myWorld.entityManager.player).x);\r\n        this.actor.setFacingDirection(-direction);\r\n\r\n        if (!this.hasThrown) {\r\n            this.throwReadyElapsedTime += fixedTimeMS;\r\n\r\n            if (this.throwReadyElapsedTime >= this.throwReadyEndTime) {\r\n                this.hasThrown = true;\r\n                this.actor.animations.play(PicketManAnimationNames.throw);\r\n                this.throwReadyElapsedTime = 0;\r\n                this.shotCount--;\r\n                this.actor.shoot();\r\n            }\r\n        }\r\n        else {\r\n            this.elapsedTime += fixedTimeMS;\r\n\r\n            if (this.elapsedTime >= this.endTime) {\r\n                if (this.shotCount <= 0) {\r\n                    this.actor.fsm.changeState(PicketManState.idle);\r\n                    return;\r\n                }\r\n\r\n                this.hasThrown = false;\r\n                this.actor.animations.play(PicketManAnimationNames.throw_ready);\r\n                this.elapsedTime = 0;\r\n            }\r\n        }\r\n    }\r\n\r\n    exit(): void {\r\n        // console.log('PicketMan Exit: ' + this.name);\r\n        this.initialized = false;\r\n        this.elapsedTime = 0;\r\n        this.hasThrown = false;\r\n        this.throwReadyElapsedTime = 0;\r\n    }\r\n}","import { Enemy } from './enemy'\r\nimport { World, Surface } from '../world'\r\nimport { EntityType, TagType, AudioName, WallContact } from '../konstants'\r\nimport { Player } from '../player'\r\nimport { Entity } from '../entity'\r\nimport { Helper } from '../helper'\r\nimport { MathUtil, KeyedCollection } from '../util/mathutil'\r\nimport { Bullet } from '../bullets/bullet'\r\nimport { Pick } from '../bullets/pick'\r\nimport { State } from '../fsm/state'\r\nimport { StateMachine } from '../fsm/stateMachine'\r\nimport { Vector2 } from '../sat2d/vector2'\r\nimport { Ray, RayType } from '../sat2d/ray'\r\nimport { RayIntersection } from '../sat2d/rayIntersection'\r\nimport { SAT2D } from '../sat2d/sat2d'\r\nimport { fixedTime, fixedTimeMS } from '../main'\r\n\r\nenum CrazyRazyAnimationNames {\r\n    idle = 'idle',\r\n    walk = 'walk',\r\n    legs_walk_only = 'legs_walk_only',\r\n}\r\n\r\nexport class CrazyRazy extends Enemy {\r\n    public horizontalSpeed: number;\r\n    public targetSpeed: Phaser.Point = new Phaser.Point(0, 0);\r\n    public isOnGround: boolean = true;\r\n    public useGravity: boolean = true;\r\n    public isJumping: boolean = true;\r\n    public isFalling: boolean = true;\r\n    public fsm: StateMachine;\r\n    private minJumpHeight: number = 1;\r\n    private maxJumpHeight: number = 44;\r\n    private timeToJumpApex = 0.35;\r\n    private gravityX: number = 0;\r\n    private gravityY: number = 0;\r\n    private maxJumpVelocity = 0;\r\n    private minJumpVelocity = 0;\r\n    private midGroundCheck: Ray;\r\n    private leftGroundCheck: Ray;\r\n    private rightGroundCheck: Ray;\r\n    private midCeilCheck: Ray;\r\n    private leftCeilCheck: Ray;\r\n    private rightCeilCheck: Ray;\r\n    private leftCheck1: Ray;\r\n    private leftCheck2: Ray;\r\n    private rightCheck1: Ray;\r\n    private rightCheck2: Ray;\r\n    private groundRays: Array<Ray> = new Array<Ray>();\r\n    private ceilRays: Array<Ray> = new Array<Ray>();\r\n    private leftRays: Array<Ray> = new Array<Ray>();\r\n    private rightRays: Array<Ray> = new Array<Ray>();\r\n    private skinWidth: number = 5;\r\n    private wallContact: WallContact;\r\n\r\n    constructor(myWorld: World, tag: TagType, e: EntityType, game: Phaser.Game, x: number, y: number, key: string, frame: string) {\r\n        super(myWorld, tag, e, game, x, y, key, frame);\r\n\r\n        this.fsm = new StateMachine();\r\n        this.fsm.addState(CrazyRazyState.initial, new CrazyRazyInitialState(this));\r\n        this.fsm.addState(CrazyRazyState.legs_only, new CrazyRazyLegsOnlyState(this));\r\n        this.fsm.changeState(CrazyRazyState.initial);\r\n\r\n        this.getPosition().x = x;\r\n        this.getPosition().y = y + 16;\r\n        this.position.x = this.getPosition().x;\r\n        this.position.y = this.getPosition().y;\r\n        this.smoothed = false;\r\n        this.anchor.setTo(0.5, 1);\r\n        this.health = 10;\r\n        this.maxHealth = 10;\r\n        this.isShielded = false;\r\n\r\n        this.animations.add(CrazyRazyAnimationNames.idle, ['crazy_razy_walk_01'], 10, false, false);\r\n        this.animations.add(CrazyRazyAnimationNames.walk, ['crazy_razy_walk_01', 'crazy_razy_walk_02', 'crazy_razy_walk_03'], 10, true, false);\r\n        this.animations.play(CrazyRazyAnimationNames.walk);\r\n\r\n        this.hitbox = new Phaser.Rectangle(this.getPosition().x, this.getPosition().y, 16, 20);\r\n        this.hitboxOffset.x = -this.hitbox.halfWidth;\r\n        this.hitboxOffset.y = -this.hitbox.height;\r\n        this.updateRect();\r\n\r\n        this.midGroundCheck = new Ray(new Vector2(), new Vector2(), RayType.not_infinite);\r\n        this.leftGroundCheck = new Ray(new Vector2(), new Vector2(), RayType.not_infinite);\r\n        this.rightGroundCheck = new Ray(new Vector2(), new Vector2(), RayType.not_infinite);\r\n        this.midCeilCheck = new Ray(new Vector2(), new Vector2(), RayType.not_infinite);\r\n        this.leftCeilCheck = new Ray(new Vector2(), new Vector2(), RayType.not_infinite);\r\n        this.rightCeilCheck = new Ray(new Vector2(), new Vector2(), RayType.not_infinite);\r\n        this.leftCheck1 = new Ray(new Vector2(), new Vector2(), RayType.not_infinite);\r\n        this.leftCheck2 = new Ray(new Vector2(), new Vector2(), RayType.not_infinite);\r\n        this.rightCheck1 = new Ray(new Vector2(), new Vector2(), RayType.not_infinite);\r\n        this.rightCheck2 = new Ray(new Vector2(), new Vector2(), RayType.not_infinite);\r\n        this.groundRays.push(this.midGroundCheck);\r\n        this.groundRays.push(this.leftGroundCheck);\r\n        this.groundRays.push(this.rightGroundCheck);\r\n        this.ceilRays.push(this.midCeilCheck);\r\n        this.ceilRays.push(this.leftCeilCheck);\r\n        this.ceilRays.push(this.rightCeilCheck);\r\n        this.leftRays.push(this.leftCheck1);\r\n        this.leftRays.push(this.leftCheck2);\r\n        this.rightRays.push(this.rightCheck1);\r\n        this.rightRays.push(this.rightCheck2);\r\n\r\n        this.wallContact = { left: false, right: false, up: false, down: false };\r\n        this.calculateRegularJumpSettings();\r\n    }\r\n\r\n    public manualUpdate(): void {\r\n        // this.pGraphicsDebug.clear();\r\n\r\n        if (!this.alive) {\r\n            return;\r\n        }\r\n\r\n        this.frozen.update();\r\n        if (this.frozen.isFrozen) {\r\n            return;\r\n        }\r\n\r\n        this.fsm.currentState.update();\r\n\r\n        if (this.useGravity) {\r\n            this.targetSpeed.x += Math.abs(this.gravityX) * fixedTime;\r\n            this.targetSpeed.y += Math.abs(this.gravityY) * fixedTime;\r\n        }\r\n\r\n        this.velocity.x = this.targetSpeed.x;\r\n        this.velocity.y = this.targetSpeed.y;\r\n\r\n        this.getPosition().x += this.velocity.x * fixedTime;\r\n        this.getPosition().y += this.velocity.y * fixedTime;\r\n\r\n        this.position.x = (this.getPosition().x + 0.5) | 0;\r\n        this.position.y = this.getPosition().y;\r\n\r\n        this.updateRect();\r\n        this.castRays();\r\n    }\r\n\r\n    public killLegs(): void {\r\n        if (this.fsm.currentState.name != CrazyRazyState.legs_only) {\r\n            return;\r\n        }\r\n\r\n        (<CrazyRazyLegsOnlyState>this.fsm.currentState).killLegs();\r\n    }\r\n\r\n    public checkSurfaceCollisions(surfaces: Array<Surface>): void {\r\n        this.wallContact.left = false;\r\n        this.wallContact.right = false;\r\n        this.wallContact.up = false;\r\n        this.wallContact.down = false;\r\n        this.isOnGround = false;\r\n\r\n        let into: RayIntersection;\r\n\r\n        for (let j = 0; j < surfaces.length; j++) {\r\n            let surface: Surface = surfaces[j];\r\n\r\n            if (!surface.collidable) {\r\n                continue;\r\n            }\r\n\r\n            let nx: number = surface.dir.y;\r\n            let ny: number = -surface.dir.x;\r\n\r\n            // Check floors\r\n            if (ny == -1 && this.getVelocity().y > 0) {\r\n                for (let k = 0; k < this.groundRays.length; k++) {\r\n                    let ray: Ray = this.groundRays[k];\r\n\r\n                    into = SAT2D.testRayVsRay(ray, new Ray(new Vector2(surface.p1.x, surface.p1.y),\r\n                        new Vector2(surface.p2.x, surface.p2.y), RayType.not_infinite), into);\r\n\r\n                    if (into != null) {\r\n\r\n                        let dx: number = into.ray1.end.x - into.ray1.start.x;\r\n                        let dy: number = into.ray1.end.y - into.ray1.start.y;\r\n                        let distance: number = Math.sqrt(dx * dx + dy * dy);\r\n                        let trueDistance: number = distance * into.u1;\r\n\r\n                        let contactX: number = into.ray1.start.x + into.ray1.dir.x * into.u1;\r\n                        let contactY: number = into.ray1.start.y + trueDistance;\r\n\r\n                        // this.pGraphicsDebug.drawCircle(contactX, contactY, 3);\r\n\r\n                        if (trueDistance > this.hitbox.height * 0.5) {\r\n                            continue;\r\n                        }\r\n\r\n                        this.getPosition().y = contactY;\r\n                        this.setVelocity(this.getVelocity().x, 0);\r\n                        this.targetSpeed.y = 0;\r\n                        this.isOnGround = true;\r\n                        this.isJumping = false;\r\n                        this.isFalling = false;\r\n                        this.wallContact.down = true;\r\n                        continue;\r\n                    }\r\n                }\r\n            }\r\n\r\n            // Check ceilings\r\n            if (ny == 1 && this.getVelocity().y < 0) {\r\n                for (let k = 0; k < this.ceilRays.length; k++) {\r\n                    let ray: Ray = this.ceilRays[k];\r\n\r\n                    into = SAT2D.testRayVsRay(ray, new Ray(new Vector2(surface.p1.x, surface.p1.y),\r\n                        new Vector2(surface.p2.x, surface.p2.y), RayType.not_infinite), into);\r\n\r\n                    if (into != null) {\r\n\r\n                        let dx: number = into.ray1.end.x - into.ray1.start.x;\r\n                        let dy: number = into.ray1.end.y - into.ray1.start.y;\r\n                        let distance: number = Math.sqrt(dx * dx + dy * dy);\r\n                        let trueDistance: number = distance * into.u1;\r\n\r\n                        let contactX: number = into.ray1.start.x + into.ray1.dir.x * into.u1;\r\n                        let contactY: number = into.ray1.start.y - trueDistance;\r\n\r\n                        // this.pGraphicsDebug.drawCircle(contactX, contactY, 3);\r\n\r\n                        if (trueDistance > this.hitbox.height * 0.5) {\r\n                            continue;\r\n                        }\r\n\r\n                        this.getPosition().y = contactY + this.hitbox.height;\r\n                        this.setVelocity(this.getVelocity().x, 0);\r\n                        this.targetSpeed.y = 0;\r\n                        this.isFalling = true;\r\n                        this.wallContact.up = true;\r\n                        continue;\r\n                    }\r\n                }\r\n            }\r\n\r\n            // Check right walls\r\n            if (nx == -1 && this.getVelocity().x > 0) {\r\n                for (let k = 0; k < this.rightRays.length; k++) {\r\n                    let ray: Ray = this.rightRays[k];\r\n\r\n                    into = SAT2D.testRayVsRay(ray, new Ray(new Vector2(surface.p1.x, surface.p1.y),\r\n                        new Vector2(surface.p2.x, surface.p2.y), RayType.not_infinite), into);\r\n\r\n                    if (into != null) {\r\n\r\n                        let dx: number = into.ray1.end.x - into.ray1.start.x;\r\n                        let dy: number = into.ray1.end.y - into.ray1.start.y;\r\n                        let distance: number = Math.sqrt(dx * dx + dy * dy);\r\n                        let trueDistance: number = distance * into.u1;\r\n\r\n                        let contactX: number = into.ray1.start.x + trueDistance;\r\n                        let contactY: number = into.ray1.start.y;\r\n\r\n                        // this.pGraphicsDebug.lineStyle(1, 0);\r\n                        // this.pGraphicsDebug.beginFill(0xff0000, 0.5);\r\n                        // this.pGraphicsDebug.drawCircle(contactX, contactY, 5);\r\n\r\n                        if (trueDistance > this.hitbox.width * 0.5) {\r\n                            continue;\r\n                        }\r\n\r\n                        this.getPosition().x = contactX - this.hitbox.width * 0.5;\r\n                        this.wallContact.right = true;\r\n                        continue;\r\n                    }\r\n                }\r\n            }\r\n\r\n            // Check left walls\r\n            if (nx == 1 && this.getVelocity().x < 0) {\r\n                for (let k = 0; k < this.leftRays.length; k++) {\r\n                    let ray: Ray = this.leftRays[k];\r\n\r\n                    into = SAT2D.testRayVsRay(ray, new Ray(new Vector2(surface.p1.x, surface.p1.y),\r\n                        new Vector2(surface.p2.x, surface.p2.y), RayType.not_infinite), into);\r\n\r\n                    if (into != null) {\r\n\r\n                        let dx: number = into.ray1.end.x - into.ray1.start.x;\r\n                        let dy: number = into.ray1.end.y - into.ray1.start.y;\r\n                        let distance: number = Math.sqrt(dx * dx + dy * dy);\r\n                        let trueDistance: number = distance * into.u1;\r\n\r\n                        let contactX: number = into.ray1.start.x - trueDistance;\r\n                        let contactY: number = into.ray1.start.y;\r\n\r\n                        // this.pGraphicsDebug.lineStyle(1, 0);\r\n                        // this.pGraphicsDebug.beginFill(0xff0000, 0.5);\r\n                        // this.pGraphicsDebug.drawCircle(contactX, contactY, 5);\r\n\r\n                        if (trueDistance > this.hitbox.width * 0.5) {\r\n                            continue;\r\n                        }\r\n\r\n                        this.getPosition().x = contactX + this.hitbox.width * 0.5;\r\n                        this.wallContact.left = true;\r\n                        continue;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    public takeDamage(damage: number): void {\r\n        if (this.isShielded) {\r\n            this.game.sound.play(AudioName.dink);\r\n            return;\r\n        }\r\n\r\n        if (this.health <= 0) {\r\n            return;\r\n        }\r\n\r\n        this.game.sound.play(AudioName.enemy_damage);\r\n        this.health -= damage;\r\n\r\n        if (this.health <= 0) {\r\n            this.health = 0;\r\n            // this.myWorld.dropManager.dropPowerUp(this.getPosition().x + this.hitboxOffset.x, this.getPosition().y);\r\n            this.myWorld.createExplosionEffect(this.getPosition().x, this.getPosition().y - (<Phaser.Rectangle>this.hitbox).halfHeight);\r\n            this.kill();\r\n        }\r\n    }\r\n\r\n    public shoot(): void {\r\n        this.game.sound.play(AudioName.enemy_shoot);\r\n        this.isShielded = false;\r\n\r\n        let bullet: Bullet = this.myWorld.entityManager.createBitmapBullet(this, this.position.x - 4, this.position.y - 7, 6, 6, EntityType.bullet, EntityType.met_bullet);\r\n        bullet.horizontalSpeed = 170;\r\n        let cos: number = Math.cos(0 * (Math.PI / 180));\r\n        let sin: number = Math.sin(0 * (Math.PI / 180));\r\n        bullet.targetSpeed.x = bullet.horizontalSpeed * cos * -this.getFacingDirection();\r\n        bullet.targetSpeed.y = bullet.horizontalSpeed * sin * -this.getFacingDirection();\r\n    }\r\n\r\n    private calculateRegularJumpSettings(): void {\r\n        this.gravityY = -(2 * this.maxJumpHeight) / Math.pow(this.timeToJumpApex, 2);\r\n        this.maxJumpVelocity = Math.abs(this.gravityY) * this.timeToJumpApex;\r\n        this.minJumpVelocity = Math.sqrt(2 * Math.abs(this.gravityY) * this.minJumpHeight);\r\n\r\n        // console.log('gravity: ' + this._gravity);\r\n        // console.log('maxJumpVelocity: ' + this._maxJumpVelocity);\r\n        // console.log('minJumpVelocity: ' + this._minJumpVelocity);\r\n    }\r\n\r\n    /**\r\n     * Using the current position moves the rays a frame even though the player may be running into a wall. By using\r\n     * previous position the rays don't move for that frame. They use the previous frame. Think about it, when the player\r\n     * is running into a wall, its 'bounds' should not move.\r\n     */\r\n    private castRays(): void {\r\n        let centerX: number = this.getPosition().x;\r\n        let centerY: number = this.getPosition().y - this.hitbox.height * 0.5;\r\n\r\n        if (this.wallContact.left || this.wallContact.right) {\r\n            centerX = this.previousPosition.x;\r\n        }\r\n\r\n        // cast ground rays\r\n        this.midGroundCheck.start = new Vector2(centerX, centerY);\r\n        this.midGroundCheck.end = new Vector2(centerX, centerY + this.hitbox.height * 0.5 + this.skinWidth);\r\n        this.leftGroundCheck.start = new Vector2(centerX - this.hitbox.width * 0.5 + 3, centerY);\r\n        this.leftGroundCheck.end = new Vector2(centerX - this.hitbox.width * 0.5 + 3, centerY + this.hitbox.height * 0.5 + this.skinWidth);\r\n        this.rightGroundCheck.start = new Vector2(centerX + this.hitbox.width * 0.5 - 3, centerY);\r\n        this.rightGroundCheck.end = new Vector2(centerX + this.hitbox.width * 0.5 - 3, centerY + this.hitbox.height * 0.5 + this.skinWidth);\r\n\r\n        // cast ceil rays\r\n        this.midCeilCheck.start = new Vector2(centerX, centerY);\r\n        this.midCeilCheck.end = new Vector2(centerX, centerY - this.hitbox.height * 0.5 - this.skinWidth);\r\n        this.leftCeilCheck.start = new Vector2(centerX - this.hitbox.width * 0.5 + 3, centerY);\r\n        this.leftCeilCheck.end = new Vector2(centerX - this.hitbox.width * 0.5 + 3, centerY - this.hitbox.height * 0.5 - this.skinWidth);\r\n        this.rightCeilCheck.start = new Vector2(centerX + this.hitbox.width * 0.5 - 3, centerY);\r\n        this.rightCeilCheck.end = new Vector2(centerX + this.hitbox.width * 0.5 - 3, centerY - this.hitbox.height * 0.5 - this.skinWidth);\r\n\r\n        // cast left rays\r\n        let offsetY: number = 8;\r\n        this.leftCheck1.start = new Vector2(centerX, centerY - offsetY);\r\n        this.leftCheck1.end = new Vector2(centerX - this.hitbox.width * 0.5 - this.skinWidth, centerY - offsetY);\r\n        this.leftCheck2.start = new Vector2(centerX, centerY + offsetY);\r\n        this.leftCheck2.end = new Vector2(centerX - this.hitbox.width * 0.5 - this.skinWidth, centerY + offsetY);\r\n\r\n        // cast right rays\r\n        offsetY = 8;\r\n        this.rightCheck1.start = new Vector2(centerX, centerY - offsetY);\r\n        this.rightCheck1.end = new Vector2(centerX + this.hitbox.width * 0.5 + this.skinWidth, centerY - offsetY);\r\n        this.rightCheck2.start = new Vector2(centerX, centerY + offsetY);\r\n        this.rightCheck2.end = new Vector2(centerX + this.hitbox.width * 0.5 + this.skinWidth, centerY + offsetY);\r\n    }\r\n}\r\n\r\nenum CrazyRazyState {\r\n    initial = 'initial',\r\n    legs_only = 'legs_only',\r\n}\r\n\r\nclass CrazyRazyInitialState implements State {\r\n\r\n    name: string = CrazyRazyState.initial;\r\n    initialized: boolean;\r\n    actor: CrazyRazy;\r\n\r\n    constructor(actor: CrazyRazy) {\r\n        this.actor = actor;\r\n    }\r\n\r\n    enter(): void {\r\n        console.log('CrazyRazy Enter: ' + this.name);\r\n        this.initialized = true;\r\n        this.actor.animations.play(CrazyRazyAnimationNames.walk);\r\n        this.actor.targetSpeed.x = -50;\r\n    }\r\n\r\n    update(): void {\r\n        if (this.actor.myWorld.entityManager.player.x > this.actor.getPosition().x) {\r\n            this.actor.visible = false;\r\n            let entity: Entity = this.actor.myWorld.entityManager.createEntity(EntityType.crazy_razy_fly,\r\n                this.actor.getPosition().x, this.actor.getPosition().y, null);\r\n            this.actor.game.add.existing(entity);\r\n            this.actor.myWorld.entityManager.addEntity(entity);\r\n            this.actor.animations.stop();\r\n            this.actor.fsm.changeState(CrazyRazyState.legs_only);\r\n        }\r\n    }\r\n\r\n    exit(): void {\r\n        console.log('CrazyRazy Exit: ' + this.name);\r\n        this.initialized = false;\r\n    }\r\n}\r\n\r\nclass CrazyRazyLegsOnlyState implements State {\r\n\r\n    public name: string = CrazyRazyState.legs_only;\r\n    public initialized: boolean;\r\n    public actor: CrazyRazy;\r\n    private legs: Phaser.Sprite;\r\n    private elapsedTime: number = 0;\r\n    private endTime: number = 2500;\r\n\r\n    constructor(actor: CrazyRazy) {\r\n        this.actor = actor;\r\n    }\r\n\r\n    enter(): void {\r\n        console.log('CrazyRazy Enter: ' + this.name);\r\n        this.initialized = true;\r\n        this.legs = this.actor.game.add.sprite(this.actor.getPosition().x, this.actor.getPosition().y - 20,\r\n            EntityType.crazy_razy, 'crazy_razy_legs_01');\r\n        this.legs.anchor.setTo(0.5, 1);\r\n        this.legs.animations.add('walk', ['crazy_razy_legs_01', 'crazy_razy_legs_02', 'crazy_razy_legs_03'], 10, true);\r\n        this.legs.play('walk');\r\n    }\r\n\r\n    update(): void {\r\n        if (this.legs == undefined) {\r\n            return;\r\n        }\r\n\r\n        this.legs.position.x = (this.actor.getPosition().x + 0.5) | 0;\r\n        this.legs.position.y = this.actor.getPosition().y;\r\n\r\n        this.elapsedTime += fixedTimeMS;\r\n\r\n        if (this.elapsedTime >= this.endTime) {\r\n            this.legs.kill();\r\n            this.actor.takeDamage(9999);\r\n        }\r\n    }\r\n\r\n    exit(): void {\r\n        console.log('CrazyRazy Exit: ' + this.name);\r\n        this.initialized = false;\r\n        this.elapsedTime = 0;\r\n    }\r\n\r\n    public killLegs(): void {\r\n        if (this.legs != undefined) {\r\n            this.legs.kill();\r\n        }\r\n    }\r\n}","import { Enemy } from './enemy'\r\nimport { World, Surface } from '../world'\r\nimport { EntityType, TagType, AudioName, WallContact } from '../konstants'\r\nimport { Player } from '../player'\r\nimport { Entity } from '../entity'\r\nimport { Helper } from '../helper'\r\nimport { MathUtil, KeyedCollection } from '../util/mathutil'\r\nimport { Bullet } from '../bullets/bullet'\r\nimport { Pick } from '../bullets/pick'\r\nimport { State } from '../fsm/state'\r\nimport { StateMachine } from '../fsm/stateMachine'\r\nimport { Vector2 } from '../sat2d/vector2'\r\nimport { Ray, RayType } from '../sat2d/ray'\r\nimport { RayIntersection } from '../sat2d/rayIntersection'\r\nimport { SAT2D } from '../sat2d/sat2d'\r\nimport { fixedTime, fixedTimeMS } from '../main'\r\n\r\nenum CrazyRazyFlyAnimationNames {\r\n    idle = 'idle',\r\n    fly = 'fly',\r\n    fly_attack = 'fly_attack',\r\n}\r\n\r\nexport class CrazyRazyFly extends Enemy {\r\n    public horizontalSpeed: number;\r\n    public targetSpeed: Phaser.Point = new Phaser.Point(0, 0);\r\n    public fsm: StateMachine;\r\n    public targetPos: Phaser.Point = new Phaser.Point();\r\n    public afterTargetPos: Phaser.Point = new Phaser.Point();\r\n    public attackSpeed: number = 100; // todo: speed too high, blader overshoots the arrival position and jitters forever\r\n    public isFleeing: boolean = false;\r\n\r\n    constructor(myWorld: World, tag: TagType, e: EntityType, game: Phaser.Game, x: number, y: number, key: string, frame: string) {\r\n        super(myWorld, tag, e, game, x, y, key, frame);\r\n\r\n        this.fsm = new StateMachine();\r\n        this.fsm.addState(CrazyRazyFlyState.initial, new CrazyRazyFlyInitialState(this));\r\n        this.fsm.addState(CrazyRazyFlyState.move, new CrazyRazyFlyMoveState(this));\r\n        this.fsm.addState(CrazyRazyFlyState.attack, new CrazyRazyFlyAttackState(this));\r\n        this.fsm.addState(CrazyRazyFlyState.goBackUp, new CrazyRazyFlyGoBackUpkState(this));\r\n        this.fsm.addState(CrazyRazyFlyState.flee, new CrazyRazyFleeState(this));\r\n        this.fsm.changeState(CrazyRazyFlyState.initial);\r\n\r\n        this.getPosition().x = x;\r\n        this.getPosition().y = y;\r\n        this.position.x = this.getPosition().x;\r\n        this.position.y = this.getPosition().y;\r\n        this.smoothed = false;\r\n        this.anchor.setTo(0.5, 1);\r\n        this.health = 10;\r\n        this.maxHealth = 10;\r\n        this.isShielded = false;\r\n\r\n        this.animations.add(CrazyRazyFlyAnimationNames.fly, ['crazy_razy_fly'], 10, false, false);\r\n        this.animations.add(CrazyRazyFlyAnimationNames.fly_attack, ['crazy_razy_fly_attack_01', 'crazy_razy_fly_attack_02', 'crazy_razy_fly'], 7, false, false);\r\n        this.animations.play(CrazyRazyFlyAnimationNames.fly);\r\n\r\n        this.hitbox = new Phaser.Rectangle(this.getPosition().x, this.getPosition().y, 16, 12);\r\n        this.hitboxOffset.x = -8;\r\n        this.hitboxOffset.y = -24;\r\n        this.updateRect();\r\n    }\r\n\r\n    public manualUpdate(): void {\r\n        // this.pGraphicsDebug.clear();\r\n\r\n        if (!this.alive) {\r\n            return;\r\n        }\r\n\r\n        this.frozen.update();\r\n        if (this.frozen.isFrozen) {\r\n            return;\r\n        }\r\n\r\n        this.fsm.currentState.update();\r\n\r\n        // if (this.useGravity) {\r\n        //     this.targetSpeed.x += Math.abs(this.gravityX) * fixedTime;\r\n        //     this.targetSpeed.y += Math.abs(this.gravityY) * fixedTime;\r\n        // }\r\n\r\n        this.velocity.x = this.targetSpeed.x;\r\n        this.velocity.y = this.targetSpeed.y;\r\n\r\n        this.getPosition().x += this.velocity.x * fixedTime;\r\n        this.getPosition().y += this.velocity.y * fixedTime;\r\n\r\n        this.position.x = (this.getPosition().x + 0.5) | 0;\r\n        this.position.y = this.getPosition().y;\r\n\r\n        this.updateRect();\r\n    }\r\n\r\n    public flee(): void {\r\n        if (this.isFleeing) {\r\n            return;\r\n        }\r\n\r\n        this.isFleeing = true;\r\n        this.fsm.changeState(CrazyRazyFlyState.flee);\r\n    }\r\n\r\n    public takeDamage(damage: number): void {\r\n        if (this.isShielded) {\r\n            this.game.sound.play(AudioName.dink);\r\n            return;\r\n        }\r\n\r\n        if (this.health <= 0) {\r\n            return;\r\n        }\r\n\r\n        this.game.sound.play(AudioName.enemy_damage);\r\n        this.health -= damage;\r\n\r\n        if (this.health <= 0) {\r\n            this.health = 0;\r\n            this.myWorld.dropManager.dropPowerUp(this.getPosition().x + this.hitboxOffset.x, this.getPosition().y + this.hitboxOffset.y);\r\n            this.myWorld.createExplosionEffect(this.getPosition().x, this.getPosition().y - (<Phaser.Rectangle>this.hitbox).halfHeight);\r\n            this.kill();\r\n        }\r\n    }\r\n}\r\n\r\nenum CrazyRazyFlyState {\r\n    initial = 'initial',\r\n    attack = 'attack',\r\n    goBackUp = 'goBackUp',\r\n    move = 'move',\r\n    flee = 'flee',\r\n}\r\n\r\nclass CrazyRazyFlyInitialState implements State {\r\n\r\n    public name: string;\r\n    public initialized: boolean;\r\n    public actor: CrazyRazyFly;\r\n    private startX: number;\r\n    private startY: number;\r\n    private endX: number;\r\n    private endY: number;\r\n    private elapsedTime: number = 0;\r\n    private endTime: number = 400;\r\n\r\n    constructor(actor: CrazyRazyFly) {\r\n        this.actor = actor;\r\n    }\r\n\r\n    enter(): void {\r\n        console.log('CrazyRazyFlying Enter: ' + this.name);\r\n        this.initialized = true;\r\n        this.actor.animations.play(CrazyRazyFlyAnimationNames.idle);\r\n\r\n        this.startX = this.actor.position.x;\r\n        this.startY = this.actor.position.y;\r\n        this.endX = this.startX - 30;\r\n        this.endY = this.startY - 40;\r\n        this.actor.targetSpeed.x = 0;\r\n        this.actor.targetSpeed.y = 0;\r\n\r\n        // console.log(this.startX,this.startY);\r\n        // console.log(this.endX,this.endY);\r\n    }\r\n\r\n    update(): void {\r\n        this.elapsedTime += fixedTimeMS;\r\n        this.actor.getPosition().x = MathUtil.lerp(this.startX, this.endX, this.elapsedTime / this.endTime);\r\n        this.actor.getPosition().y = MathUtil.lerp(this.startY, this.endY, this.elapsedTime / this.endTime);\r\n\r\n        if (this.elapsedTime >= this.endTime) {\r\n            this.actor.fsm.changeState(CrazyRazyFlyState.move);\r\n            return;\r\n        }\r\n    }\r\n\r\n    exit(): void {\r\n        console.log('CrazyRazyFlying Exit: ' + this.name);\r\n        this.initialized = false;\r\n        this.elapsedTime = 0;\r\n    }\r\n}\r\n\r\nclass CrazyRazyFlyMoveState implements State {\r\n    public name: string = CrazyRazyFlyState.move;\r\n    public initialized: boolean;\r\n    public actor: CrazyRazyFly;\r\n    private startX: number = 0;\r\n    private startY: number = 0;\r\n    private endX: number = 0;\r\n    private endY: number = 0;\r\n    private player: Player;\r\n\r\n    constructor(actor: CrazyRazyFly) {\r\n        this.actor = actor;\r\n    }\r\n\r\n    enter(): void {\r\n        this.initialized = true;\r\n        this.player = this.actor.myWorld.entityManager.player;\r\n        let dirX: number = MathUtil.sign(this.player.getPosition().x - this.actor.getPosition().x);\r\n        this.actor.targetSpeed.x = this.actor.horizontalSpeed * dirX;\r\n        this.actor.setFacingDirection(-dirX);\r\n    }\r\n\r\n    update(): void {\r\n\r\n        if (Math.abs(this.actor.getPosition().x - this.player.getPosition().x) < 25) {\r\n            this.actor.targetPos.x = this.player.getPosition().x;\r\n            this.actor.targetPos.y = this.player.getPosition().y;\r\n            this.actor.afterTargetPos.x = this.player.getPosition().x + 25 * MathUtil.sign(this.actor.targetSpeed.x);\r\n            this.actor.afterTargetPos.y = this.actor.getPosition().y;\r\n            this.actor.fsm.changeState(CrazyRazyFlyState.attack);\r\n            return;\r\n        }\r\n    }\r\n\r\n    exit(): void {\r\n        this.initialized = false;\r\n    }\r\n}\r\n\r\nclass CrazyRazyFlyAttackState implements State {\r\n    public name: string = CrazyRazyFlyState.attack;\r\n    public initialized: boolean;\r\n    public actor: CrazyRazyFly;\r\n    private startX: number = 0;\r\n    private startY: number = 0;\r\n    private endX: number = 0;\r\n    private endY: number = 0;\r\n    private elapsedTime: number = 0;\r\n    private endTime: number = 200;\r\n\r\n    constructor(actor: CrazyRazyFly) {\r\n        this.actor = actor;\r\n    }\r\n\r\n    enter(): void {\r\n        this.initialized = true;\r\n        this.startX = this.actor.getPosition().x;\r\n        this.startY = this.actor.getPosition().y;\r\n        this.endX = this.actor.myWorld.entityManager.player.getPosition().x;\r\n        this.endY = this.actor.myWorld.entityManager.player.getPosition().y;\r\n        this.actor.targetSpeed.x = 0;\r\n        this.actor.targetSpeed.y = 0;\r\n        this.actor.animations.play(CrazyRazyFlyAnimationNames.fly_attack);\r\n    }\r\n\r\n    update(): void {\r\n        this.elapsedTime += fixedTimeMS;\r\n        this.actor.getPosition().x = MathUtil.lerp(this.startX, this.endX, this.elapsedTime / this.endTime);\r\n        this.actor.getPosition().y = MathUtil.lerp(this.startY, this.endY, this.elapsedTime / this.endTime);\r\n\r\n        if (this.elapsedTime >= this.endTime) {\r\n            this.actor.fsm.changeState(CrazyRazyFlyState.goBackUp);\r\n            return;\r\n        }\r\n    }\r\n\r\n    exit(): void {\r\n        this.initialized = false;\r\n        this.elapsedTime = 0;\r\n    }\r\n}\r\n\r\nclass CrazyRazyFlyGoBackUpkState implements State {\r\n    public name: string = CrazyRazyFlyState.goBackUp;\r\n    public initialized: boolean;\r\n    public actor: CrazyRazyFly;\r\n\r\n    constructor(actor: CrazyRazyFly) {\r\n        this.actor = actor;\r\n    }\r\n\r\n    enter(): void {\r\n        this.initialized = true;\r\n        this.actor.animations.play(CrazyRazyFlyAnimationNames.fly);\r\n    }\r\n\r\n    update(): void {\r\n        let dx: number = this.actor.afterTargetPos.x - this.actor.getPosition().x;\r\n        let dy: number = this.actor.afterTargetPos.y - this.actor.getPosition().y;\r\n        let distance = Math.sqrt(dx * dx + dy * dy);\r\n        let dirX: number = dx / distance;\r\n        let dirY: number = dy / distance;\r\n        this.actor.targetSpeed.x = dirX * this.actor.attackSpeed;\r\n        this.actor.targetSpeed.y = dirY * this.actor.attackSpeed;\r\n\r\n        if (distance < 1) {\r\n            this.actor.targetSpeed.x = 0;\r\n            this.actor.targetSpeed.y = 0;\r\n            this.actor.fsm.changeState(CrazyRazyFlyState.move);\r\n            return;\r\n        }\r\n\r\n    }\r\n\r\n    exit(): void {\r\n        this.initialized = false;\r\n    }\r\n}\r\n\r\nclass CrazyRazyFleeState implements State {\r\n\r\n    public name: string = CrazyRazyFlyState.flee;\r\n    public initialized: boolean;\r\n    public actor: CrazyRazyFly;\r\n    private startX: number = 0;\r\n    private startY: number = 0;\r\n    private endX: number = 0;\r\n    private endY: number = 0;\r\n    private elapsedTime: number = 0;\r\n    private endTime: number = 1000;\r\n\r\n    constructor(actor: CrazyRazyFly) {\r\n        this.actor = actor;\r\n    }\r\n\r\n    enter(): void {\r\n        console.log('CrazyRazyFly Enter: ' + this.name);\r\n        this.initialized = true;\r\n        this.startX = this.actor.getPosition().x;\r\n        this.startY = this.actor.getPosition().y;\r\n        this.endX = this.startX - 30;\r\n        this.endY = this.startY - 100;\r\n        this.actor.setFacingDirection(1);\r\n        this.actor.animations.play(CrazyRazyFlyAnimationNames.idle);\r\n    }\r\n\r\n    update(): void {\r\n        this.elapsedTime += fixedTimeMS;\r\n        this.actor.getPosition().x = MathUtil.lerp(this.startX, this.endX, this.elapsedTime / this.endTime);\r\n        this.actor.getPosition().y = MathUtil.lerp(this.startY, this.endY, this.elapsedTime / this.endTime);\r\n\r\n        if (this.elapsedTime >= this.endTime) {\r\n            this.actor.kill();\r\n            return;\r\n        }\r\n    }\r\n\r\n    exit(): void {\r\n        console.log('CrazyRazyFly Exit: ' + this.name);\r\n        this.initialized = false;\r\n        this.elapsedTime = 0;\r\n    }\r\n}","import { Enemy } from './enemy'\r\nimport { World, Surface } from '../world'\r\nimport { EntityType, TagType, AudioName, WallContact } from '../konstants'\r\nimport { Player } from '../player'\r\nimport { Helper } from '../helper'\r\nimport { MathUtil, KeyedCollection } from '../util/mathutil'\r\nimport { Bullet } from '../bullets/bullet'\r\nimport { State } from '../fsm/state'\r\nimport { StateMachine } from '../fsm/stateMachine'\r\nimport { fixedTime, fixedTimeMS } from '../main'\r\n\r\nenum FootHolderAnimationNames {\r\n    idle = 'idle',\r\n    active = 'active',\r\n}\r\n\r\nexport class FootHolder extends Enemy {\r\n    public horizontalSpeed: number;\r\n    public targetSpeed: Phaser.Point = new Phaser.Point(0, 0);\r\n    public fsm: StateMachine;\r\n    public originalX: number;\r\n    public originalY: number;\r\n    public goToPosX: number;\r\n    public goToPosY: number;\r\n    public dirX: number;\r\n    public dirY: number;\r\n    public leftPositions: Array<{ x: number, y: number }> = new Array<{ x: number, y: number }>();\r\n    public rightPositions: Array<{ x: number, y: number }> = new Array<{ x: number, y: number }>();\r\n    private surface: Surface;\r\n\r\n    constructor(myWorld: World, tag: TagType, e: EntityType, game: Phaser.Game, x: number, y: number, key: string, frame: string) {\r\n        super(myWorld, tag, e, game, x, y, key, frame);\r\n\r\n        this.originalX = x;\r\n        this.originalY = y;\r\n\r\n        this.fsm = new StateMachine();\r\n\r\n        this.getPosition().x = x;\r\n        this.getPosition().y = y;\r\n        this.position.x = (this.getPosition().x + 0.5) | 0;\r\n        this.position.y = this.getPosition().y;\r\n        this.smoothed = false;\r\n        this.anchor.setTo(0.5, 0.5);\r\n        this.health = 10;\r\n        this.maxHealth = 10;\r\n        this.isShielded = false;\r\n\r\n        this.animations.add(FootHolderAnimationNames.idle, ['foot_holder_01'], 10, false, false);\r\n        this.animations.add(FootHolderAnimationNames.active, ['foot_holder_01', 'foot_holder_02', 'foot_holder_03', 'foot_holder_04'], 5, true, false);\r\n\r\n        this.hitbox = new Phaser.Rectangle(this.getPosition().x, this.getPosition().y, 24, 12);\r\n        this.hitboxOffset.x = -this.hitbox.halfWidth;\r\n        this.hitboxOffset.y = -this.hitbox.halfHeight;\r\n        this.updateRect();\r\n    }\r\n\r\n    public manualUpdate(): void {\r\n        // this.pGraphicsDebug.clear();\r\n\r\n        if (!this.enabled) {\r\n            return;\r\n        }\r\n\r\n        if (!this.alive) {\r\n            return;\r\n        }\r\n\r\n        this.frozen.update();\r\n        if (this.frozen.isFrozen) {\r\n            return;\r\n        }\r\n\r\n        this.fsm.currentState.update();\r\n\r\n        this.velocity.x = this.targetSpeed.x;\r\n        this.velocity.y = this.targetSpeed.y;\r\n\r\n        this.getPosition().x += this.velocity.x * fixedTime;\r\n        this.getPosition().y += this.velocity.y * fixedTime;\r\n\r\n        this.position.x = (this.getPosition().x + 0.5) | 0;\r\n        this.position.y = this.getPosition().y;\r\n\r\n        this.surface.p1.x += this.velocity.x * fixedTime;\r\n        this.surface.p1.y += this.velocity.y * fixedTime;\r\n\r\n        this.surface.p2.x += this.velocity.x * fixedTime;\r\n        this.surface.p2.y += this.velocity.y * fixedTime;\r\n\r\n        this.surface.targetSpeed.x = this.targetSpeed.x;\r\n        this.surface.targetSpeed.y = this.targetSpeed.y;\r\n\r\n        this.updateRect();\r\n    }\r\n\r\n    public getRandomLeftPosition(): { x: number, y: number } {\r\n        return this.leftPositions[Math.floor(Math.random() * this.leftPositions.length)];\r\n    }\r\n\r\n    public getRandomRightPosition(): { x: number, y: number } {\r\n        return this.rightPositions[Math.floor(Math.random() * this.rightPositions.length)];\r\n    }\r\n\r\n    public initialize(): void {\r\n        this.fsm.addState(FootHolderState.initial, new FootHolderInitialState(this));\r\n        this.fsm.addState(FootHolderState.choose_position, new FootHolderChoosePositionState(this));\r\n        this.fsm.addState(FootHolderState.move, new FootHolderMoveState(this));\r\n        this.fsm.changeState(FootHolderState.initial);\r\n    }\r\n\r\n    public getSurface(): Surface {\r\n        return this.surface;\r\n    }\r\n\r\n    public setSurface(s: Surface): void {\r\n        this.surface = s;\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param left \r\n     * @param right \r\n     */\r\n    public setNumTiles(left: number, right: number): void {\r\n        let leftPos: number = this.originalX - (left * 16);\r\n        let rightPos: number = this.originalX + (right * 16);\r\n\r\n        this.leftPositions.push({ x: leftPos, y: this.originalY - 36 });\r\n        this.leftPositions.push({ x: leftPos, y: this.originalY - 24 });\r\n        this.leftPositions.push({ x: leftPos, y: this.originalY - 16 });\r\n        this.leftPositions.push({ x: leftPos, y: this.originalY - 8 });\r\n        this.leftPositions.push({ x: leftPos, y: this.originalY });\r\n        this.leftPositions.push({ x: leftPos, y: this.originalY + 8 });\r\n        this.leftPositions.push({ x: leftPos, y: this.originalY + 16 });\r\n        this.leftPositions.push({ x: leftPos, y: this.originalY + 24 });\r\n        this.leftPositions.push({ x: leftPos, y: this.originalY + 36 });\r\n        this.leftPositions.push({ x: leftPos, y: this.originalY + 48 });\r\n\r\n        this.rightPositions.push({ x: rightPos, y: this.originalY - 36 });\r\n        this.rightPositions.push({ x: rightPos, y: this.originalY - 24 });\r\n        this.rightPositions.push({ x: rightPos, y: this.originalY - 16 });\r\n        this.rightPositions.push({ x: rightPos, y: this.originalY - 8 });\r\n        this.rightPositions.push({ x: rightPos, y: this.originalY });\r\n        this.rightPositions.push({ x: rightPos, y: this.originalY + 8 });\r\n        this.rightPositions.push({ x: rightPos, y: this.originalY + 16 });\r\n        this.rightPositions.push({ x: rightPos, y: this.originalY + 24 });\r\n        this.rightPositions.push({ x: rightPos, y: this.originalY + 36 });\r\n        this.rightPositions.push({ x: rightPos, y: this.originalY + 48 });\r\n    }\r\n\r\n    public shoot(): void {\r\n        this.game.sound.play(AudioName.enemy_shoot);\r\n        this.isShielded = false;\r\n\r\n        let bullet: Bullet = this.myWorld.entityManager.createBitmapBullet(this, this.position.x - 4, this.position.y + 1, 6, 6, EntityType.bullet, EntityType.foot_holder_bullet);\r\n        bullet.horizontalSpeed = 170;\r\n        bullet.targetSpeed.x = bullet.horizontalSpeed * -1;\r\n\r\n        bullet = this.myWorld.entityManager.createBitmapBullet(this, this.position.x + 4, this.position.y + 1, 6, 6, EntityType.bullet, EntityType.foot_holder_bullet);\r\n        bullet.horizontalSpeed = 170;\r\n        bullet.targetSpeed.x = bullet.horizontalSpeed * 1;\r\n    }\r\n\r\n    public takeDamage(damage: number): void {\r\n        // if (this.isShielded) {\r\n        //     this.game.sound.play(AudioName.dink);\r\n        //     return;\r\n        // }\r\n\r\n        // if (this.health <= 0) {\r\n        //     return;\r\n        // }\r\n\r\n        // this.game.sound.play(AudioName.enemy_damage);\r\n        // this.health -= damage;\r\n\r\n        // if (this.health <= 0) {\r\n        //     this.health = 0;\r\n        //     this.myWorld.dropManager.dropPowerUp(this.getPosition().x + this.hitboxOffset.x, this.getPosition().y + this.hitboxOffset.y);\r\n        //     this.myWorld.createExplosionEffect(this.getPosition().x, this.getPosition().y - (<Phaser.Rectangle>this.hitbox).halfHeight);\r\n        //     this.kill();\r\n        // }\r\n    }\r\n}\r\n\r\nenum FootHolderState {\r\n    initial = 'initial',\r\n    choose_position = 'choose_position',\r\n    move = 'move',\r\n}\r\n\r\nclass FootHolderInitialState implements State {\r\n    public name: string = FootHolderState.initial;\r\n    public initialized: boolean;\r\n    public actor: FootHolder;\r\n\r\n    constructor(actor: FootHolder) {\r\n        this.actor = actor;\r\n    }\r\n\r\n    enter(): void {\r\n        // console.log('FootHolder Enter: ' + this.name);\r\n        this.initialized = true;\r\n\r\n        let leftPos = this.actor.getRandomLeftPosition();\r\n\r\n        this.actor.goToPosX = leftPos.x;\r\n        this.actor.goToPosY = leftPos.y;\r\n\r\n        let dist = Helper.distanceTo3(this.actor.goToPosX, this.actor.goToPosY, this.actor.getPosition().x, this.actor.getPosition().y);\r\n        this.actor.dirX = (this.actor.goToPosX - this.actor.getPosition().x) / dist;\r\n        this.actor.dirY = (this.actor.goToPosY - this.actor.getPosition().y) / dist;\r\n\r\n        this.actor.targetSpeed.x = this.actor.dirX * this.actor.horizontalSpeed;\r\n        this.actor.targetSpeed.y = this.actor.dirY * this.actor.horizontalSpeed;\r\n    }\r\n\r\n    update(): void {\r\n        this.actor.fsm.changeState(FootHolderState.move);\r\n    }\r\n\r\n    exit(): void {\r\n        // console.log('FootHolder Exit: ' + this.name);\r\n        this.initialized = false;\r\n    }\r\n}\r\n\r\nclass FootHolderChoosePositionState implements State {\r\n    public name: string = FootHolderState.choose_position;\r\n    public initialized: boolean;\r\n    public actor: FootHolder;\r\n\r\n    constructor(actor: FootHolder) {\r\n        this.actor = actor;\r\n    }\r\n\r\n    enter(): void {\r\n        // console.log('FootHolder Enter: ' + this.name);\r\n        this.initialized = true;\r\n\r\n        let pos = this.actor.dirX > 0 ? this.actor.getRandomLeftPosition() : this.actor.getRandomRightPosition();\r\n        this.actor.goToPosX = pos.x;\r\n        this.actor.goToPosY = pos.y;\r\n\r\n        let dist = Helper.distanceTo3(this.actor.goToPosX, this.actor.goToPosY, this.actor.getPosition().x, this.actor.getPosition().y);\r\n        this.actor.dirX = (this.actor.goToPosX - this.actor.getPosition().x) / dist;\r\n        this.actor.dirY = (this.actor.goToPosY - this.actor.getPosition().y) / dist;\r\n\r\n        this.actor.targetSpeed.x = this.actor.dirX * this.actor.horizontalSpeed;\r\n        this.actor.targetSpeed.y = this.actor.dirY * this.actor.horizontalSpeed;\r\n    }\r\n\r\n    update(): void {\r\n        this.actor.fsm.changeState(FootHolderState.move);\r\n    }\r\n\r\n    exit(): void {\r\n        // console.log('FootHolder Exit: ' + this.name);\r\n        this.initialized = false;\r\n    }\r\n}\r\n\r\nclass FootHolderMoveState implements State {\r\n    public name: string = FootHolderState.move;\r\n    public initialized: boolean;\r\n    public actor: FootHolder;\r\n    private endX: number = 0;\r\n    private endY: number = 0;\r\n    private shootElapsedTime: number = 0;\r\n    private shootEndTime: number = 3000;\r\n\r\n    constructor(actor: FootHolder) {\r\n        this.actor = actor;\r\n    }\r\n\r\n    enter(): void {\r\n        // console.log('FootHolder Enter: ' + this.name);\r\n        this.initialized = true;\r\n\r\n        this.actor.animations.play(FootHolderAnimationNames.active);\r\n        this.endX = this.actor.goToPosX;\r\n        this.endY = this.actor.goToPosY;\r\n    }\r\n\r\n    update(): void {\r\n        if (Helper.distanceTo3(this.actor.getPosition().x, this.actor.getPosition().y, this.endX, this.endY) < 2) {\r\n            this.actor.getPosition().x = this.endX;\r\n            this.actor.getPosition().y = this.endY;\r\n            this.actor.position.x = (this.actor.getPosition().x + 0.5) | 0;\r\n            this.actor.position.y = this.actor.getPosition().y;\r\n            this.actor.targetSpeed.x *= -1;\r\n            this.actor.targetSpeed.y *= -1;\r\n            this.actor.fsm.changeState(FootHolderState.choose_position);\r\n        }\r\n\r\n        this.shootElapsedTime += fixedTimeMS;\r\n\r\n        if (this.shootElapsedTime >= this.shootEndTime) {\r\n            this.shootElapsedTime = 0;\r\n            this.actor.shoot();\r\n        }\r\n    }\r\n\r\n    exit(): void {\r\n        // console.log('FootHolder Exit: ' + this.name);\r\n        this.initialized = false;\r\n    }\r\n}","import { Entity } from '../entity'\r\nimport { EntityType, TagType, Konstants, AudioName } from '../konstants'\r\nimport { Surface } from '../world'\r\nimport { Bullet } from '../bullets/bullet'\r\nimport { Player } from '../player'\r\nimport { SAT2D } from '../sat2d/sat2d'\r\nimport { Ray, RayType } from '../sat2d/ray'\r\nimport { RayIntersection } from '../sat2d/rayIntersection'\r\nimport { Polygon } from '../sat2d/polygon'\r\nimport { ShapeCollision } from '../sat2d/shapeCollision'\r\nimport { Vector2 } from '../sat2d/vector2'\r\nimport { Helper } from '../helper'\r\nimport { EntityManager } from '../managers/entityManager'\r\nimport { World } from '../world'\r\nimport { Wall } from '../world'\r\nimport { Spawner } from '../spawner'\r\nimport { Spike } from '../spike'\r\nimport { SniperJoe } from '../enemies/sniperJoe'\r\nimport { BombombShrapnel } from '../enemies/bombomb_shrapnel'\r\nimport { Spine } from '../enemies/spine'\r\nimport { OctopusBattery } from '../enemies/octopusBattery'\r\nimport { BigEye } from '../enemies/big_eye'\r\nimport { Flea } from '../enemies/flea'\r\nimport { PowerUp } from '../powerups/powerup'\r\nimport { VanishingBlock } from '../platforms/vanishingBlock'\r\nimport { ThrowableObject } from '../bullets/throwableObject'\r\nimport { DropLift } from '../platforms/drop_lift'\r\nimport { PicketMan } from '../enemies/picket_man'\r\nimport { CrazyRazy } from '../enemies/crazy_razy'\r\nimport { CrazyRazyFly } from '../enemies/crazy_razy_fly'\r\n\r\nexport class CollisionManager {\r\n\r\n    public createEntityFromSpawner: Phaser.Signal = new Phaser.Signal();\r\n    public stop: boolean = false;\r\n    private player: Player;\r\n    private em: EntityManager;\r\n    private graphicsDebug: Phaser.Graphics;\r\n    private tempRect01: Phaser.Rectangle = new Phaser.Rectangle(0, 0, 1, 1);\r\n    private tempRect02: Phaser.Rectangle = new Phaser.Rectangle(0, 0, 1, 1);\r\n    private tempBullet: Bullet;\r\n    private tempWall: Wall;\r\n    private tempEntity: Entity;\r\n    private tempSpawner: Spawner;\r\n    private tempHitbox_1: Phaser.Rectangle;\r\n    private tempHitbox_2: Phaser.Rectangle;\r\n    private tempPolyHitbox_1: Phaser.Polygon;\r\n    private tempPoly_1: Polygon;\r\n    private tempPoly_2: Polygon;\r\n    private tempInto: ShapeCollision;\r\n    private tempCameraRect: Phaser.Rectangle = new Phaser.Rectangle(0, 0, 1, 1);\r\n    private tempSpawnerRect: Phaser.Rectangle = new Phaser.Rectangle(0, 0, 1, 1);\r\n\r\n    constructor(private game: Phaser.Game, private myWorld: World) {\r\n        this.em = this.myWorld.entityManager;\r\n        this.graphicsDebug = this.game.add.graphics();\r\n        this.game.add.existing(this.graphicsDebug);\r\n    }\r\n\r\n    public update(): void {\r\n        this.graphicsDebug.clear();\r\n\r\n        if (this.stop) {\r\n            return;\r\n        }\r\n\r\n        for (let i = 0; i < this.em.entities.length; i++) {\r\n            this.tempEntity = this.em.entities[i];\r\n\r\n            // bullets\r\n            if (this.tempEntity.tag == TagType.bullet) {\r\n                this.tempBullet = <Bullet>this.em.entities[i];\r\n\r\n                if (this.tempBullet.getPosition().x > this.game.camera.x + this.game.camera.width) {\r\n                    this.tempBullet.destroyed.dispatch();\r\n                    this.tempBullet.kill();\r\n                }\r\n                else if (this.tempBullet.getPosition().x < this.game.camera.x) {\r\n                    this.tempBullet.destroyed.dispatch();\r\n                    this.tempBullet.kill();\r\n                }\r\n\r\n                if (!this.tempBullet.alive) {\r\n                    continue;\r\n                }\r\n\r\n                for (let j = 0; j < this.em.entities.length; j++) {\r\n                    if (!this.em.entities[j].alive) {\r\n                        continue;\r\n                    }\r\n\r\n                    if (this.em.entities[j].tag == TagType.player) {\r\n                        let player: Player = <Player>this.em.entities[j];\r\n\r\n                        if (player.isHurt) {\r\n                            continue;\r\n                        }\r\n\r\n                        if (player.isInvincible) {\r\n                            continue;\r\n                        }\r\n                    }\r\n\r\n                    this.tempBullet.checkCollideWith(this.em.entities[j]);\r\n                }\r\n            }\r\n            else if (this.tempEntity.tag == TagType.player) {\r\n                this.player = <Player>this.tempEntity;\r\n                this.player.checkSurfaceCollisions(this.em.surfaces);\r\n                this.player.checkLadderCollisions(this.em.ladders);\r\n\r\n                for (let j = 0; j < this.em.entities.length; j++) {\r\n\r\n                    if (this.player.isInvincible) {\r\n                        continue;\r\n                    }\r\n\r\n                    if (this.player.isHurt) {\r\n                        continue;\r\n                    }\r\n\r\n                    if (this.em.entities[j].tag == TagType.player) {\r\n                        continue;\r\n                    }\r\n\r\n                    if (this.em.entities[j].tag == TagType.bullet) {\r\n                        continue;\r\n                    }\r\n\r\n                    if (Helper.distanceTo(this.em.entities[j], this.player) > 50) {\r\n                        continue;\r\n                    }\r\n\r\n                    this.checkCollideWithEntity(this.em.entities[j]);\r\n                }\r\n            }\r\n            else if (this.em.entities[i].tag == TagType.power_up) {\r\n                if ((<PowerUp>this.em.entities[i]).isGlobal) {\r\n                    continue;\r\n                }\r\n\r\n                (<PowerUp>this.em.entities[i]).checkSurfaceCollisions(this.em.surfaces);\r\n            }\r\n\r\n            if (this.tempEntity.myEntityType == EntityType.sniper_joe) {\r\n                (<SniperJoe>this.tempEntity).checkSurfaceCollisions(this.em.surfaces);\r\n            }\r\n            else if (this.tempEntity.myEntityType == EntityType.big_eye) {\r\n                (<BigEye>this.tempEntity).checkSurfaceCollisions(this.em.surfaces);\r\n            }\r\n            else if (this.tempEntity.myEntityType == EntityType.flea) {\r\n                (<Flea>this.tempEntity).checkSurfaceCollisions(this.em.surfaces);\r\n            }\r\n            else if (this.em.entities[i].myEntityType == EntityType.cut_man ||\r\n                this.em.entities[i].myEntityType == EntityType.guts_man ||\r\n                this.em.entities[i].myEntityType == EntityType.ice_man ||\r\n                this.em.entities[i].myEntityType == EntityType.fire_man ||\r\n                this.em.entities[i].myEntityType == EntityType.bomb_man ||\r\n                this.em.entities[i].myEntityType == EntityType.elec_man) {\r\n                this.em.entities[i].checkSurfaceCollisions(this.em.surfaces);\r\n            }\r\n            else if (this.em.entities[i].myEntityType == EntityType.bombomb_shrapnel) {\r\n                this.checkShrapnellCollideWithSurface(<BombombShrapnel>this.em.entities[i]);\r\n            }\r\n            else if (this.em.entities[i].myEntityType == EntityType.spine) {\r\n                (<Spine>this.em.entities[i]).checkSurfaceCollisions(this.em.surfaces);\r\n            }\r\n            else if (this.em.entities[i].myEntityType == EntityType.octopus_battery) {\r\n                (<OctopusBattery>this.em.entities[i]).checkSurfaceCollisions(this.em.surfaces);\r\n            }\r\n            else if (this.em.entities[i].myEntityType == EntityType.throwable_object) {\r\n                this.checkThrowableAgainstWalls(<ThrowableObject>this.em.entities[i]);\r\n            }\r\n            else if (this.tempEntity.myEntityType == EntityType.picket_man) {\r\n                (<PicketMan>this.tempEntity).checkSurfaceCollisions(this.em.surfaces);\r\n            }\r\n            else if (this.tempEntity.myEntityType == EntityType.crazy_razy) {\r\n                (<CrazyRazy>this.tempEntity).checkSurfaceCollisions(this.em.surfaces);\r\n            }\r\n        }\r\n\r\n        // for (let i = 0; i < this.em.entities.length; i++) {\r\n        //     if (this.em.entities[i].myEntityType == EntityType.cut_man) {\r\n        //         this.em.entities[i].checkSurfaceCollisions(this.em.surfaces);\r\n        //     }\r\n        // }\r\n\r\n        // for (let i = 0; i < this.em.entities.length; i++) {\r\n        //     if (this.em.entities[i].tag == TagType.power_up) {\r\n        //         (<PowerUp>this.em.entities[i]).checkSurfaceCollisions(this.em.surfaces);\r\n        //     }\r\n        // }\r\n\r\n        // for (let i = 0; i < this.em.entities.length; i++) {\r\n        //     if (this.em.entities[i].myEntityType == EntityType.bombomb_shrapnel) {\r\n        //         this.checkShrapnellCollideWithSurface(<BombombShrapnel>this.em.entities[i]);\r\n        //     }\r\n        // }\r\n\r\n        // for (let i = 0; i < this.em.entities.length; i++) {\r\n        //     if (this.em.entities[i].myEntityType == EntityType.spine) {\r\n        //         (<Spine>this.em.entities[i]).checkSurfaceCollisions(this.em.surfaces);\r\n        //     }\r\n        // }\r\n\r\n        // for (let i = 0; i < this.em.entities.length; i++) {\r\n        //     if (this.em.entities[i].myEntityType == EntityType.octopus_battery) {\r\n        //         (<OctopusBattery>this.em.entities[i]).checkSurfaceCollisions(this.em.surfaces);\r\n        //     }\r\n        // }\r\n\r\n        this.checkVanishingBlockTriggers();\r\n        this.checkCrazyRazyTriggers();\r\n        this.checkDoors();\r\n        this.checkSpawners();\r\n        this.checkOffscreen(); // Check for when entities are off-screen and kill them.\r\n        this.checkDeathZones();\r\n    }\r\n\r\n    private checkCollideWithEntity(entity: Entity): void {\r\n        // Spike is a special case because I dun' fucked up nigga!\r\n        if (entity.myEntityType == EntityType.spike) {\r\n            this.checkCollisionWithSpike(entity);\r\n            return;\r\n        }\r\n\r\n        // Power ups is a special case because I dun' fucked up nigga!\r\n        if (entity.tag == TagType.power_up) {\r\n            this.checkPlayerCollideWithPowerUp(entity);\r\n            return;\r\n        }\r\n\r\n        // Vanishing Block & Moving Platform is a special case because I dun' fucked up nigga!\r\n        // Let foot_holder pass through because it is an enemy and moving platform...fucked up shit.\r\n        if (entity.tag == TagType.platform && entity.myEntityType != EntityType.foot_holder) {\r\n            return;\r\n        }\r\n\r\n        this.tempHitbox_1 = <Phaser.Rectangle>this.player.hitbox;\r\n        this.tempHitbox_2 = <Phaser.Rectangle>entity.hitbox;\r\n\r\n        let poly1: Polygon = new Polygon(this.tempHitbox_1.x, this.tempHitbox_1.y, new Array<Vector2>(\r\n            new Vector2(0, 0),\r\n            new Vector2(this.tempHitbox_1.width, 0),\r\n            new Vector2(this.tempHitbox_1.width, this.tempHitbox_1.height),\r\n            new Vector2(0, this.tempHitbox_1.height),\r\n        ));\r\n\r\n        // this.graphicsDebug.beginFill(0xff0000, 0.5);\r\n        // this.graphicsDebug.moveTo(poly1.getTransformedVertices()[0].x, poly1.getTransformedVertices()[0].y);\r\n        // this.graphicsDebug.lineTo(poly1.getTransformedVertices()[1].x, poly1.getTransformedVertices()[1].y);\r\n        // this.graphicsDebug.lineTo(poly1.getTransformedVertices()[2].x, poly1.getTransformedVertices()[2].y);\r\n        // this.graphicsDebug.lineTo(poly1.getTransformedVertices()[3].x, poly1.getTransformedVertices()[3].y);\r\n        // this.graphicsDebug.lineTo(poly1.getTransformedVertices()[0].x, poly1.getTransformedVertices()[0].y);\r\n\r\n        let poly2: Polygon = new Polygon(this.tempHitbox_2.x, this.tempHitbox_2.y, new Array<Vector2>(\r\n            new Vector2(0, 0),\r\n            new Vector2(this.tempHitbox_2.width, 0),\r\n            new Vector2(this.tempHitbox_2.width, this.tempHitbox_2.height),\r\n            new Vector2(0, this.tempHitbox_2.height),\r\n        ));\r\n\r\n        // this.graphicsDebug.beginFill(0xff0000, 0.5);\r\n        // this.graphicsDebug.moveTo(poly2.getTransformedVertices()[0].x, poly2.getTransformedVertices()[0].y);\r\n        // this.graphicsDebug.lineTo(poly2.getTransformedVertices()[1].x, poly2.getTransformedVertices()[1].y);\r\n        // this.graphicsDebug.lineTo(poly2.getTransformedVertices()[2].x, poly2.getTransformedVertices()[2].y);\r\n        // this.graphicsDebug.lineTo(poly2.getTransformedVertices()[3].x, poly2.getTransformedVertices()[3].y);\r\n        // this.graphicsDebug.lineTo(poly2.getTransformedVertices()[0].x, poly2.getTransformedVertices()[0].y);\r\n\r\n        this.tempInto = null;\r\n        this.tempInto = SAT2D.testPolygonVsPolygon(poly1, poly2, this.tempInto);\r\n\r\n        if (this.tempInto == null) {\r\n            return;\r\n        }\r\n\r\n        this.player.takeDamage(entity.contactDamage, Helper.directionTo(entity, this.player));\r\n    }\r\n\r\n    private checkCollisionWithSpike(entity: Entity): void {\r\n        this.tempHitbox_1 = <Phaser.Rectangle>this.player.hitbox;\r\n        this.tempPolyHitbox_1 = <Phaser.Polygon>entity.hitbox;\r\n\r\n        let poly1: Polygon = new Polygon(this.tempHitbox_1.x, this.tempHitbox_1.y, new Array<Vector2>(\r\n            new Vector2(0, 0),\r\n            new Vector2(this.tempHitbox_1.width, 0),\r\n            new Vector2(this.tempHitbox_1.width, this.tempHitbox_1.height),\r\n            new Vector2(0, this.tempHitbox_1.height),\r\n        ));\r\n\r\n        // this.graphicsDebug.beginFill(0xff0000, 0.5);\r\n        // this.graphicsDebug.moveTo(poly1.getTransformedVertices()[0].x, poly1.getTransformedVertices()[0].y)\r\n        // this.graphicsDebug.lineTo(poly1.getTransformedVertices()[1].x, poly1.getTransformedVertices()[1].y)\r\n        // this.graphicsDebug.lineTo(poly1.getTransformedVertices()[2].x, poly1.getTransformedVertices()[2].y)\r\n        // this.graphicsDebug.lineTo(poly1.getTransformedVertices()[3].x, poly1.getTransformedVertices()[3].y)\r\n        // this.graphicsDebug.lineTo(poly1.getTransformedVertices()[0].x, poly1.getTransformedVertices()[0].y)\r\n\r\n        let width: number = ((<Phaser.Point>this.tempPolyHitbox_1.points[1]).x - (<Phaser.Point>this.tempPolyHitbox_1.points[0]).x) * 0.5;\r\n        let poly2: Polygon = new Polygon(entity.getPosition().x, entity.getPosition().y, new Array<Vector2>());\r\n        poly2.vertices.push(new Vector2(-width, 0));\r\n        poly2.vertices.push(new Vector2(width, 0));\r\n        poly2.vertices.push(new Vector2(0, -16));\r\n        poly2.transformedVertices.push(new Vector2(entity.getPosition().x + poly2.vertices[0].x, entity.getPosition().y + poly2.vertices[0].y))\r\n        poly2.transformedVertices.push(new Vector2(entity.getPosition().x + poly2.vertices[1].x, entity.getPosition().y + poly2.vertices[1].y))\r\n        poly2.transformedVertices.push(new Vector2(entity.getPosition().x + poly2.vertices[2].x, entity.getPosition().y + poly2.vertices[2].y))\r\n\r\n        // this.graphicsDebug.beginFill(0xff0000, 0.5);\r\n        // this.graphicsDebug.moveTo(poly2.getTransformedVertices()[0].x, poly2.getTransformedVertices()[0].y);\r\n        // for (let k = 1; k < hitbox2.points.length; k++) {\r\n        //     this.graphicsDebug.lineTo(poly2.getTransformedVertices()[k].x, poly2.getTransformedVertices()[k].y);\r\n        // }\r\n        // this.graphicsDebug.lineTo(poly2.getTransformedVertices()[0].x, poly2.getTransformedVertices()[0].y);\r\n\r\n        this.tempInto = null;\r\n        this.tempInto = SAT2D.testPolygonVsPolygon(poly1, poly2, this.tempInto);\r\n\r\n        if (this.tempInto != null) {\r\n            this.player.takeDamage(entity.contactDamage, Helper.directionTo(entity, this.player));\r\n        }\r\n    }\r\n\r\n    private checkPlayerCollideWithPowerUp(entity: Entity): void {\r\n        if (entity.tag != TagType.power_up) {\r\n            return;\r\n        }\r\n\r\n        this.tempRect01 = <Phaser.Rectangle>entity.hitbox;\r\n\r\n        if (!this.em.player.hitbox.intersects(this.tempRect01)) {\r\n            return;\r\n        }\r\n\r\n        if (this.em.player.healthMeter.isGivingEnergy) {\r\n            return;\r\n        }\r\n\r\n        switch (entity.myEntityType) {\r\n            case EntityType.energy_pellet_small:\r\n            case EntityType.energy_pellet_large:\r\n                this.em.player.giveHealth((<PowerUp>entity).energyRestore);\r\n                this.em.player.healthMeter.restoreEnergy((<PowerUp>entity).energyRestore);\r\n                entity.kill();\r\n                break;\r\n\r\n            case EntityType.weapon_energy_small:\r\n            case EntityType.weapon_energy_large:\r\n                if (this.em.player.getCurrentWeapon().energyMeter != null && this.em.player.getCurrentWeapon().energyMeter.isGivingEnergy) {\r\n                    break;\r\n                }\r\n\r\n                this.em.player.getCurrentWeapon().restoreEnergy((<PowerUp>entity).energyRestore);\r\n                entity.kill();\r\n                break;\r\n\r\n            case EntityType.robot_crystal:\r\n                this.game.sound.play(AudioName.bonus_ball);\r\n                entity.kill();\r\n                break;\r\n\r\n            case EntityType.one_up:\r\n                this.game.sound.play(AudioName.bonus_ball);\r\n                entity.kill();\r\n                break;\r\n\r\n            case EntityType.cut_man_boss_item:\r\n            case EntityType.guts_man_boss_item:\r\n            case EntityType.ice_man_boss_item:\r\n            case EntityType.bomb_man_boss_item:\r\n            case EntityType.fire_man_boss_item:\r\n            case EntityType.elec_man_boss_item:\r\n                this.myWorld.pickedUpBossItem(entity.myEntityType);\r\n                entity.kill();\r\n                break;\r\n\r\n            default:\r\n                console.error('This entity type does not exist.');\r\n                break;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Check bomb shrapnel collisions with the walls. The walls are the surfaces. Walls represent the rectangle that the surfaces\r\n     * form. Shrapnels use rectangle intersection because it is more reliable than doing rectangle/line collision detection.\r\n     * @param entity \r\n     */\r\n    private checkShrapnellCollideWithSurface(entity: BombombShrapnel): void {\r\n        this.tempRect02 = <Phaser.Rectangle>entity.hitbox;\r\n\r\n        for (let i = 0; i < this.myWorld.walls.length; i++) {\r\n            this.tempWall = this.myWorld.walls[i];\r\n\r\n            if (!this.tempWall.top.collidable &&\r\n                !this.tempWall.bottom.collidable &&\r\n                !this.tempWall.left.collidable &&\r\n                !this.tempWall.right.collidable) {\r\n                // This must be a vanishing block that just vanished.\r\n                continue;\r\n            }\r\n\r\n            this.tempRect01.x = this.tempWall.top.p1.x;\r\n            this.tempRect01.y = this.tempWall.top.p1.y;\r\n            this.tempRect01.width = this.tempWall.top.p2.x - this.tempWall.top.p1.x;\r\n            this.tempRect01.height = this.tempWall.bottom.p2.y - this.tempWall.top.p2.y;\r\n\r\n            if (this.tempRect02.intersects(this.tempRect01, 0)) {\r\n                entity.takeDamage(1);\r\n                return;\r\n            }\r\n        }\r\n    }\r\n\r\n    private checkThrowableAgainstWalls(entity: ThrowableObject): void {\r\n        if (!entity.canCollideWithWalls) {\r\n            return;\r\n        }\r\n\r\n        this.tempHitbox_1 = <Phaser.Rectangle>entity.hitbox;\r\n\r\n        for (let i = 0; i < this.myWorld.walls.length; i++) {\r\n\r\n            if (Phaser.Rectangle.intersects(this.tempHitbox_1, this.myWorld.walls[i].rect)) {\r\n                entity.takeDamage(9999);\r\n                return;\r\n            }\r\n        }\r\n    }\r\n\r\n    private checkVanishingBlockTriggers(): void {\r\n        this.tempCameraRect.x = this.game.camera.x;\r\n        this.tempCameraRect.y = this.game.camera.y;\r\n        this.tempCameraRect.width = this.game.camera.width;\r\n        this.tempCameraRect.height = this.game.camera.height;\r\n\r\n        for (let i = 0; i < this.myWorld.vanishingBlockTriggers.length; i++) {\r\n            // console.log(this.myWorld.vanishingBlockTriggers[i].groupIndex);\r\n\r\n            if (this.tempCameraRect.intersects(this.myWorld.vanishingBlockTriggers[i].trigger, 0)) {\r\n                if (this.myWorld.vanishingBlockManager.isTriggerActive(this.myWorld.vanishingBlockTriggers[i].groupIndex)) {\r\n                    continue;\r\n                }\r\n\r\n                this.myWorld.vanishingBlockManager.activateTrigger(this.myWorld.vanishingBlockTriggers[i].groupIndex);\r\n            }\r\n            else {\r\n                if (!this.myWorld.vanishingBlockManager.isTriggerActive(this.myWorld.vanishingBlockTriggers[i].groupIndex)) {\r\n                    continue;\r\n                }\r\n\r\n                this.myWorld.vanishingBlockManager.deactivateTrigger(this.myWorld.vanishingBlockTriggers[i].groupIndex)\r\n            }\r\n        }\r\n    }\r\n\r\n    private checkCrazyRazyTriggers(): void {\r\n        for (let i = 0; i < this.myWorld.crazyRazyTriggers.length; i++) {\r\n            if (!this.myWorld.crazyRazyTriggers[i].intersects(this.player.hitbox, 0)) {\r\n                continue;\r\n            }\r\n\r\n            this.em.entities.filter((value: Entity) => {\r\n                return value.myEntityType == EntityType.crazy_razy_fly;\r\n            }).forEach((value: Entity) => {\r\n                (<CrazyRazyFly>value).flee();\r\n            });\r\n        }\r\n    }\r\n\r\n    private checkDoors(): void {\r\n        for (let i = 0; i < this.myWorld.doors.length; i++) {\r\n            if (this.myWorld.doors[i].secondDoorIntoBossRoom) {\r\n                continue;\r\n            }\r\n\r\n            if (this.myWorld.doors[i].isOpen) {\r\n                continue;\r\n            }\r\n\r\n            if (!Phaser.Rectangle.intersects(this.player.hitbox, this.myWorld.doors[i].hitbox)) {\r\n                continue;\r\n            }\r\n\r\n            this.myWorld.doors[i].isOpen = true;\r\n            this.myWorld.openDoor(this.myWorld.doors[i]);\r\n            break;\r\n        }\r\n    }\r\n\r\n    private checkSpawners(): void {\r\n        // Check for when enemy spawners are in view of the camera and spawn stuff.\r\n        for (let i = 0; i < this.myWorld.spawners.length; i++) {\r\n            this.tempSpawner = this.myWorld.spawners[i];\r\n\r\n            // Spawners that use distance to spawn their entities: super_cutter\r\n            if (this.tempSpawner.useDistanceCheck) {\r\n                let distX: number = Math.abs(this.player.getPosition().x - this.tempSpawner.x);\r\n                let distY: number = Math.abs(this.player.getPosition().y - this.tempSpawner.y);\r\n\r\n                if (distX > this.tempSpawner.withinPlayerDistanceX) {\r\n                    continue;\r\n                }\r\n\r\n                if (distY > this.tempSpawner.withinPlayerDistanceY) {\r\n                    continue;\r\n                }\r\n            }\r\n\r\n            this.tempCameraRect.x = this.game.camera.x;\r\n            this.tempCameraRect.y = this.game.camera.y;\r\n            this.tempCameraRect.width = this.game.camera.width;\r\n            this.tempCameraRect.height = this.game.camera.height;\r\n\r\n            let spawnerWidth: number = this.tempSpawner.width * 0.5;\r\n            let spawnerHeight: number = this.tempSpawner.height * 0.5;\r\n            this.tempSpawnerRect.x = this.tempSpawner.x;\r\n            this.tempSpawnerRect.y = this.tempSpawner.y;\r\n            this.tempSpawnerRect.width = spawnerWidth;\r\n            this.tempSpawnerRect.height = spawnerHeight;\r\n\r\n            if (this.tempCameraRect.intersects(this.tempSpawnerRect, 0)) {\r\n\r\n                if (this.tempSpawner.canLoop) {\r\n                    if (this.tempSpawner.entities.length > 0) {\r\n                        // If this spawner has entities that are NOT alive then remove them so we can spawn a new one.\r\n                        for (let j = this.tempSpawner.entities.length - 1; j >= 0; j--) {\r\n                            if (!this.tempSpawner.entities[j].alive) {\r\n                                this.tempSpawner.entities.splice(j, 1);\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    if (this.tempSpawner.entities.length >= this.tempSpawner.maxEntitiesAllowedPerLoop) {\r\n                        continue;\r\n                    }\r\n\r\n                    this.tempSpawner.loopElapsedTime += this.game.time.elapsedMS;\r\n\r\n                    if (this.tempSpawner.loopElapsedTime >= this.tempSpawner.loopEndTime) {\r\n                        this.tempSpawner.loopElapsedTime = 0;\r\n                        // Let the world know to create an entity.\r\n                        this.createEntityFromSpawner.dispatch(this.tempSpawner);\r\n                        this.tempSpawner.isSpawnerOnScreen = true;\r\n                        this.tempSpawner.entities.push(this.myWorld.entityManager.entities[this.myWorld.entityManager.entities.length - 1]);\r\n                    }\r\n                }\r\n                else {\r\n                    if (this.tempSpawner.isSpawnerOnScreen) {\r\n                        continue;\r\n                    }\r\n\r\n                    // Let the world know to create an entity.\r\n                    this.createEntityFromSpawner.dispatch(this.tempSpawner);\r\n                    this.tempSpawner.isSpawnerOnScreen = true;\r\n                    this.tempSpawner.entities.push(this.myWorld.entityManager.entities[this.myWorld.entityManager.entities.length - 1]);\r\n                }\r\n            }\r\n            else {\r\n                if (this.tempSpawner.isSpawnerOnScreen) {\r\n\r\n                    this.tempSpawner.isSpawnerOnScreen = false;\r\n\r\n                    if (this.tempSpawner.canLoop) {\r\n                        this.tempSpawner.loopElapsedTime = 0;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    private checkOffscreen(): void {\r\n        for (let i = this.em.entities.length - 1; i >= 0; i--) {\r\n            if (!this.em.entities[i].alive) {\r\n                continue;\r\n            }\r\n\r\n            this.tempEntity = this.em.entities[i];\r\n\r\n            // Allow drop_lift to always update.\r\n            if (this.tempEntity.myEntityType == EntityType.drop_lift) {\r\n                continue;\r\n            }\r\n\r\n            // Allow foot_holder to always update.\r\n            // if (this.tempEntity.myEntityType == EntityType.foot_holder) {\r\n            //     continue;\r\n            // }\r\n\r\n            if (this.tempEntity.tag == TagType.power_up) {\r\n                if ((<PowerUp>this.tempEntity).isGlobal) {\r\n                    continue;\r\n                }\r\n            }\r\n\r\n            // Don't remove/kill player. Player may sometimes spawn off-screen; camera will adjust.\r\n            if (this.tempEntity.myEntityType == EntityType.player) {\r\n                continue;\r\n            }\r\n\r\n            // Special off-screen handling done by Peng.\r\n            if (this.tempEntity.myEntityType == EntityType.peng) {\r\n                continue;\r\n            }\r\n\r\n            // Spikes don't need to be disabled.\r\n            if (this.tempEntity.myEntityType == EntityType.spike) {\r\n                continue;\r\n            }\r\n\r\n            // Special case for foot_holder.\r\n            if (this.tempEntity.myEntityType == EntityType.foot_holder) {\r\n                if (!(this.tempEntity.getPosition().x - Math.abs(this.tempEntity.width) * 0.5 < this.game.camera.x + this.game.camera.width &&\r\n                    this.tempEntity.getPosition().x + Math.abs(this.tempEntity.width) * 0.5 > this.game.camera.x &&\r\n                    this.tempEntity.getPosition().y - Math.abs(this.tempEntity.height) * 0.5 < this.game.camera.y + this.game.camera.height &&\r\n                    this.tempEntity.getPosition().y + Math.abs(this.tempEntity.height) * 0.5 > this.game.camera.y)) {\r\n                    this.tempEntity.disable();\r\n                }\r\n                else {\r\n                    if (this.tempEntity.enabled) {\r\n                        continue;\r\n                    }\r\n\r\n                    this.tempEntity.enable();\r\n                }\r\n\r\n                continue;\r\n            }\r\n\r\n            if (this.tempEntity.getPosition().x - Math.abs(this.tempEntity.width) * 0.5 > this.game.camera.x + this.game.camera.width) {\r\n                // console.log('off screeen 1: ' + this.tempEntity.myEntityType);\r\n                // console.log(entity.getPosition());\r\n                this.tempEntity.kill();\r\n            }\r\n            else if (this.tempEntity.getPosition().x + Math.abs(this.tempEntity.width) * 0.5 < this.game.camera.x) {\r\n                // console.log('off screeen 2:  ' + this.tempEntity.myEntityType);\r\n                // console.log(entity.getPosition());\r\n                this.tempEntity.kill();\r\n            }\r\n\r\n            // killer_bullet & peng are allowed to go off the vertical axis.\r\n            if (this.tempEntity.myEntityType == EntityType.watcher) {\r\n                if (this.tempEntity.getPosition().y - Math.abs(this.tempEntity.height) * 0.5 > this.game.camera.y + this.game.camera.height) {\r\n                    this.tempEntity.kill();\r\n                }\r\n                else if (this.tempEntity.getPosition().y + Math.abs(this.tempEntity.height) * 0.5 < this.game.camera.y) {\r\n                    this.tempEntity.kill();\r\n                }\r\n            }\r\n\r\n            if (this.tempEntity.myEntityType == EntityType.picket_man_weapon) {\r\n                if (this.tempEntity.getPosition().y - Math.abs(this.tempEntity.height) * 0.5 > this.game.camera.y + this.game.camera.height) {\r\n                    this.tempEntity.kill();\r\n                }\r\n                else if (this.tempEntity.getPosition().y + Math.abs(this.tempEntity.height) * 0.5 < this.game.camera.y) {\r\n                    this.tempEntity.kill();\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    private checkDeathZones(): void {\r\n        if ((this.player == null || this.player == undefined) || !this.player.alive) {\r\n            return;\r\n        }\r\n\r\n        for (let i = 0; i < this.myWorld.deathZones.length; i++) {\r\n            if (this.player.hitbox.intersects(this.myWorld.deathZones[i])) {\r\n                this.player.takeDamage(9999);\r\n            }\r\n        }\r\n    }\r\n}","import { SAT2D } from './sat2d'\r\nimport { Shape } from './shape'\r\nimport { Vector2 } from './vector2'\r\nimport { ShapeCollision } from './shapeCollision'\r\n\r\nexport class Polygon extends Shape {\r\n\r\n    transformedVertices: Array<Vector2> = new Array<Vector2>();\r\n    vertices: Array<Vector2> = new Array<Vector2>();\r\n\r\n    constructor(x: number, y: number, vertices: Array<Vector2>) {\r\n        super(x, y);\r\n\r\n        this.vertices = vertices; // The vertices of this shape\r\n        this.name = \"polygon(sides: \" + this.vertices.length + \")\";\r\n\r\n        for (var i = 0; i < this.vertices.length; i++) {\r\n            this.transformedVertices.push(new Vector2());\r\n        }\r\n    }\r\n\r\n    // test(shape, into) {\r\n    //     return shape.testPolygon(this, into, true);\r\n    // }\r\n\r\n    // testCircle(circle, into, flip) {\r\n    //     // return SAT2D.testCircleVsPolygon(circle, this, into, !flip);\r\n    // }\r\n\r\n    testPolygon(polygon: Polygon, into: ShapeCollision, flip = false) {\r\n        return SAT2D.testPolygonVsPolygon(this, polygon, into, flip);\r\n    }\r\n\r\n    // testRay(ray, into) {\r\n    //     // return SAT2D.testRayVsPolygon(ray, this, into);\r\n    // }\r\n\r\n    getTransformedVertices() {\r\n        for (var i = 0; i < this.vertices.length; i++) {\r\n            this.transformedVertices[i].x = this.vertices[i].x + this.position.x;\r\n            this.transformedVertices[i].y = this.vertices[i].y + this.position.y;\r\n        }\r\n\r\n        return this.transformedVertices;\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param {Number} x \r\n     * @param {Number} y \r\n     * @param {int} sides \r\n     * @param {Number} radius \r\n     * @return {Polygon}\r\n     */\r\n    static create(x: number, y: number, sides: number, radius: number = 100) {\r\n        if (sides < 3) {\r\n            throw 'Polygon - Needs at least 3 sides';\r\n        }\r\n\r\n        let rotation = (Math.PI * 2) / sides;\r\n        let angle;\r\n        let vector;\r\n        let vertices = [];\r\n\r\n        for (let i = 0; i < sides; i++) {\r\n            angle = (i * rotation) + ((Math.PI - rotation) * 0.5);\r\n            vector = new Vector2();\r\n            vector.x = Math.cos(angle) * radius;\r\n            vector.y = Math.sin(angle) * radius;\r\n            vertices.push(vector);\r\n        }\r\n\r\n        return new Polygon(x, y, vertices);\r\n    }\r\n\r\n    /**\r\n     * Helper generate a rectangle at x,y with a given width/height and centered state.\r\n     * Centered by default. Returns a ready made `Polygon` collision `Shape`\r\n     * @param {*} x \r\n     * @param {*} y \r\n     * @param {*} width \r\n     * @param {*} height \r\n     * @param {*} centered \r\n     */\r\n    static createRectangle(x: number, y: number, width: number, height: number, centered: boolean = false) {\r\n        var vertices = [];\r\n        if (centered) {\r\n            vertices.push(new Vector2(-width * 0.5, -height * 0.5));\r\n            vertices.push(new Vector2(width * 0.5, -height * 0.5));\r\n            vertices.push(new Vector2(width * 0.5, height * 0.5));\r\n            vertices.push(new Vector2(-width * 0.5, height * 0.5));\r\n        }\r\n        else {\r\n            vertices.push(new Vector2(0, 0));\r\n            vertices.push(new Vector2(width, 0));\r\n            vertices.push(new Vector2(width, height));\r\n            vertices.push(new Vector2(0, height));\r\n        }\r\n\r\n        return new Polygon(x, y, vertices);\r\n    }\r\n\r\n    static createSquare(x: number, y: number, width: number, centered: boolean = false) {\r\n        return Polygon.createRectangle(x, y, width, width, centered);\r\n    }\r\n\r\n    static createTriangle() {\r\n\r\n    }\r\n}","import { World } from '../world'\r\nimport { EntityType, TagType } from '../konstants'\r\nimport { MathUtil, KeyedCollection } from '../util/mathutil'\r\nimport { Entity } from '../entity'\r\nimport { Player } from '../player'\r\nimport { PowerUp } from '../powerups/powerup'\r\n\r\nexport class DropManager {\r\n\r\n    public weights: KeyedCollection<number>;\r\n    private sumOfWeights: number = 0;\r\n\r\n    constructor(private game: Phaser.Game, private myWorld: World) {\r\n        this.weights = new KeyedCollection();\r\n        this.weights.Add(EntityType.energy_pellet_small, 40);\r\n        this.weights.Add(EntityType.energy_pellet_large, 20);\r\n        this.weights.Add(EntityType.weapon_energy_small, 40);\r\n        this.weights.Add(EntityType.weapon_energy_large, 20);\r\n        this.weights.Add(EntityType.robot_crystal, 70);\r\n        this.weights.Add(EntityType.one_up, 3);\r\n        this.weights.Add('', 150); // No drop\r\n\r\n        for (let i = 0; i < this.weights.Count(); i++) {\r\n            this.sumOfWeights += this.weights.Item(this.weights.Keys()[i]);\r\n        }\r\n    }\r\n\r\n    public initialize(): void {\r\n        this.myWorld.entityManager.player.switchedWeapon.add(function (player: Player) {\r\n            // TODO: choose color\r\n            // switch (player.weaponIndex) {\r\n            //     case 0:\r\n            //         break;\r\n\r\n            //     case 1:\r\n            //         break;\r\n\r\n            //     default:\r\n            //         console.error(\"Player weapon index is incorrect!\");\r\n            //         break;\r\n            // }\r\n\r\n            this.myWorld.entityManager.entities.forEach((element: Entity) => {\r\n                if (element.tag == TagType.power_up) {\r\n                    // TODO: change power-up color based off the weapon\r\n                }\r\n            }, this);\r\n        }, this);\r\n    }\r\n\r\n    public dropPowerUp(x: number, y: number): void {\r\n        let itemToDrop: EntityType = <EntityType>MathUtil.weightedRandomKey(this.weights, this.sumOfWeights);\r\n\r\n        if (<string>itemToDrop == '') {\r\n            return;\r\n        }\r\n\r\n        let entity: Entity = this.myWorld.entityManager.createPowerUp(itemToDrop, x, y, false);\r\n        this.game.add.existing(entity);\r\n        this.myWorld.entityManager.addEntity(entity);\r\n        (<PowerUp>entity).useGravity = true;\r\n        (<PowerUp>entity).targetSpeed.y = -200;\r\n    }\r\n\r\n    public dropBossItem(itemToDrop: EntityType, x: number, y: number): void {\r\n        let entity: Entity = this.myWorld.entityManager.createEntity(itemToDrop, x, y);\r\n        this.myWorld.entityManager.addEntity(entity);\r\n        this.game.add.existing(entity);\r\n        (<PowerUp>entity).useGravity = true;\r\n    }\r\n\r\n    private chancePowerUpColors(): void {\r\n\r\n    }\r\n}","import { World } from '../world'\r\nimport { AudioName, SpriteSheets } from '../konstants'\r\nimport { Player } from '../player'\r\nimport { Weapon, WeaponType } from '../weapon/weapon'\r\nimport { BombManWeapon } from '../weapon/bombManWeapon'\r\nimport { ElecManWeapon } from '../weapon/elecManWeapon'\r\nimport { GutsManWeapon } from '../weapon/gutsManWeapon'\r\nimport { IceManWeapon } from '../weapon/iceManWeapon'\r\nimport { CutManWeapon } from '../weapon/cutManWeapon'\r\nimport { FireManWeapon } from '../weapon/fireManWeapon'\r\nimport { LemonWeapon } from '../weapon/lemonWeapon'\r\nimport { Meter, MeterDirection } from '../ui/meter'\r\nimport { SaveGame } from '../saveGame'\r\n\r\ninterface IInventoryItem {\r\n    unlocked: boolean;\r\n    weapon: Weapon;\r\n    horizontalMeter: Meter;\r\n    letter: Phaser.BitmapText;\r\n    letterShadow: Phaser.BitmapText;\r\n}\r\n\r\nexport class InventoryManager {\r\n    private static inventoryPos: Phaser.Point = new Phaser.Point(128, 24);\r\n    private static animationSpeed: number = 15;\r\n    public inventoryMenuFullyClosed: Phaser.Signal = new Phaser.Signal();\r\n    public selectedWeapon: Phaser.Signal = new Phaser.Signal();\r\n    public currIdx: number = 0;\r\n    public isOpen: boolean = false;\r\n    public weaponList: Array<Weapon> = new Array<Weapon>();\r\n    private topLeftStartPos: Phaser.Point = new Phaser.Point(128, 24);\r\n    private isAnimating: boolean = false;\r\n    private topLeft: Phaser.Sprite;\r\n    private topMiddle: Phaser.Sprite;\r\n    private topRight: Phaser.Sprite;\r\n    private middleLeft1: Phaser.Sprite;\r\n    private middle1: Phaser.Sprite;\r\n    private middleRight1: Phaser.Sprite;\r\n    private middleLeft2: Phaser.Sprite;\r\n    private middle2: Phaser.Sprite;\r\n    private middleRight2: Phaser.Sprite;\r\n    private middleLeft3: Phaser.Sprite;\r\n    private middle3: Phaser.Sprite;\r\n    private middleRight3: Phaser.Sprite;\r\n    private bottomLeft: Phaser.Sprite;\r\n    private bottomMiddle: Phaser.Sprite;\r\n    private bottomRight: Phaser.Sprite;\r\n    private backgroundSprites: Array<Phaser.Sprite> = new Array<Phaser.Sprite>();\r\n    private letterB: Phaser.BitmapText;\r\n    private letterBShadow: Phaser.BitmapText;\r\n    private letterE: Phaser.BitmapText;\r\n    private letterEShadow: Phaser.BitmapText;\r\n    private letterG: Phaser.BitmapText;\r\n    private letterGShadow: Phaser.BitmapText;\r\n    private letterI: Phaser.BitmapText;\r\n    private letterIShadow: Phaser.BitmapText;\r\n    private letterC: Phaser.BitmapText;\r\n    private letterCShadow: Phaser.BitmapText;\r\n    private letterF: Phaser.BitmapText;\r\n    private letterFShadow: Phaser.BitmapText;\r\n    private letterP: Phaser.BitmapText;\r\n    private letterPShadow: Phaser.BitmapText;\r\n    private oneUp: Phaser.Sprite;\r\n    private oneUpText: Phaser.BitmapText;\r\n    private oneUpTextShadow: Phaser.BitmapText;\r\n    private container: Phaser.Sprite;\r\n    private parts: Array<Phaser.Sprite> = new Array<Phaser.Sprite>();\r\n    private letters: Array<Phaser.BitmapText> = new Array<Phaser.BitmapText>();\r\n    private items: Array<IInventoryItem> = new Array<IInventoryItem>();\r\n    private currSelectedItem: IInventoryItem;\r\n    private animationTimer: Phaser.Timer;\r\n    private bitmapData: Phaser.BitmapData;\r\n    private image: Phaser.Image;\r\n    private cutManManColors: Array<number>;\r\n    private gutsManColors: Array<number>;\r\n    private iceManColors: Array<number>;\r\n    private bombManColors: Array<number>;\r\n    private fireManColors: Array<number>;\r\n    private elecManColors: Array<number>;\r\n    private repeatTimer: Phaser.Timer;\r\n\r\n    constructor(private myWorld: World) { }\r\n\r\n    public initialize(): void {\r\n        this.container = this.myWorld.game.add.sprite(0, 0);\r\n        this.myWorld.game.add.existing(this.container);\r\n\r\n        this.cutManManColors = [116, 116, 116, 188, 188, 188, 252, 252, 252];\r\n        this.gutsManColors = [124, 8, 0, 200, 76, 12, 252, 116, 96];\r\n        this.iceManColors = [0, 128, 136, 0, 68, 0, 252, 252, 252];\r\n        this.bombManColors = [124, 8, 0, 0, 148, 0, 128, 208, 16];\r\n        this.fireManColors = [164, 0, 0, 188, 188, 188, 252, 252, 252];\r\n        this.elecManColors = [200, 76, 12, 252, 152, 56, 252, 252, 252];\r\n\r\n        SaveGame.loadInventoryData();\r\n        this.createBitmapBackground();\r\n        this.changeColors(this.cutManManColors);\r\n        this.createLetters();\r\n        this.createWeapons();\r\n        this.createOneUp();\r\n        this.hideInventory();\r\n        this.populateSavedData();\r\n        this.unlockWeapon(WeaponType.MegaBuster);\r\n\r\n        this.currIdx = 6;\r\n        this.items[this.currIdx].letter.tint = 0xffffff;\r\n\r\n        // let nKey = this.myWorld.game.input.keyboard.addKey(Phaser.Keyboard.N);\r\n        // let mKey = this.myWorld.game.input.keyboard.addKey(Phaser.Keyboard.M);\r\n\r\n        // nKey.onDown.add(() => {\r\n        //     this.animateInventoryIn();\r\n        // }, this);\r\n\r\n        // mKey.onDown.add(() => {\r\n        //     this.animateInventoryOut();\r\n        // }, this);\r\n    }\r\n\r\n    private populateSavedData(): void {\r\n        if (SaveGame.HasCutManWeapon) {\r\n            this.unlockWeapon(WeaponType.CutMan);\r\n            this.weaponList.filter((value: Weapon) => {\r\n                return value.type == WeaponType.CutMan;\r\n            })[0].setEnergy(SaveGame.CutManWeaponEnergy);\r\n        }\r\n\r\n        if (SaveGame.HasGutsManWeapon) {\r\n            this.unlockWeapon(WeaponType.GutsMan);\r\n            this.weaponList.filter((value: Weapon) => {\r\n                return value.type == WeaponType.GutsMan;\r\n            })[0].setEnergy(SaveGame.GutsManWeaponEnergy);\r\n        }\r\n\r\n        if (SaveGame.HasIceManWeapon) {\r\n            this.unlockWeapon(WeaponType.IceMan);\r\n            this.weaponList.filter((value: Weapon) => {\r\n                return value.type == WeaponType.IceMan;\r\n            })[0].setEnergy(SaveGame.IceManWeaponEnergy);\r\n        }\r\n\r\n        if (SaveGame.HasBombManWeapon) {\r\n            this.unlockWeapon(WeaponType.BombMan);\r\n            this.weaponList.filter((value: Weapon) => {\r\n                return value.type == WeaponType.BombMan;\r\n            })[0].setEnergy(SaveGame.BombManWeaponEnergy);\r\n        }\r\n\r\n        if (SaveGame.HasFireManWeapon) {\r\n            this.unlockWeapon(WeaponType.FireMan);\r\n            this.weaponList.filter((value: Weapon) => {\r\n                return value.type == WeaponType.FireMan;\r\n            })[0].setEnergy(SaveGame.FireManWeaponEnergy);\r\n        }\r\n\r\n        if (SaveGame.HasElecManWeapon) {\r\n            this.unlockWeapon(WeaponType.ElecMan);\r\n            this.weaponList.filter((value: Weapon) => {\r\n                return value.type == WeaponType.ElecMan;\r\n            })[0].setEnergy(SaveGame.ElecManWeaponEnergy);\r\n        }\r\n    }\r\n\r\n    private createBitmapBackground(): void {\r\n        this.bitmapData = this.myWorld.game.make.bitmapData(96, 160);\r\n        this.image = this.myWorld.game.add.image(InventoryManager.inventoryPos.x, InventoryManager.inventoryPos.y, this.bitmapData);\r\n        this.image.fixedToCamera = true;\r\n\r\n        let testSprite: Phaser.Sprite = this.myWorld.game.make.sprite(0, 0, 'grayscale_menu', 'top_left');\r\n        this.bitmapData.copy(testSprite, 0, 0, 32, 32, 0, 0);\r\n\r\n        testSprite = this.myWorld.game.make.sprite(0, 0, 'grayscale_menu', 'top_middle');\r\n        this.bitmapData.copy(testSprite, 0, 0, 32, 32, 32, 0);\r\n\r\n        testSprite = this.myWorld.game.make.sprite(0, 0, 'grayscale_menu', 'top_right');\r\n        this.bitmapData.copy(testSprite, 0, 0, 32, 32, 64, 0);\r\n\r\n        testSprite = this.myWorld.game.make.sprite(0, 0, 'grayscale_menu', 'middle_left');\r\n        this.bitmapData.copy(testSprite, 0, 0, 32, 32, 0, 32);\r\n\r\n        testSprite = this.myWorld.game.make.sprite(0, 0, 'grayscale_menu', 'middle');\r\n        this.bitmapData.copy(testSprite, 0, 0, 32, 32, 32, 32);\r\n\r\n        testSprite = this.myWorld.game.make.sprite(0, 0, 'grayscale_menu', 'middle_right');\r\n        this.bitmapData.copy(testSprite, 0, 0, 32, 32, 64, 32);\r\n\r\n        testSprite = this.myWorld.game.make.sprite(0, 0, 'grayscale_menu', 'middle_left');\r\n        this.bitmapData.copy(testSprite, 0, 0, 32, 32, 0, 64);\r\n\r\n        testSprite = this.myWorld.game.make.sprite(0, 0, 'grayscale_menu', 'middle');\r\n        this.bitmapData.copy(testSprite, 0, 0, 32, 32, 32, 64);\r\n\r\n        testSprite = this.myWorld.game.make.sprite(0, 0, 'grayscale_menu', 'middle_right');\r\n        this.bitmapData.copy(testSprite, 0, 0, 32, 32, 64, 64);\r\n\r\n        testSprite = this.myWorld.game.make.sprite(0, 0, 'grayscale_menu', 'middle_left');\r\n        this.bitmapData.copy(testSprite, 0, 0, 32, 32, 0, 96);\r\n\r\n        testSprite = this.myWorld.game.make.sprite(0, 0, 'grayscale_menu', 'middle');\r\n        this.bitmapData.copy(testSprite, 0, 0, 32, 32, 32, 96);\r\n\r\n        testSprite = this.myWorld.game.make.sprite(0, 0, 'grayscale_menu', 'middle_right');\r\n        this.bitmapData.copy(testSprite, 0, 0, 32, 32, 64, 96);\r\n\r\n        testSprite = this.myWorld.game.make.sprite(0, 0, 'grayscale_menu', 'bottom_left');\r\n        this.bitmapData.copy(testSprite, 0, 0, 32, 32, 0, 128);\r\n\r\n        testSprite = this.myWorld.game.make.sprite(0, 0, 'grayscale_menu', 'bottom_middle');\r\n        this.bitmapData.copy(testSprite, 0, 0, 32, 32, 32, 128);\r\n\r\n        testSprite = this.myWorld.game.make.sprite(0, 0, 'grayscale_menu', 'bottom_right');\r\n        this.bitmapData.copy(testSprite, 0, 0, 32, 32, 64, 128);\r\n\r\n        this.bitmapData.update();\r\n\r\n        // Hide it immediatelly.\r\n        this.bitmapData.processPixelRGB((color: Phaser.ColorComponents, x: number, y: number) => {\r\n            color.a = 0;\r\n            return color;\r\n        }, this);\r\n    }\r\n\r\n    private changeColors(colors: Array<number>): void {\r\n        this.bitmapData.processPixelRGB((color: Phaser.ColorComponents, x: number, y: number) => {\r\n\r\n            // background\r\n            color.r = color.r == 106 ? colors[0] : color.r;\r\n            color.g = color.g == 106 ? colors[1] : color.g;\r\n            color.b = color.b == 106 ? colors[2] : color.b;\r\n\r\n            // shadow (border)\r\n            color.r = color.r == 154 ? colors[3] : color.r;\r\n            color.g = color.g == 154 ? colors[4] : color.g;\r\n            color.b = color.b == 154 ? colors[5] : color.b;\r\n\r\n            // color (border)\r\n            color.r = color.r == 252 ? colors[6] : color.r;\r\n            color.g = color.g == 252 ? colors[7] : color.g;\r\n            color.b = color.b == 252 ? colors[8] : color.b;\r\n\r\n            return color;\r\n        }, this);\r\n    }\r\n\r\n    private animateInventoryIn(): void {\r\n        this.repeatTimer = this.myWorld.game.time.create();\r\n\r\n        this.repeatTimer.onComplete.add(() => {\r\n            this.isAnimating = false;\r\n            this.displayInventoryContents();\r\n        }, this);\r\n\r\n        let row: number = 0;\r\n        let col: number = 0;\r\n\r\n        this.repeatTimer.repeat(InventoryManager.animationSpeed, 15, () => {\r\n            // console.log('row: ' + row)\r\n            // console.log('col: ' + col)\r\n            let xx: number = row * 32;\r\n            let yy: number = col * 32;\r\n            row++;\r\n            if (row >= 3) {\r\n                row = 0;\r\n                col++;\r\n            }\r\n\r\n            this.bitmapData.processPixelRGB((color: Phaser.ColorComponents, x: number, y: number) => {\r\n                let betweenX: boolean = x >= xx && x < (xx + 32);\r\n                let betweenY: boolean = y >= yy && y < (yy + 32);\r\n\r\n                if (!(betweenX && betweenY)) {\r\n                    return false;\r\n                }\r\n\r\n                color.a = 255;\r\n\r\n                return color;\r\n            }, this);\r\n        }, this);\r\n\r\n        this.repeatTimer.start();\r\n    }\r\n\r\n    private animateInventoryOut(): void {\r\n        this.repeatTimer = this.myWorld.game.time.create();\r\n\r\n        this.repeatTimer.onComplete.add(() => {\r\n            this.inventoryMenuFullyClosed.dispatch();\r\n            this.isAnimating = false;\r\n        }, this);\r\n\r\n        let row: number = 0;\r\n        let col: number = 0;\r\n\r\n        this.repeatTimer.repeat(InventoryManager.animationSpeed, 15, () => {\r\n            // console.log('row: ' + row)\r\n            // console.log('col: ' + col)\r\n            let xx: number = row * 32;\r\n            let yy: number = col * 32;\r\n            row++;\r\n            if (row >= 3) {\r\n                row = 0;\r\n                col++;\r\n            }\r\n\r\n            this.bitmapData.processPixelRGB((color: Phaser.ColorComponents, x: number, y: number) => {\r\n                let betweenX: boolean = x >= xx && x < (xx + 32);\r\n                let betweenY: boolean = y >= yy && y < (yy + 32);\r\n\r\n                if (!(betweenX && betweenY)) {\r\n                    return false;\r\n                }\r\n\r\n                color.a = 0;\r\n\r\n                return color;\r\n            }, this);\r\n        }, this);\r\n\r\n        this.repeatTimer.start();\r\n    }\r\n\r\n    private createLetters(): void {\r\n        this.letterBShadow = this.myWorld.game.add.bitmapText(142 + 1, 44 + 1, 'myfont', 'B', 8);\r\n        this.letterBShadow.smoothed = false;\r\n        this.letterBShadow.tint = 0;\r\n        this.letterBShadow.fixedToCamera = true;\r\n        this.myWorld.game.add.existing(this.letterBShadow);\r\n        this.letters.push(this.letterBShadow);\r\n        this.container.addChild(this.letterBShadow);\r\n\r\n        this.letterB = this.myWorld.game.add.bitmapText(142, 44, 'myfont', 'B', 8);\r\n        this.letterB.smoothed = false;\r\n        this.letterB.tint = 0x00e8d8;\r\n        this.letterB.fixedToCamera = true;\r\n        this.myWorld.game.add.existing(this.letterB);\r\n        this.letters.push(this.letterB);\r\n        this.container.addChild(this.letterB);\r\n\r\n        this.letterEShadow = this.myWorld.game.add.bitmapText(142 + 1, 60 + 1, 'myfont', 'E', 8);\r\n        this.letterEShadow.smoothed = false;\r\n        this.letterEShadow.tint = 0;\r\n        this.letterEShadow.fixedToCamera = true;\r\n        this.myWorld.game.add.existing(this.letterEShadow);\r\n        this.letters.push(this.letterEShadow);\r\n        this.container.addChild(this.letterEShadow);\r\n\r\n        this.letterE = this.myWorld.game.add.bitmapText(142, 60, 'myfont', 'E', 8);\r\n        this.letterE.smoothed = false;\r\n        this.letterE.tint = 0x00e8d8;\r\n        this.letterE.fixedToCamera = true;\r\n        this.myWorld.game.add.existing(this.letterE);\r\n        this.letters.push(this.letterE);\r\n        this.container.addChild(this.letterE);\r\n\r\n        this.letterGShadow = this.myWorld.game.add.bitmapText(142 + 1, 76 + 1, 'myfont', 'G', 8);\r\n        this.letterGShadow.smoothed = false;\r\n        this.letterGShadow.tint = 0;\r\n        this.letterGShadow.fixedToCamera = true;\r\n        this.myWorld.game.add.existing(this.letterGShadow);\r\n        this.letters.push(this.letterGShadow);\r\n        this.container.addChild(this.letterGShadow);\r\n\r\n        this.letterG = this.myWorld.game.add.bitmapText(142, 76, 'myfont', 'G', 8);\r\n        this.letterG.smoothed = false;\r\n        this.letterG.tint = 0x00e8d8;\r\n        this.letterG.fixedToCamera = true;\r\n        this.myWorld.game.add.existing(this.letterG);\r\n        this.letters.push(this.letterG);\r\n        this.container.addChild(this.letterG);\r\n\r\n        this.letterIShadow = this.myWorld.game.add.bitmapText(142 + 1, 92 + 1, 'myfont', 'I', 8);\r\n        this.letterIShadow.smoothed = false;\r\n        this.letterIShadow.tint = 0;\r\n        this.letterIShadow.fixedToCamera = true;\r\n        this.myWorld.game.add.existing(this.letterIShadow);\r\n        this.letters.push(this.letterIShadow);\r\n        this.container.addChild(this.letterIShadow);\r\n\r\n        this.letterI = this.myWorld.game.add.bitmapText(142, 92, 'myfont', 'I', 8);\r\n        this.letterI.smoothed = false;\r\n        this.letterI.tint = 0x00e8d8;\r\n        this.letterI.fixedToCamera = true;\r\n        this.myWorld.game.add.existing(this.letterI);\r\n        this.letters.push(this.letterI);\r\n        this.container.addChild(this.letterI);\r\n\r\n        this.letterCShadow = this.myWorld.game.add.bitmapText(142 + 1, 108 + 1, 'myfont', 'C', 8);\r\n        this.letterCShadow.smoothed = false;\r\n        this.letterCShadow.tint = 0;\r\n        this.letterCShadow.fixedToCamera = true;\r\n        this.myWorld.game.add.existing(this.letterCShadow);\r\n        this.letters.push(this.letterCShadow);\r\n        this.container.addChild(this.letterCShadow);\r\n\r\n        this.letterC = this.myWorld.game.add.bitmapText(142, 108, 'myfont', 'C', 8);\r\n        this.letterC.smoothed = false;\r\n        this.letterC.tint = 0x00e8d8;\r\n        this.letterC.fixedToCamera = true;\r\n        this.myWorld.game.add.existing(this.letterC);\r\n        this.letters.push(this.letterC);\r\n        this.container.addChild(this.letterC);\r\n\r\n        this.letterFShadow = this.myWorld.game.add.bitmapText(142 + 1, 124 + 1, 'myfont', 'F', 8);\r\n        this.letterFShadow.smoothed = false;\r\n        this.letterFShadow.tint = 0;\r\n        this.letterFShadow.fixedToCamera = true;\r\n        this.myWorld.game.add.existing(this.letterFShadow);\r\n        this.letters.push(this.letterFShadow);\r\n        this.container.addChild(this.letterFShadow);\r\n\r\n        this.letterF = this.myWorld.game.add.bitmapText(142, 124, 'myfont', 'F', 8);\r\n        this.letterF.smoothed = false;\r\n        this.letterF.tint = 0x00e8d8;\r\n        this.letterF.fixedToCamera = true;\r\n        this.myWorld.game.add.existing(this.letterF);\r\n        this.letters.push(this.letterF);\r\n        this.container.addChild(this.letterF);\r\n\r\n        this.letterPShadow = this.myWorld.game.add.bitmapText(142 + 1, 156 + 1, 'myfont', 'P', 8);\r\n        this.letterPShadow.smoothed = false;\r\n        this.letterPShadow.tint = 0;\r\n        this.letterPShadow.fixedToCamera = true;\r\n        this.myWorld.game.add.existing(this.letterPShadow);\r\n        this.letters.push(this.letterPShadow);\r\n        this.container.addChild(this.letterPShadow);\r\n\r\n        this.letterP = this.myWorld.game.add.bitmapText(142, 156, 'myfont', 'P', 8);\r\n        this.letterP.smoothed = false;\r\n        this.letterP.tint = 0x00e8d8;\r\n        this.letterP.fixedToCamera = true;\r\n        this.myWorld.game.add.existing(this.letterP);\r\n        this.letters.push(this.letterP);\r\n        this.container.addChild(this.letterP);\r\n    }\r\n\r\n    private createWeapons(): void {\r\n        this.weaponList.push(new BombManWeapon(this.myWorld));\r\n        this.weaponList.push(new ElecManWeapon(this.myWorld));\r\n        this.weaponList.push(new GutsManWeapon(this.myWorld));\r\n        this.weaponList.push(new IceManWeapon(this.myWorld));\r\n        this.weaponList.push(new CutManWeapon(this.myWorld));\r\n        this.weaponList.push(new FireManWeapon(this.myWorld));\r\n        this.weaponList.push(new LemonWeapon(this.myWorld));\r\n\r\n        for (let i: number = 0; i < this.weaponList.length; i++) {\r\n            if (this.weaponList[i].energyMeter == null) continue;\r\n            this.weaponList[i].energyMeter.hide();\r\n        }\r\n\r\n        let startY: number = 44;\r\n\r\n        // Bomb Man\r\n        let meter: Meter = new Meter(this.myWorld.game, 155, 44 + 16 * this.items.length, MeterDirection.Horizontal);\r\n        this.items.push({\r\n            weapon: this.weaponList[0], horizontalMeter: meter, unlocked: false, letter: this.letterB,\r\n            letterShadow: this.letterBShadow\r\n        });\r\n\r\n        // Elec Man\r\n        meter = new Meter(this.myWorld.game, 155, 44 + 16 * this.items.length, MeterDirection.Horizontal);\r\n        this.items.push({\r\n            weapon: this.weaponList[1], horizontalMeter: meter, unlocked: false, letter: this.letterE,\r\n            letterShadow: this.letterEShadow\r\n        });\r\n\r\n        // Guts Man\r\n        meter = new Meter(this.myWorld.game, 155, 44 + 16 * this.items.length, MeterDirection.Horizontal);\r\n        this.items.push({\r\n            weapon: this.weaponList[2], horizontalMeter: meter, unlocked: false, letter: this.letterG,\r\n            letterShadow: this.letterGShadow\r\n        });\r\n\r\n        // Ice Man\r\n        meter = new Meter(this.myWorld.game, 155, 44 + 16 * this.items.length, MeterDirection.Horizontal);\r\n        this.items.push({\r\n            weapon: this.weaponList[3], horizontalMeter: meter, unlocked: false, letter: this.letterI,\r\n            letterShadow: this.letterIShadow\r\n        });\r\n\r\n        // Cut Man\r\n        meter = new Meter(this.myWorld.game, 155, 44 + 16 * this.items.length, MeterDirection.Horizontal);\r\n        this.items.push({\r\n            weapon: this.weaponList[4], horizontalMeter: meter, unlocked: false, letter: this.letterC,\r\n            letterShadow: this.letterCShadow\r\n        });\r\n\r\n        // Fire Man\r\n        meter = new Meter(this.myWorld.game, 155, 44 + 16 * this.items.length, MeterDirection.Horizontal);\r\n        this.items.push({\r\n            weapon: this.weaponList[5], horizontalMeter: meter, unlocked: false, letter: this.letterF,\r\n            letterShadow: this.letterFShadow\r\n        });\r\n\r\n        // Mega Buster\r\n        this.items.push({\r\n            weapon: this.weaponList[6], horizontalMeter: null, unlocked: false, letter: this.letterP,\r\n            letterShadow: this.letterPShadow\r\n        });\r\n\r\n        this.items.forEach(element => {\r\n            element.unlocked = false;\r\n            element.letter.visible = false;\r\n            element.letterShadow.visible = false;\r\n            if (element.horizontalMeter != null) {\r\n                element.horizontalMeter.hide();\r\n            }\r\n        });\r\n    }\r\n\r\n    private createOneUp(): void {\r\n        this.oneUp = this.myWorld.game.add.sprite(168, 154, SpriteSheets.items, 'one_up');\r\n        this.oneUp.smoothed = false;\r\n        this.oneUp.fixedToCamera = true;\r\n        this.myWorld.game.add.existing(this.oneUp);\r\n        this.container.addChild(this.oneUp);\r\n\r\n        this.oneUpTextShadow = this.myWorld.game.add.bitmapText(187, 161, 'myfont', '=02', 8);\r\n        this.oneUpTextShadow.tint = 0x000000;\r\n        this.oneUpTextShadow.smoothed = false;\r\n        this.oneUpTextShadow.fixedToCamera = true;\r\n        this.myWorld.game.add.existing(this.oneUpTextShadow);\r\n        this.container.addChild(this.oneUpTextShadow);\r\n\r\n        this.oneUpText = this.myWorld.game.add.bitmapText(186, 160, 'myfont', '=02', 8);\r\n        this.oneUpText.tint = 0xffffff;\r\n        this.oneUpText.smoothed = false;\r\n        this.oneUpText.fixedToCamera = true;\r\n        this.myWorld.game.add.existing(this.oneUpText);\r\n        this.container.addChild(this.oneUpText);\r\n    }\r\n\r\n    public cycleInventoryUp(): void {\r\n        this.myWorld.game.sound.play(AudioName.menu_select);\r\n        let prevIdx = this.currIdx;\r\n        this.items[prevIdx].letter.tint = 0x00e8d8;\r\n\r\n        do {\r\n            this.currIdx--;\r\n            if (this.currIdx < 0) {\r\n                this.currIdx = this.items.length - 1;\r\n            }\r\n        }\r\n        while (!this.items[this.currIdx].unlocked);\r\n\r\n        this.items[this.currIdx].letter.tint = 0xffffff;\r\n        this.items[prevIdx].letter.visible = true;\r\n        this.items[prevIdx].letterShadow.visible = true;\r\n        this.currSelectedItem = this.items[this.currIdx];\r\n\r\n        console.log('curr weapon: ' + this.currSelectedItem.weapon.type);\r\n    }\r\n\r\n    public cycleInventoryDown(): void {\r\n        this.myWorld.game.sound.play(AudioName.menu_select);\r\n        let prevIdx = this.currIdx;\r\n        this.items[prevIdx].letter.tint = 0x00e8d8;\r\n\r\n        do {\r\n            this.currIdx++;\r\n            if (this.currIdx >= this.items.length) {\r\n                this.currIdx = 0;\r\n            }\r\n        }\r\n        while (!this.items[this.currIdx].unlocked);\r\n\r\n        this.items[this.currIdx].letter.tint = 0xffffff;\r\n        this.items[prevIdx].letter.visible = true;\r\n        this.items[prevIdx].letterShadow.visible = true;\r\n        this.currSelectedItem = this.items[this.currIdx];\r\n\r\n        console.log('curr weapon: ' + this.currSelectedItem.weapon.type);\r\n    }\r\n\r\n    public toggleInventory(): void {\r\n        if (this.isAnimating) {\r\n            return;\r\n        }\r\n\r\n        this.isOpen == true ? this.closeInventory() : this.openInventory();\r\n    }\r\n\r\n    public unlockWeapon(type: WeaponType): void {\r\n        console.log('Unlock weapon: ' + type);\r\n\r\n        this.items.filter(element => {\r\n            return element.weapon.type == type;\r\n        }).forEach(element => {\r\n            element.unlocked = true;\r\n        });\r\n    }\r\n\r\n    public getCurrentlySelectedItem(): IInventoryItem {\r\n        return this.items[this.currIdx];\r\n    }\r\n\r\n    public getCurrentlySelectedWeapon(): Weapon {\r\n        return this.items[this.currIdx].weapon;\r\n    }\r\n\r\n    private openInventory(): void {\r\n        this.isAnimating = true;\r\n        this.isOpen = true;\r\n        this.myWorld.game.sound.play(AudioName.pause_menu);\r\n        this.showInventory();\r\n        this.getCorrectEnergyForMeters();\r\n        this.playAnimation();\r\n    }\r\n\r\n    private closeInventory(): void {\r\n        this.isAnimating = true;\r\n        this.isOpen = false;\r\n        this.stopAnimation();\r\n        this.selectedWeapon.dispatch(this.getCurrentlySelectedItem().weapon);\r\n        this.hideInventory();\r\n    }\r\n\r\n    private showInventory(): void {\r\n        this.image.bringToTop();\r\n        this.animateInventoryIn();\r\n    }\r\n\r\n    private hideInventory(): void {\r\n        this.animateInventoryOut();\r\n        this.container.visible = false;\r\n        this.items.forEach(element => {\r\n            if (!element.unlocked) {\r\n                return;\r\n            }\r\n\r\n            if (element.horizontalMeter == null) {\r\n                return;\r\n            }\r\n            element.horizontalMeter.hide();\r\n        });\r\n    }\r\n\r\n    private playAnimation(): void {\r\n        let toggle: boolean = true;\r\n        let count: number = 0;\r\n        this.animationTimer = this.myWorld.game.time.create(true);\r\n        this.animationTimer.loop(1 / 60, () => {\r\n            count++;\r\n            if (count % 8 == 0) {\r\n                let b: boolean = !this.getCurrentlySelectedItem().letter.visible;\r\n                this.getCurrentlySelectedItem().letter.visible = b;\r\n                this.getCurrentlySelectedItem().letterShadow.visible = b;\r\n            }\r\n        });\r\n        this.animationTimer.start();\r\n    }\r\n\r\n    private stopAnimation(): void {\r\n        this.animationTimer.stop();\r\n    }\r\n\r\n    private getCorrectEnergyForMeters(): void {\r\n        this.items.forEach(element => {\r\n            if (!element.unlocked) {\r\n                return;\r\n            }\r\n\r\n            if (element.horizontalMeter == null) {\r\n                return;\r\n            }\r\n\r\n            element.horizontalMeter.setEnergy(element.weapon.energyMeter.currEnergy);\r\n        });\r\n    }\r\n\r\n    private displayInventoryContents(): void {\r\n        this.container.visible = true;\r\n        this.container.bringToTop();\r\n        this.items.forEach(element => {\r\n            if (!element.unlocked) {\r\n                return;\r\n            }\r\n\r\n            if (element.horizontalMeter == null) {\r\n                return;\r\n            }\r\n\r\n            element.horizontalMeter.show();\r\n            element.letter.visible = true;\r\n            element.letterShadow.visible = true;\r\n        });\r\n    }\r\n}","import { World } from '../world'\r\nimport { Weapon, WeaponType } from './weapon'\r\nimport { Konstants, TagType, EntityType, AudioName } from '../konstants'\r\nimport { Bullet } from '../bullets/bullet'\r\nimport { Player } from '../player'\r\nimport { Meter } from '../ui/meter'\r\n\r\nexport class BombManWeapon implements Weapon {\r\n\r\n    public type: WeaponType = WeaponType.BombMan;\r\n    public currEnergy: number = 28;\r\n    public totalEnergy: number = 28;\r\n    public energyMeter: Meter = null;\r\n    public tempBullet: Bullet = null;\r\n    public bullets: Array<Bullet> = new Array<Bullet>();\r\n    public totalBullets: number = 0;\r\n    public maxBulletsAllowed: number = 3;\r\n\r\n    constructor(private myWorld: World) {\r\n        this.energyMeter = new Meter(this.myWorld.game, 24, 15);\r\n        this.setEnergy(28);\r\n    }\r\n\r\n    public doAction(x: number, y: number): boolean {\r\n        if (this.totalBullets >= this.maxBulletsAllowed) {\r\n            return false;\r\n        }\r\n\r\n        if (this.currEnergy <= 0) {\r\n            this.currEnergy = 0;\r\n            return false;\r\n        }\r\n\r\n        this.totalBullets++;\r\n        this.tempBullet = new Bullet(this.myWorld.entityManager.player, this.myWorld, TagType.bullet, EntityType.bullet_lemon, this.myWorld.game, x, y, Konstants.lemon, '');\r\n        // The args will be this bullet.\r\n        this.tempBullet.destroyed.addOnce((args: any) => {\r\n            this.totalBullets--;\r\n            this.bullets.splice(this.bullets.indexOf(args), 1);\r\n        }, this, 0, this);\r\n        this.tempBullet.contactDamage = 14;\r\n        this.tempBullet.horizontalSpeed = 190;\r\n        this.tempBullet.targetSpeed.x = this.tempBullet.horizontalSpeed * this.myWorld.entityManager.player.getFacingDirection();\r\n        this.myWorld.game.add.existing(this.tempBullet);\r\n        this.myWorld.entityManager.addEntity(this.tempBullet);\r\n        this.bullets.push(this.tempBullet);\r\n        this.myWorld.game.sound.play(AudioName.mega_buster);\r\n\r\n        return true;\r\n    }\r\n\r\n    public restoreEnergy(amount: number): void {\r\n        this.currEnergy += amount;\r\n\r\n        if (this.currEnergy >= this.totalEnergy) {\r\n            this.currEnergy = this.totalEnergy;\r\n        }\r\n\r\n        console.log(\"this.currEnergy: \" + this.currEnergy)\r\n\r\n        this.energyMeter.restoreEnergy(amount);\r\n    }\r\n\r\n    public setEnergy(amount: number): void {\r\n        this.currEnergy = amount;\r\n\r\n        if (this.currEnergy >= this.totalEnergy) {\r\n            this.currEnergy = this.totalEnergy;\r\n        }\r\n\r\n        this.energyMeter.setEnergy(amount);\r\n    }\r\n}","import { World } from '../world'\r\nimport { Weapon, WeaponType } from './weapon'\r\nimport { Konstants, TagType, EntityType, AudioName } from '../konstants'\r\nimport { Bullet } from '../bullets/bullet'\r\nimport { Player } from '../player'\r\nimport { Meter } from '../ui/meter'\r\n\r\nexport class ElecManWeapon implements Weapon {\r\n\r\n    public type: WeaponType = WeaponType.ElecMan;\r\n    public currEnergy: number = 28;\r\n    public totalEnergy: number = 28;\r\n    public energyMeter: Meter = null;\r\n    public tempBullet: Bullet = null;\r\n    public bullets: Array<Bullet> = new Array<Bullet>();\r\n    public totalBullets: number = 0;\r\n    public maxBulletsAllowed: number = 3;\r\n\r\n    constructor(private myWorld: World) {\r\n        this.energyMeter = new Meter(this.myWorld.game, 24, 15);\r\n        this.setEnergy(28);\r\n    }\r\n\r\n    public doAction(x: number, y: number): boolean {\r\n        if (this.totalBullets >= this.maxBulletsAllowed) {\r\n            return false;\r\n        }\r\n\r\n        if (this.currEnergy <= 0) {\r\n            this.currEnergy = 0;\r\n            return false;\r\n        }\r\n\r\n        this.totalBullets++;\r\n        this.tempBullet = new Bullet(this.myWorld.entityManager.player, this.myWorld, TagType.bullet, EntityType.bullet_lemon, this.myWorld.game, x, y, Konstants.lemon, '');\r\n        // The args will be this bullet.\r\n        this.tempBullet.destroyed.addOnce((args: any) => {\r\n            this.totalBullets--;\r\n            this.bullets.splice(this.bullets.indexOf(args), 1);\r\n        }, this, 0, this);\r\n        this.tempBullet.contactDamage=1;\r\n        this.tempBullet.horizontalSpeed = 190;\r\n        this.tempBullet.targetSpeed.x = this.tempBullet.horizontalSpeed * this.myWorld.entityManager.player.getFacingDirection();\r\n        this.myWorld.game.add.existing(this.tempBullet);\r\n        this.myWorld.entityManager.addEntity(this.tempBullet);\r\n        this.bullets.push(this.tempBullet);\r\n        this.myWorld.game.sound.play(AudioName.mega_buster);\r\n\r\n        return true;\r\n    }\r\n\r\n    public restoreEnergy(amount: number): void {\r\n        this.currEnergy += amount;\r\n\r\n        if (this.currEnergy >= this.totalEnergy) {\r\n            this.currEnergy = this.totalEnergy;\r\n        }\r\n\r\n        console.log(\"this.currEnergy: \" + this.currEnergy)\r\n\r\n        this.energyMeter.restoreEnergy(amount);\r\n    }\r\n\r\n    public setEnergy(amount: number): void {\r\n        this.currEnergy = amount;\r\n\r\n        if (this.currEnergy >= this.totalEnergy) {\r\n            this.currEnergy = this.totalEnergy;\r\n        }\r\n\r\n        this.energyMeter.setEnergy(amount);\r\n    }\r\n}","import { World } from '../world'\r\nimport { Weapon, WeaponType } from './weapon'\r\nimport { Konstants, TagType, EntityType, AudioName } from '../konstants'\r\nimport { Bullet } from '../bullets/bullet'\r\nimport { Player } from '../player'\r\nimport { Meter } from '../ui/meter'\r\n\r\nexport class GutsManWeapon implements Weapon {\r\n\r\n    public type: WeaponType = WeaponType.GutsMan;\r\n    public currEnergy: number = 28;\r\n    public totalEnergy: number = 28;\r\n    public energyMeter: Meter = null;\r\n    public tempBullet: Bullet = null;\r\n    public bullets: Array<Bullet> = new Array<Bullet>();\r\n    public totalBullets: number = 0;\r\n    public maxBulletsAllowed: number = 3;\r\n\r\n    constructor(private myWorld: World) {\r\n        this.energyMeter = new Meter(this.myWorld.game, 24, 15);\r\n        this.setEnergy(28);\r\n    }\r\n\r\n    public doAction(x: number, y: number): boolean {\r\n        if (this.totalBullets >= this.maxBulletsAllowed) {\r\n            return false;\r\n        }\r\n\r\n        if (this.currEnergy <= 0) {\r\n            this.currEnergy = 0;\r\n            return false;\r\n        }\r\n\r\n        this.currEnergy -= 5;\r\n        this.energyMeter.takeEnergy(5);\r\n\r\n        return true;\r\n    }\r\n\r\n    public restoreEnergy(amount: number): void {\r\n        this.currEnergy += amount;\r\n\r\n        if (this.currEnergy >= this.totalEnergy) {\r\n            this.currEnergy = this.totalEnergy;\r\n        }\r\n\r\n        console.log(\"this.currEnergy: \" + this.currEnergy)\r\n\r\n        this.energyMeter.restoreEnergy(amount);\r\n    }\r\n\r\n    public setEnergy(amount: number): void {\r\n        this.currEnergy = amount;\r\n\r\n        if (this.currEnergy >= this.totalEnergy) {\r\n            this.currEnergy = this.totalEnergy;\r\n        }\r\n\r\n        this.energyMeter.setEnergy(amount);\r\n    }\r\n}","import { World } from '../world'\r\nimport { Weapon, WeaponType } from './weapon'\r\nimport { Konstants, TagType, EntityType, AudioName } from '../konstants'\r\nimport { Bullet } from '../bullets/bullet'\r\nimport { Player } from '../player'\r\nimport { Meter } from '../ui/meter'\r\n\r\nexport class IceManWeapon implements Weapon {\r\n\r\n    public type: WeaponType = WeaponType.IceMan;\r\n    public currEnergy: number = 28;\r\n    public totalEnergy: number = 28;\r\n    public energyMeter: Meter = null;\r\n    public tempBullet: Bullet = null;\r\n    public totalBullets: number = 0;\r\n    public maxBulletsAllowed: number = 1;\r\n\r\n    constructor(private myWorld: World) {\r\n        this.energyMeter = new Meter(this.myWorld.game, 24, 15);\r\n        this.setEnergy(28);\r\n    }\r\n\r\n    public doAction(x: number, y: number): boolean {\r\n        if (this.totalBullets >= this.maxBulletsAllowed) {\r\n            return false;\r\n        }\r\n\r\n        if (this.currEnergy <= 0) {\r\n            this.currEnergy = 0;\r\n            return false;\r\n        }\r\n\r\n        this.totalBullets++;\r\n\r\n        this.tempBullet = this.myWorld.entityManager.createBasicBullet(\r\n            this.myWorld.entityManager.player, x, y, 12, 12,\r\n            EntityType.ice_man, EntityType.ice_man_bullet,\r\n            'bullet_01'\r\n        );\r\n\r\n        // The args will be this bullet.\r\n        this.tempBullet.destroyed.addOnce((args: any) => {\r\n            this.totalBullets--;\r\n        }, this, 0, this);\r\n\r\n        this.tempBullet.contactDamage = 9999;\r\n        this.tempBullet.horizontalSpeed = 150;\r\n        this.tempBullet.targetSpeed.x = this.tempBullet.horizontalSpeed * this.myWorld.entityManager.player.getFacingDirection();\r\n        this.tempBullet.animations.add('active', ['bullet_01', 'bullet_02'], 10, true);\r\n        this.tempBullet.animations.play('active');\r\n        this.tempBullet.setFacingDirection(-this.myWorld.entityManager.player.getFacingDirection());\r\n        this.myWorld.game.sound.play(AudioName.ice_slasher);\r\n        this.currEnergy -= 5;\r\n        this.energyMeter.takeEnergy(5);\r\n\r\n        return true;\r\n    }\r\n\r\n    public restoreEnergy(amount: number): void {\r\n        this.currEnergy += amount;\r\n\r\n        if (this.currEnergy >= this.totalEnergy) {\r\n            this.currEnergy = this.totalEnergy;\r\n        }\r\n\r\n        console.log(\"this.currEnergy: \" + this.currEnergy)\r\n\r\n        this.energyMeter.restoreEnergy(amount);\r\n    }\r\n\r\n    public setEnergy(amount: number): void {\r\n        this.currEnergy = amount;\r\n\r\n        if (this.currEnergy >= this.totalEnergy) {\r\n            this.currEnergy = this.totalEnergy;\r\n        }\r\n\r\n        this.energyMeter.setEnergy(amount);\r\n    }\r\n}","import { World } from '../world'\r\nimport { Weapon } from './weapon'\r\nimport { WeaponType } from './weapon'\r\nimport { Konstants } from '../konstants'\r\nimport { TagType } from '../konstants'\r\nimport { EntityType } from '../konstants'\r\nimport { AudioName } from '../konstants'\r\nimport { Bullet } from '../bullets/bullet'\r\nimport { CutManBullet } from '../bullets/cutManBullet'\r\nimport { SplineBulletMovement } from '../bullets/splineBulletMovement'\r\nimport { BoomerangBulletMovement } from '../bullets/boomerangBulletMovement'\r\nimport { Player } from '../player'\r\nimport { Meter } from '../ui/meter'\r\n\r\nexport class CutManWeapon implements Weapon {\r\n\r\n    public type: WeaponType = WeaponType.CutMan;\r\n    public currEnergy: number = 28;\r\n    public totalEnergy: number = 28;\r\n    public energyMeter: Meter = null;\r\n    public bullet: CutManBullet;\r\n    public totalBullets: number = 0;\r\n    public maxBulletsAllowed: number = 1;\r\n\r\n    constructor(private myWorld: World) {\r\n        this.energyMeter = new Meter(this.myWorld.game, 24, 15);\r\n        this.setEnergy(28);\r\n    }\r\n\r\n    public doAction(x: number, y: number): boolean {\r\n        if (this.totalBullets >= this.maxBulletsAllowed) {\r\n            return false;\r\n        }\r\n\r\n        if (this.currEnergy <= 0) {\r\n            this.currEnergy = 0;\r\n            return false;\r\n        }\r\n\r\n        this.totalBullets++;\r\n        this.bullet = new CutManBullet(this.myWorld.entityManager.player, this.myWorld, TagType.bullet, EntityType.bullet_cut_man, this.myWorld.game, x, y, Konstants.rolling_cutter, '');\r\n        this.bullet.bulletMovement = new SplineBulletMovement(this.myWorld.entityManager.player, new Phaser.Point(x, y));\r\n        // this.bullet.bulletMovement = new BoomerangBulletMovement(this.player, new Phaser.Point(xPos, yPos),new Phaser.Point(xPos + this.player.getFacingDirection() * 100, yPos));\r\n\r\n        this.bullet.contactDamage=1;\r\n\r\n        this.bullet.bulletMovement.destroyed.addOnce(() => {\r\n            this.bullet.destroyed.dispatch();\r\n            this.bullet.kill();\r\n        }, this);\r\n\r\n        this.bullet.destroyed.addOnce(() => {\r\n            this.totalBullets--;\r\n        }, this);\r\n\r\n        this.myWorld.game.add.existing(this.bullet);\r\n        this.myWorld.entityManager.addEntity(this.bullet);\r\n        this.myWorld.game.sound.play(AudioName.rolling_cutter);\r\n        this.currEnergy -= 5;\r\n        this.energyMeter.takeEnergy(5);\r\n\r\n        return true;\r\n    }\r\n\r\n    public restoreEnergy(amount: number): void {\r\n        this.currEnergy += amount;\r\n\r\n        if (this.currEnergy >= this.totalEnergy) {\r\n            this.currEnergy = this.totalEnergy;\r\n        }\r\n\r\n        console.log(\"this.currEnergy: \" + this.currEnergy)\r\n\r\n        this.energyMeter.restoreEnergy(amount);\r\n    }\r\n\r\n    public setEnergy(amount: number): void {\r\n        this.currEnergy = amount;\r\n\r\n        if (this.currEnergy >= this.totalEnergy) {\r\n            this.currEnergy = this.totalEnergy;\r\n        }\r\n\r\n        this.energyMeter.setEnergy(amount);\r\n    }\r\n}","import { Entity } from '../entity'\r\nimport { Helper } from '../helper'\r\nimport { v2 } from '../util/v2'\r\nimport { Catmull } from '../catmull/catmull'\r\nimport { State } from '../fsm/state'\r\nimport { StateMachine } from '../fsm/stateMachine'\r\nimport { BulletMovement } from './bulletMovement'\r\n\r\nexport class SplineBulletMovement implements BulletMovement {\r\n    public destroyed: Phaser.Signal = new Phaser.Signal();\r\n    public position: Phaser.Point = new Phaser.Point();\r\n    public targetSpeed: Phaser.Point = new Phaser.Point();\r\n    public velocity: Phaser.Point = new Phaser.Point();\r\n    public speed: number = 160;\r\n    public catmull: Catmull;\r\n    public points: Array<v2> = new Array<v2>();\r\n    public marker: number = 0;\r\n    public fsm: StateMachine;\r\n\r\n    constructor(public owner: Entity, public initialPosition: Phaser.Point) {\r\n        this.catmull = new Catmull(this.points);\r\n        this.points.push(new v2(initialPosition.x, initialPosition.y));\r\n        this.points.push(new v2(initialPosition.x + 50 * owner.getFacingDirection(), initialPosition.y - 20));\r\n        this.points.push(new v2(initialPosition.x + 90 * owner.getFacingDirection(), initialPosition.y));\r\n        this.points.push(new v2(initialPosition.x + 80 * owner.getFacingDirection(), initialPosition.y + 20));\r\n\r\n        this.fsm = new StateMachine();\r\n        this.fsm.addState(CutManBulletState.catmullPathing, new CutManBulletCatmullPathingState(this));\r\n        this.fsm.addState(CutManBulletState.returning, new CutManBulletReturningState(this));\r\n        this.fsm.changeState(CutManBulletState.catmullPathing);\r\n    }\r\n\r\n    public move(): void {\r\n        this.fsm.currentState.update();\r\n    }\r\n}\r\n\r\nenum CutManBulletState {\r\n    catmullPathing = 'catmullPathing',\r\n    returning = 'returning',\r\n}\r\n\r\nclass CutManBulletCatmullPathingState implements State {\r\n    name: string = CutManBulletState.catmullPathing;\r\n    initialized: boolean;\r\n    actor: SplineBulletMovement;\r\n\r\n    constructor(actor: SplineBulletMovement) {\r\n        this.actor = actor;\r\n    }\r\n\r\n    enter(): void {\r\n        this.initialized = true;\r\n    }\r\n\r\n    update(): void {\r\n        this.actor.marker += 2.7 * (1 / 60);\r\n\r\n        if (this.actor.marker > this.actor.points.length - 1) {\r\n            this.actor.fsm.changeState(CutManBulletState.returning);\r\n            return;\r\n        }\r\n\r\n        let pos: v2 = this.actor.catmull.getSplinePoint(this.actor.marker, true);\r\n\r\n        this.actor.position.x = pos.x;\r\n        this.actor.position.y = pos.y;\r\n    }\r\n\r\n    exit(): void {\r\n        this.initialized = false;\r\n    }\r\n}\r\n\r\nclass CutManBulletReturningState implements State {\r\n    name: string = CutManBulletState.returning;\r\n    initialized: boolean;\r\n    actor: SplineBulletMovement;\r\n    private dir: Phaser.Point;\r\n    private posDiff: Phaser.Point = new Phaser.Point(0, -10);\r\n    private tempPos: Phaser.Point;\r\n\r\n    constructor(actor: SplineBulletMovement) {\r\n        this.actor = actor;\r\n    }\r\n\r\n    enter(): void {\r\n        this.initialized = true;\r\n    }\r\n\r\n    update(): void {\r\n        this.tempPos = this.actor.owner.getPosition().clone().add(this.posDiff.x, this.posDiff.y);\r\n\r\n        if (Helper.distanceTo2(this.actor.position, this.tempPos) < 2) {\r\n            this.actor.destroyed.dispatch();\r\n            return;\r\n        }\r\n\r\n        this.dir = Helper.directionTo2(this.actor.position, this.tempPos);\r\n\r\n        this.actor.targetSpeed.x = this.actor.speed * this.dir.x;\r\n        this.actor.targetSpeed.y = this.actor.speed * this.dir.y;\r\n\r\n        this.actor.velocity.x = this.actor.targetSpeed.x;\r\n        this.actor.velocity.y = this.actor.targetSpeed.y;\r\n\r\n        this.actor.position.x += this.actor.velocity.x * this.actor.owner.game.time.physicsElapsed;\r\n        this.actor.position.y += this.actor.velocity.y * this.actor.owner.game.time.physicsElapsed;\r\n    }\r\n\r\n    exit(): void {\r\n        this.initialized = false;\r\n    }\r\n}","import { World } from '../world'\r\nimport { Weapon, WeaponType } from './weapon'\r\nimport { Konstants, TagType, EntityType, AudioName } from '../konstants'\r\nimport { Bullet } from '../bullets/bullet'\r\nimport { Player } from '../player'\r\nimport { Meter } from '../ui/meter'\r\n\r\nexport class FireManWeapon implements Weapon {\r\n\r\n    public type: WeaponType = WeaponType.FireMan;\r\n    public currEnergy: number = 28;\r\n    public totalEnergy: number = 28;\r\n    public energyMeter: Meter = null;\r\n    public tempBullet: Bullet = null;\r\n    public bullets: Array<Bullet> = new Array<Bullet>();\r\n    public totalBullets: number = 0;\r\n    public maxBulletsAllowed: number = 3;\r\n\r\n    constructor(private myWorld: World) {\r\n        this.energyMeter = new Meter(this.myWorld.game, 24, 15);\r\n        this.setEnergy(28);\r\n    }\r\n\r\n    public doAction(x: number, y: number): boolean {\r\n        if (this.totalBullets >= this.maxBulletsAllowed) {\r\n            return false;\r\n        }\r\n\r\n        if (this.currEnergy <= 0) {\r\n            this.currEnergy = 0;\r\n            return false;\r\n        }\r\n\r\n        this.totalBullets++;\r\n        this.tempBullet = new Bullet(this.myWorld.entityManager.player, this.myWorld, TagType.bullet, EntityType.bullet_lemon, this.myWorld.game, x, y, Konstants.lemon, '');\r\n        // The args will be this bullet.\r\n        this.tempBullet.destroyed.addOnce((args: any) => {\r\n            this.totalBullets--;\r\n            this.bullets.splice(this.bullets.indexOf(args), 1);\r\n        }, this, 0, this);\r\n        this.tempBullet.contactDamage=1;\r\n        this.tempBullet.horizontalSpeed = 190;\r\n        this.tempBullet.targetSpeed.x = this.tempBullet.horizontalSpeed * this.myWorld.entityManager.player.getFacingDirection();\r\n        this.myWorld.game.add.existing(this.tempBullet);\r\n        this.myWorld.entityManager.addEntity(this.tempBullet);\r\n        this.bullets.push(this.tempBullet);\r\n        this.myWorld.game.sound.play(AudioName.mega_buster);\r\n\r\n        return true;\r\n    }\r\n\r\n    public restoreEnergy(amount: number): void {\r\n        this.currEnergy += amount;\r\n\r\n        if (this.currEnergy >= this.totalEnergy) {\r\n            this.currEnergy = this.totalEnergy;\r\n        }\r\n\r\n        console.log(\"this.currEnergy: \" + this.currEnergy)\r\n\r\n        this.energyMeter.restoreEnergy(amount);\r\n    }\r\n\r\n    public setEnergy(amount: number): void {\r\n        this.currEnergy = amount;\r\n\r\n        if (this.currEnergy >= this.totalEnergy) {\r\n            this.currEnergy = this.totalEnergy;\r\n        }\r\n\r\n        this.energyMeter.setEnergy(amount);\r\n    }\r\n}","import { Weapon } from './weapon'\r\nimport { WeaponType } from './weapon'\r\nimport { Konstants } from '../konstants'\r\nimport { TagType } from '../konstants'\r\nimport { AudioName } from '../konstants'\r\nimport { EntityType } from '../konstants'\r\nimport { Bullet } from '../bullets/bullet'\r\nimport { Player } from '../player'\r\nimport { Meter } from '../ui/meter'\r\nimport { World } from '../world'\r\n\r\nexport class LemonWeapon implements Weapon {\r\n\r\n    public type: WeaponType = WeaponType.MegaBuster;\r\n    public currEnergy: number = 28;\r\n    public totalEnergy: number = 28;\r\n    public energyMeter: Meter = null;\r\n    public tempBullet: Bullet = null;\r\n    public bullets: Array<Bullet> = new Array<Bullet>();\r\n    public totalBullets: number = 0;\r\n    public maxBulletsAllowed: number = 3;\r\n    \r\n    constructor(private myWorld: World) { }\r\n\r\n    public doAction(x: number, y: number): boolean {\r\n        if (this.totalBullets >= this.maxBulletsAllowed) {\r\n            return false;\r\n        }\r\n\r\n        this.totalBullets++;\r\n\r\n        this.tempBullet = this.myWorld.entityManager.createBitmapBullet(\r\n            this.myWorld.entityManager.player, x, y, 8, 6, Konstants.lemon, EntityType.bullet_lemon\r\n        );\r\n\r\n        // The args will be this bullet.\r\n        this.tempBullet.destroyed.addOnce((args: any) => {\r\n            this.totalBullets--;\r\n            this.bullets.splice(this.bullets.indexOf(args), 1);\r\n        }, this, 0, this);\r\n\r\n        this.tempBullet.contactDamage = 9999;\r\n        this.tempBullet.horizontalSpeed = 190;\r\n        this.tempBullet.targetSpeed.x = this.tempBullet.horizontalSpeed * this.myWorld.entityManager.player.getFacingDirection();\r\n        this.bullets.push(this.tempBullet);\r\n        this.myWorld.game.sound.play(AudioName.mega_buster);\r\n\r\n        return true;\r\n    }\r\n\r\n    public restoreEnergy(amount: number): void {\r\n        // Buster weapon does not have energy\r\n    }\r\n\r\n    public setEnergy(amount: number): void {\r\n        // Buster weapon does not have energy\r\n    }\r\n}","import { World } from '../world'\r\nimport { AudioName } from '../konstants'\r\nimport { VanishingBlock } from '../platforms/vanishingBlock'\r\n\r\nexport interface VanishingBlockTrigger {\r\n    groupIndex: number;\r\n    trigger: Phaser.Rectangle;\r\n}\r\n\r\nexport interface VanishingBlockGroup {\r\n    currBlockIdx: number;\r\n    isActive: boolean;\r\n    groupIndex: number;\r\n    blocks: Array<VanishingBlock>;\r\n}\r\n\r\nexport class VanishingBlockManager {\r\n    private game: Phaser.Game;\r\n    private groups: Array<VanishingBlockGroup> = new Array<VanishingBlockGroup>();\r\n    private isPaused: boolean = false;\r\n\r\n    constructor(private world: World) {\r\n        this.game = world.game;\r\n    }\r\n\r\n    public update(): void {\r\n        if (this.isPaused) {\r\n            return;\r\n        }\r\n\r\n        for (let i = 0; i < this.groups.length; i++) {\r\n            if (!this.groups[i].isActive) {\r\n                continue;\r\n            }\r\n\r\n            for (let j = 0; j < this.groups[i].blocks.length; j++) {\r\n                // Last block is visible\r\n                if (this.groups[i].blocks[this.groups[i].blocks.length - 1].visible) {\r\n                    // continue;\r\n                }\r\n\r\n                if (this.groups[i].currBlockIdx != j) {\r\n                    continue;\r\n                }\r\n\r\n                this.groups[i].blocks[this.groups[i].currBlockIdx].m_delayElapsedTime += this.game.time.elapsedMS;\r\n\r\n                if (this.groups[i].blocks[this.groups[i].currBlockIdx].m_delayElapsedTime >=\r\n                    this.groups[i].blocks[this.groups[i].currBlockIdx].startDelay) {\r\n\r\n                    this.game.sound.play(AudioName.vanishing_blocks);\r\n                    this.groups[i].blocks[this.groups[i].currBlockIdx].visible = true;\r\n                    this.groups[i].blocks[this.groups[i].currBlockIdx].surfaces.forEach(element => {\r\n                        element.collidable = true;\r\n                    });\r\n                    this.groups[i].blocks[this.groups[i].currBlockIdx].m_delayElapsedTime = 0;\r\n                    this.groups[i].currBlockIdx++;\r\n\r\n                    if (this.groups[i].currBlockIdx >= this.groups[i].blocks.length) {\r\n                        this.groups[i].currBlockIdx = 0;\r\n                    }\r\n                }\r\n            }\r\n\r\n            for (let j = 0; j < this.groups[i].blocks.length; j++) {\r\n                if (this.groups[i].blocks[j].visible) {\r\n                    this.groups[i].blocks[j].m_appearElapsedTime += this.game.time.elapsedMS;\r\n\r\n                    if (this.groups[i].blocks[j].m_appearElapsedTime >= this.groups[i].blocks[j].appearFor) {\r\n                        this.groups[i].blocks[j].m_appearElapsedTime = 0;\r\n                        this.groups[i].blocks[j].visible = false;\r\n                        this.groups[i].blocks[j].surfaces.forEach(element => {\r\n                            element.collidable = false;\r\n                        });\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    public pause(): void {\r\n        this.isPaused = true;\r\n    }\r\n\r\n    public unpause(): void {\r\n        this.isPaused = false;\r\n    }\r\n\r\n    public reset(): void {\r\n        for (let i = 0; i < this.groups.length; i++) {\r\n            this.groups[i].isActive = false;\r\n            this.groups[i].currBlockIdx = 0;\r\n            for (let j = 0; j < this.groups[i].blocks.length; j++) {\r\n                this.groups[i].blocks[j].m_delayElapsedTime = 0;\r\n                this.groups[i].blocks[j].m_appearElapsedTime = 0;\r\n                this.groups[i].blocks[j].visible = false;\r\n                this.groups[i].blocks[j].surfaces.forEach(element => {\r\n                    element.collidable = false;\r\n                });\r\n            }\r\n        }\r\n    }\r\n\r\n    public addNewGroup(groupIndex: number): void {\r\n        // console.log('ADD NEW GROUP: ' + groupIndex);\r\n\r\n        if (this.groups.length != 0) {\r\n            // This group already exists; don't create it.\r\n            if (this.groups.filter((value: VanishingBlockGroup) => {\r\n                return value.groupIndex == groupIndex;\r\n            }).length != 0) {\r\n                return;\r\n            }\r\n        }\r\n\r\n        this.groups.push({\r\n            currBlockIdx: 0,\r\n            isActive: false,\r\n            groupIndex: groupIndex,\r\n            blocks: new Array<VanishingBlock>()\r\n        })\r\n    }\r\n\r\n    public addToGroup(groupIndex: number, vb: VanishingBlock): void {\r\n        // console.log(\"ADD VANISHING BLOCK TO GROUP: \" + groupIndex);\r\n\r\n        // Create a new group if it doesn't exist.\r\n        if (this.groups.filter((value: VanishingBlockGroup) => {\r\n            return value.groupIndex == groupIndex;\r\n        }).length == 0) {\r\n            this.addNewGroup(groupIndex);\r\n        };\r\n\r\n        this.groups.filter((value: VanishingBlockGroup) => {\r\n            return value.groupIndex == groupIndex;\r\n        })[0].blocks.push(vb);\r\n    }\r\n\r\n    public isTriggerActive(groupIndex: number): boolean {\r\n        return this.groups.filter((value: VanishingBlockGroup) => {\r\n            return value.groupIndex == groupIndex;\r\n        })[0].isActive;\r\n    }\r\n\r\n    public activateTrigger(groupIndex: number): void {\r\n        this.groups.filter((value: VanishingBlockGroup) => {\r\n            return value.groupIndex == groupIndex;\r\n        })[0].isActive = true;\r\n\r\n        this.groups.filter((value: VanishingBlockGroup) => {\r\n            return value.groupIndex == groupIndex;\r\n        })[0].blocks.sort((a: VanishingBlock, b: VanishingBlock) => {\r\n            if (a.index > b.index) {\r\n                return 1;\r\n            }\r\n            else if (a.index < b.index) {\r\n                return -1;\r\n            }\r\n            else if (a.index == b.index) {\r\n                return 0;\r\n            }\r\n            else {\r\n                console.error('???');\r\n            }\r\n        })\r\n    }\r\n\r\n    public deactivateTrigger(groupIndex: number): void {\r\n        // console.log('deactivate trigger: ' + groupIndex);\r\n\r\n        this.groups.filter((value: VanishingBlockGroup) => {\r\n            return value.groupIndex == groupIndex;\r\n        })[0].isActive = false;\r\n    }\r\n}","import { World, Surface } from '../world'\r\nimport { EntityType } from '../konstants'\r\nimport { Debug } from '../debug'\r\n\r\nexport class DebugDrawManager {\r\n    private graphicsDebug: Phaser.Graphics;\r\n    private gridGraphics:Phaser.Graphics;\r\n    private allowDrawHitboxes: boolean;\r\n    private allowDrawOutlines: boolean;\r\n    private allowDrawGrid: boolean;\r\n    private tempRect: Phaser.Rectangle = new Phaser.Rectangle(0, 0, 0, 0);\r\n    private drawSurfacesOnceFlag: boolean = false;\r\n\r\n    constructor(private myWorld: World) {\r\n        this.graphicsDebug = myWorld.game.add.graphics();\r\n        myWorld.game.add.existing(this.graphicsDebug);\r\n\r\n        this.gridGraphics = myWorld.game.add.graphics();\r\n        myWorld.game.add.existing(this.gridGraphics);\r\n\r\n        this.allowDrawHitboxes = Debug.AllowDrawHitboxes;\r\n        this.allowDrawOutlines = Debug.AllowDrawOutlines;\r\n        this.allowDrawGrid = Debug.AllowDrawGrid;\r\n        this.drawGrid();\r\n    }\r\n\r\n    public update(): void {\r\n        this.graphicsDebug.clear();\r\n\r\n        this.drawHitboxes();\r\n        this.drawSurfaces();\r\n    }\r\n\r\n    public toggleHitboxDrawing(): void {\r\n        this.allowDrawHitboxes = !this.allowDrawHitboxes;\r\n\r\n        if (!this.allowDrawHitboxes) {\r\n            this.graphicsDebug.clear();\r\n        }\r\n    }\r\n\r\n    public toggleOutlineDrawing(): void {\r\n        this.allowDrawOutlines = !this.allowDrawOutlines;\r\n        this.drawSurfaces();\r\n\r\n        if (!this.allowDrawOutlines) {\r\n            this.graphicsDebug.clear();\r\n        }\r\n    }\r\n\r\n    public toggleGridDrawing(): void {\r\n        this.allowDrawGrid = !this.allowDrawGrid;\r\n        this.drawGrid();\r\n\r\n        if (!this.allowDrawGrid) {\r\n            this.gridGraphics.clear();\r\n        }\r\n    }\r\n\r\n    private drawGrid(): void {\r\n        if (!this.allowDrawGrid) {\r\n            return;\r\n        }\r\n\r\n        this.gridGraphics.lineStyle(1);\r\n        this.gridGraphics.beginFill(0x00ff00, 0.5);\r\n\r\n        // let x = this.myWorld.game.camera.position.x;\r\n        // let y = this.myWorld.game.camera.position.y;\r\n        let x = 0;\r\n        let y = 0;\r\n\r\n        for (let i = 0; i < 200; i++) {\r\n            this.gridGraphics.moveTo(x, y + i * 16);\r\n            this.gridGraphics.lineTo(x + 5000, y + i * 16);\r\n        }\r\n\r\n        for (let i = 0; i < 200; i++) {\r\n            this.gridGraphics.moveTo(x + i * 16, y);\r\n            this.gridGraphics.lineTo(x + i * 16, y + 5000);\r\n        }\r\n    }\r\n\r\n    private drawHitboxes(): void {\r\n        if (!this.allowDrawHitboxes) {\r\n            return;\r\n        }\r\n\r\n        this.graphicsDebug.lineStyle(1);\r\n        this.graphicsDebug.beginFill(0x00ff00, 0.5);\r\n\r\n        for (let i = 0; i < this.myWorld.entityManager.entities.length; i++) {\r\n            if (this.myWorld.entityManager.entities[i].myEntityType == EntityType.player) {\r\n                if (!this.myWorld.entityManager.player.alive) {\r\n                    continue;\r\n                }\r\n\r\n                this.tempRect = this.myWorld.entityManager.player.hitbox;\r\n                this.graphicsDebug.drawRect(this.tempRect.x, this.tempRect.y, this.tempRect.width, this.tempRect.height);\r\n            }\r\n            else if (this.myWorld.entityManager.entities[i].hitbox instanceof Phaser.Rectangle) {\r\n                this.tempRect = this.myWorld.entityManager.entities[i].hitbox;\r\n                this.graphicsDebug.drawRect(this.tempRect.x, this.tempRect.y, this.tempRect.width, this.tempRect.height);\r\n            }\r\n            else if (this.myWorld.entityManager.entities[i].hitbox instanceof Phaser.Polygon) {\r\n\r\n            }\r\n        }\r\n    }\r\n\r\n    private drawSurfaces(): void {\r\n        if (!this.allowDrawOutlines) {\r\n            return;\r\n        }\r\n\r\n        this.graphicsDebug.endFill();\r\n        this.graphicsDebug.lineStyle(1, 0xff0000);\r\n\r\n        for (let i = 0; i < this.myWorld.entityManager.surfaces.length; i++) {\r\n            this.graphicsDebug.moveTo(this.myWorld.entityManager.surfaces[i].p1.x, this.myWorld.entityManager.surfaces[i].p1.y);\r\n            this.graphicsDebug.lineTo(this.myWorld.entityManager.surfaces[i].p2.x, this.myWorld.entityManager.surfaces[i].p2.y);\r\n        }\r\n\r\n        for (let i = 0; i < this.myWorld.entityManager.ladders.length; i++) {\r\n            this.graphicsDebug.lineStyle(1, 0x555500);\r\n            this.graphicsDebug.drawRect(this.myWorld.entityManager.ladders[i].x, this.myWorld.entityManager.ladders[i].y, this.myWorld.entityManager.ladders[i].width, this.myWorld.entityManager.ladders[i].height);\r\n        }\r\n    }\r\n}","import { World } from './world'\r\nimport { Entity } from './entity'\r\nimport { State } from './fsm/state'\r\nimport { StateMachine } from './fsm/stateMachine'\r\nimport { MathUtil } from './util/mathutil'\r\nimport { KeyedCollection } from './util/mathutil'\r\n\r\ninterface Room {\r\n    isBossRoom: boolean;\r\n    bounds: Phaser.Rectangle;\r\n    left: boolean;\r\n    right: boolean;\r\n    up: boolean;\r\n    down: boolean;\r\n    leftConn: number;\r\n    rightConn: number;\r\n    upConn: number;\r\n    downConn: number;\r\n    index: number;\r\n    canGoBack: boolean;\r\n    hasDoorLeft: boolean;\r\n    hasDoorRight: boolean;\r\n    hasDoorUp: boolean;\r\n    hasDoorDown: boolean;\r\n}\r\n\r\nexport enum GoingTo {\r\n    Left = 'left',\r\n    Right = 'right',\r\n    Up = 'up',\r\n    Down = 'down',\r\n}\r\n\r\n/**\r\n * How the Tilemap works:\r\n * camera_bounds object layer determines the 'rooms' based off its position and size.\r\n * This layer also contains properties: left, right, up, down, leftConn, rightConn, upConn, downConn, and index.\r\n * The index to distinguish one room for another.\r\n * If a room has a left room then left will be true. Additionally, leftConn must have the index of the room that will be entered.\r\n * A room can have at most 4 rooms that it can enter (left, right, up, down). The appropriate bools must be true and its\r\n * connections indices must be set to the room that it is connected to.\r\n * \r\n * if upConn,leftConn,downConn,rightConn exists why need the bool?\r\n */\r\nexport class Camera {\r\n\r\n    public cameraStateShifting: Phaser.Signal = new Phaser.Signal();\r\n    public camersStateBackToNormal: Phaser.Signal = new Phaser.Signal();\r\n    public prevTarget: Entity = null;\r\n    public target: Entity = null;\r\n    public rooms: Array<Room> = new Array<Room>();\r\n    public currentRoom: Room;\r\n    public nextRoom: Room;\r\n    public fsm: StateMachine;\r\n    public goingTo: GoingTo;\r\n\r\n    constructor(public game: Phaser.Game, private myWorld: World, private camera_bounds: any) {\r\n        this.fsm = new StateMachine();\r\n        this.fsm.addState(CameraState.Regular, new RegularCameraState(this));\r\n        this.fsm.addState(CameraState.Shifting, new ShiftingCameraState(this));\r\n        this.fsm.changeState(CameraState.Regular);\r\n\r\n        for (let i = 0; i < camera_bounds.length; i++) {\r\n            // console.log('i: ' + i);\r\n            // console.log('x: ' + camera_bounds[i].x);\r\n            // console.log('y: ' + camera_bounds[i].y);\r\n            // console.log('width: ' + camera_bounds[i].width);\r\n            // console.log('height: ' + camera_bounds[i].height);\r\n            // console.log(camera_bounds[i].properties)\r\n\r\n            let x: number = camera_bounds[i].x;\r\n            let y: number = camera_bounds[i].y;\r\n            let width: number = camera_bounds[i].width;\r\n            let height: number = camera_bounds[i].height;\r\n            let left: boolean = camera_bounds[i].properties.left;\r\n            let right: boolean = camera_bounds[i].properties.right;\r\n            let up: boolean = camera_bounds[i].properties.up;\r\n            let down: boolean = camera_bounds[i].properties.down;\r\n\r\n            let isBossRoom: boolean = camera_bounds[i].properties.bossRoom;\r\n            let leftConn: number = camera_bounds[i].properties.leftConn;\r\n            let rightConn: number = camera_bounds[i].properties.rightConn;\r\n            let upConn: number = camera_bounds[i].properties.upConn;\r\n            let downConn: number = camera_bounds[i].properties.downConn;\r\n\r\n            let index: number = camera_bounds[i].properties.index;\r\n            let canGoBack: boolean = camera_bounds[i].properties.canGoBack == 'true' ? true : false;\r\n            let bounds: Phaser.Rectangle = new Phaser.Rectangle(x, y, width, height);\r\n\r\n            let hasDoorLeft: boolean = camera_bounds[i].properties.hasDoorLeft;\r\n            let hasDoorRight: boolean = camera_bounds[i].properties.hasDoorRight;\r\n            let hasDoorUp: boolean = camera_bounds[i].properties.hasDoorUp;\r\n            let hasDoorDown: boolean = camera_bounds[i].properties.hasDoorDown;\r\n\r\n            // console.log('name: ' + camera_bounds[i].name);\r\n            // console.log('index: ' + index);\r\n            // console.log('x: ' + x);\r\n            // console.log('y: ' + y);\r\n            // console.log('width: ' + width);\r\n            // console.log('height: ' + height);\r\n            // console.log('left: ' + left);\r\n            // console.log('leftConn: ' + leftConn);\r\n            // console.log('right: ' + right);\r\n            // console.log('rightConn: ' + rightConn);\r\n            // console.log('up: ' + up);\r\n            // console.log('upConn: ' + upConn);\r\n            // console.log('down: ' + down);\r\n            // console.log('downConn: ' + downConn);\r\n\r\n            let room: Room =\r\n                {\r\n                    isBossRoom: isBossRoom,\r\n                    bounds: bounds,\r\n                    left: left,\r\n                    right: right,\r\n                    up: up,\r\n                    down: down,\r\n                    leftConn: leftConn,\r\n                    rightConn: rightConn,\r\n                    upConn: upConn,\r\n                    downConn: downConn,\r\n                    index: index,\r\n                    canGoBack: canGoBack,\r\n                    hasDoorLeft: hasDoorLeft,\r\n                    hasDoorRight: hasDoorRight,\r\n                    hasDoorUp: hasDoorUp,\r\n                    hasDoorDown: hasDoorDown,\r\n                };\r\n            this.rooms.push(room);\r\n        }\r\n\r\n        // this.setCurrentRoom(0); // default room is index 0; overwrite somewhere else if needed\r\n    }\r\n\r\n    public update(): void {\r\n        this.fsm.currentState.update();\r\n    }\r\n\r\n    public setCurrentRoom(index: number): void {        \r\n        for (let i = 0; i < this.rooms.length; i++) {\r\n            if (this.rooms[i].index == index) {\r\n                this.currentRoom = this.rooms[i];\r\n                break;\r\n            }\r\n        }\r\n\r\n        if (this.currentRoom == null || this.currentRoom == undefined) {\r\n            console.error('index does not exist...make sure this room index exists in Tiled.')\r\n        }\r\n\r\n        this.game.camera.bounds = this.currentRoom.bounds;\r\n        this.game.camera.x = this.currentRoom.bounds.x;\r\n        this.game.camera.y = this.currentRoom.bounds.y;\r\n    }\r\n\r\n    public setTarget(target: Entity): void {\r\n        this.prevTarget = this.target;\r\n        this.target = target;\r\n        this.game.camera.target = target;\r\n    }\r\n\r\n    public forceCameraGo(doorDirection: string): void {\r\n        if (doorDirection == 'left') {\r\n            if (this.currentRoom.left) {\r\n                let nextRoomIndex: number = this.currentRoom.leftConn;\r\n\r\n                for (let i = 0; i < this.rooms.length; i++) {\r\n                    if (this.rooms[i].index == nextRoomIndex) {\r\n                        this.nextRoom = this.rooms[i];\r\n                        this.goingTo = GoingTo.Left;\r\n                        this.fsm.changeState(CameraState.Shifting);\r\n                        return;\r\n                    }\r\n                }\r\n\r\n            }\r\n        }\r\n\r\n        if (doorDirection == 'right') {\r\n            if (this.currentRoom.right) {\r\n                let nextRoomIndex: number = this.currentRoom.rightConn;\r\n\r\n                for (let i = 0; i < this.rooms.length; i++) {\r\n                    if (this.rooms[i].index == nextRoomIndex) {\r\n                        this.nextRoom = this.rooms[i];\r\n                        this.goingTo = GoingTo.Right;\r\n                        this.fsm.changeState(CameraState.Shifting);\r\n                        return;\r\n                    }\r\n                }\r\n\r\n            }\r\n        }\r\n\r\n        if (doorDirection == 'up') {\r\n            if (this.currentRoom.up) {\r\n                let nextRoomIndex: number = this.currentRoom.upConn;\r\n\r\n                for (let i = 0; i < this.rooms.length; i++) {\r\n                    if (this.rooms[i].index == nextRoomIndex) {\r\n                        this.nextRoom = this.rooms[i];\r\n                        this.goingTo = GoingTo.Up;\r\n                        this.fsm.changeState(CameraState.Shifting);\r\n                        return;\r\n                    }\r\n                }\r\n\r\n            }\r\n        }\r\n\r\n        if (doorDirection == 'down') {\r\n            if (this.currentRoom.down) {\r\n                let nextRoomIndex: number = this.currentRoom.downConn;\r\n\r\n                for (let i = 0; i < this.rooms.length; i++) {\r\n                    if (this.rooms[i].index == nextRoomIndex) {\r\n                        this.nextRoom = this.rooms[i];\r\n                        this.goingTo = GoingTo.Down;\r\n                        this.fsm.changeState(CameraState.Shifting);\r\n                        return;\r\n                    }\r\n                }\r\n\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nenum CameraState {\r\n    Regular = 'Regular',\r\n    Shifting = 'Shifting'\r\n}\r\n\r\nclass RegularCameraState implements State {\r\n\r\n    name: string = CameraState.Regular;\r\n    initialized: boolean;\r\n    actor: Camera;\r\n\r\n    constructor(actor: Camera) {\r\n        this.actor = actor;\r\n    }\r\n\r\n    enter(): void {\r\n        this.initialized = true;\r\n    }\r\n\r\n    update(): void {\r\n        if (this.actor.currentRoom.left) {\r\n            let leftX: number = this.actor.currentRoom.bounds.x;\r\n\r\n            if (this.actor.target.getPosition().x < leftX) {\r\n                let nextRoomIndex: number = this.actor.currentRoom.leftConn;\r\n\r\n                for (let i = 0; i < this.actor.rooms.length; i++) {\r\n                    if (this.actor.rooms[i].index == nextRoomIndex) {\r\n                        this.actor.nextRoom = this.actor.rooms[i];\r\n                        this.actor.goingTo = GoingTo.Left;\r\n                        this.actor.fsm.changeState(CameraState.Shifting);\r\n                        return;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        if (this.actor.currentRoom.right) {\r\n            let rightX: number = this.actor.currentRoom.bounds.x + this.actor.currentRoom.bounds.width;\r\n\r\n            if (this.actor.target.getPosition().x > rightX) {\r\n                let nextRoomIndex: number = this.actor.currentRoom.rightConn;\r\n\r\n                for (let i = 0; i < this.actor.rooms.length; i++) {\r\n                    if (this.actor.rooms[i].index == nextRoomIndex) {\r\n                        this.actor.nextRoom = this.actor.rooms[i];\r\n                        this.actor.goingTo = GoingTo.Right;\r\n                        this.actor.fsm.changeState(CameraState.Shifting);\r\n                        return;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        if (this.actor.currentRoom.down) {\r\n            // Take into account the camera targets height.\r\n            let downY: number = this.actor.currentRoom.bounds.y + this.actor.currentRoom.bounds.height + 10;\r\n\r\n            if (this.actor.target.getPosition().y > downY) {\r\n                let nextRoomIndex: number = this.actor.currentRoom.downConn;\r\n\r\n                for (let i = 0; i < this.actor.rooms.length; i++) {\r\n                    if (this.actor.rooms[i].index == nextRoomIndex) {\r\n                        this.actor.nextRoom = this.actor.rooms[i];\r\n                        this.actor.goingTo = GoingTo.Down;\r\n                        this.actor.fsm.changeState(CameraState.Shifting);\r\n                        return;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        if (this.actor.currentRoom.up) {\r\n            // Take into account the camera targets height.\r\n            let upY: number = this.actor.currentRoom.bounds.y + 10;\r\n\r\n            if (this.actor.target.getPosition().y < upY) {\r\n                let nextRoomIndex: number = this.actor.currentRoom.upConn;\r\n\r\n                for (let i = 0; i < this.actor.rooms.length; i++) {\r\n                    if (this.actor.rooms[i].index == nextRoomIndex) {\r\n                        this.actor.nextRoom = this.actor.rooms[i];\r\n                        this.actor.goingTo = GoingTo.Up;\r\n                        this.actor.fsm.changeState(CameraState.Shifting);\r\n                        return;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    exit(): void {\r\n        this.initialized = false;\r\n    }\r\n}\r\n\r\nclass ShiftingCameraState implements State {\r\n\r\n    name: string = CameraState.Shifting;\r\n    initialized: boolean;\r\n    actor: Camera;\r\n    startX: number = 0;\r\n    startY: number = 0;\r\n    endX: number = 0;\r\n    endY: number = 0;\r\n    elapsedTime: number = 0;\r\n    endTime: number = 1500;\r\n\r\n    constructor(actor: Camera) {\r\n        this.actor = actor;\r\n    }\r\n\r\n    enter(): void {\r\n        this.initialized = true;\r\n        this.actor.setTarget(null);\r\n\r\n        switch (this.actor.goingTo) {\r\n            case GoingTo.Left:\r\n                this.startX = this.actor.currentRoom.bounds.x;\r\n                this.endX = this.actor.currentRoom.bounds.x - 256;\r\n                break;\r\n\r\n            case GoingTo.Right:\r\n                this.startX = this.actor.currentRoom.bounds.x + this.actor.currentRoom.bounds.width - 256;\r\n                this.endX = this.actor.nextRoom.bounds.x;\r\n                break;\r\n\r\n            case GoingTo.Down:\r\n                this.startY = this.actor.currentRoom.bounds.y + this.actor.currentRoom.bounds.height - 240;\r\n                this.endY = this.actor.nextRoom.bounds.y;\r\n                break;\r\n\r\n            case GoingTo.Up:\r\n                this.startY = this.actor.currentRoom.bounds.y;\r\n                this.endY = this.actor.currentRoom.bounds.y - 240;\r\n                break;\r\n        }\r\n\r\n        this.actor.game.camera.bounds = new Phaser.Rectangle(0, 0, 6000, 6000); // make the bounds 'unlimited' for now\r\n        this.actor.cameraStateShifting.dispatch();\r\n    }\r\n\r\n    update(): void {\r\n        this.elapsedTime += this.actor.game.time.elapsedMS;\r\n\r\n        switch (this.actor.goingTo) {\r\n            case GoingTo.Left:\r\n            case GoingTo.Right:\r\n                this.doHorizontalScroll();\r\n                break;\r\n\r\n            case GoingTo.Down:\r\n            case GoingTo.Up:\r\n                this.doVerticalScroll();\r\n                break;\r\n        }\r\n    }\r\n\r\n    exit(): void {\r\n        this.initialized = false;\r\n        this.elapsedTime = 0;\r\n    }\r\n\r\n    private doHorizontalScroll(): void {\r\n        let finalX: number = MathUtil.lerp(this.startX, this.endX, this.elapsedTime / this.endTime)\r\n        this.actor.game.camera.x = finalX;\r\n\r\n        if (this.elapsedTime > this.endTime) {\r\n            this.actor.game.camera.x = finalX\r\n            this.actor.currentRoom = this.actor.nextRoom;\r\n            this.actor.game.camera.bounds = this.actor.currentRoom.bounds;\r\n            this.actor.setTarget(this.actor.prevTarget);\r\n            this.actor.camersStateBackToNormal.dispatch();\r\n            this.actor.fsm.changeState(CameraState.Regular);\r\n        }\r\n    }\r\n\r\n    private doVerticalScroll(): void {\r\n        let finalY: number = MathUtil.lerp(this.startY, this.endY, this.elapsedTime / this.endTime)\r\n        this.actor.game.camera.y = finalY;\r\n\r\n        if (this.elapsedTime > this.endTime) {\r\n            this.actor.game.camera.y = finalY\r\n            this.actor.currentRoom = this.actor.nextRoom;\r\n            this.actor.game.camera.bounds = this.actor.currentRoom.bounds;\r\n            this.actor.setTarget(this.actor.prevTarget);\r\n            this.actor.camersStateBackToNormal.dispatch();\r\n            this.actor.fsm.changeState(CameraState.Regular);\r\n        }\r\n    }\r\n}","import { EntityManager } from './managers/entityManager'\r\nimport { CollisionManager } from './managers/collisionManager'\r\nimport { Entity } from './entity'\r\nimport { EntityType } from './konstants'\r\n\r\nexport enum RespawnLocation {\r\n    Original = 'Original',\r\n    LeftSideOfScreen = 'LeftSideOfScreen',\r\n    RightSideOfScreen = 'RightSideOfScreen'\r\n}\r\n\r\nexport interface Spawner {\r\n    game: Phaser.Game,\r\n    x: number;\r\n    y: number;\r\n    width: number;\r\n    height: number;\r\n    rotation: number;\r\n    entityManager: EntityManager;\r\n    collisionManager: CollisionManager;\r\n    entityType: EntityType;\r\n    isSpawnerOnScreen: boolean;\r\n    entities: Array<Entity>;\r\n    canLoop: boolean;\r\n    loopElapsedTime: number;\r\n    loopEndTime: number;\r\n    respawnLocation: RespawnLocation;\r\n    maxEntitiesAllowedPerLoop: number;\r\n    useDistanceCheck: boolean;\r\n    withinPlayerDistanceX: number;\r\n    withinPlayerDistanceY: number;\r\n    properties: any;                       // Custom properties from Tiled.\r\n}","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(0);\n",""],"names":[],"sourceRoot":""}